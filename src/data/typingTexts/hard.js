export const hardTexts = [
  "Асинхронное программирование в JavaScript реализуется через промисы и async/await конструкции",
  "Виртуальная DOM в React позволяет эффективно обновлять пользовательский интерфейс",
  "Паттерн наблюдатель широко используется в событийно-ориентированных архитектурах",
  "Мемоизация функций может значительно улучшить производительность рекурсивных алгоритмов",
  "Иммутабельность данных снижает количество ошибок в многопоточных приложениях",
  "Реактивное программирование основывается на потоках данных и распространении изменений",
  "Микросервисная архитектура требует тщательного планирования сетевых взаимодействий",
  "Контейнеризация приложений упрощает развертывание в различных средах",
  "Принципы SOLID помогают создавать гибкие и расширяемые системы",
  "Монады в функциональном программировании инкапсулируют вычисления с побочными эффектами",
  "Инверсия зависимостей позволяет создавать слабосвязанные компоненты системы",
  "Фабричный метод абстрагирует процесс создания объектов от их типов",
  "Декораторы позволяют расширять функциональность классов без изменения их кода",
  "Адаптер преобразует интерфейс одного класса в интерфейс ожидаемый клиентом",
  "Фасад предоставляет унифицированный интерфейс к группе интерфейсов подсистемы",
  "Стратегия определяет семейство алгоритмов инкапсулируя каждый из них и делая их взаимозаменяемыми",
  "Шина событий реализует централизованную систему обработки сообщений между компонентами",
  "Цепочка ответственности передает запрос по цепочке потенциальных обработчиков",
  "Команда инкапсулирует запрос как объект позволяя параметризовать клиентов с различными запросами",
  "Прототип позволяет копировать объекты не вдаваясь в детали их реализации",
  "Состояние позволяет объекту изменять свое поведение при изменении внутреннего состояния",
  "Посетитель позволяет определить операцию выполняемую над элементами структуры объектов",
  "Мост разделяет абстракцию и реализацию позволяя им изменяться независимо",
  "Компоновщик позволяет клиентам единообразно трактовать как отдельные объекты так и группы объектов",
  "Прокси предоставляет суррогатный объект управляющий доступом к другому объекту",
  "Одиночка гарантирует что у класса есть только один экземпляр и предоставляет глобальную точку доступа к нему",
  "Строитель отделяет конструирование сложного объекта от его представления",
  "Абстрактная фабрика предоставляет интерфейс для создания семейств взаимосвязанных или взаимозависимых объектов",
  "Наблюдатель определяет зависимость один ко многим между объектами так что при изменении состояния одного объекта",
  "Итератор предоставляет способ последовательного доступа к элементам составного объекта не раскрывая его внутреннего представления"
];