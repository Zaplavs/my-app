export default [
  {
    q: "Что такое Python и в чём его особенности?",
    a: "Python — это высокоуровневый, интерпретируемый язык программирования с простым и понятным синтаксисом. Особенности: динамическая типизация, автоматическое управление памятью, богатая стандартная библиотека, поддержка нескольких парадигм (процедурная, объектно-ориентированная, функциональная).",
    tags: ["введение", "особенности"],
    level: "junior"
  },
  {
    q: "Какие типы данных есть в Python?",
    a: "Основные типы данных: числа (int, float), строки (str), логические значения (bool), списки (list), кортежи (tuple), словари (dict), множества (set).",
    tags: ["типы данных", "базовые концепции"],
    level: "junior"
  },
  {
    q: "В чём разница между списком и кортежем?",
    a: "Список (list) — изменяемый тип данных, позволяет добавлять, удалять и изменять элементы. Кортеж (tuple) — неизменяемый, после создания его содержимое нельзя изменить.",
    tags: ["списки", "кортежи", "коллекции"],
    level: "junior"
  },
  {
    q: "Что такое переменная в Python?",
    a: "Переменная — это имя, которое ссылается на значение в памяти. В Python переменные не имеют типа, они просто указывают на объект, который имеет свой тип.",
    tags: ["переменные", "синтаксис"],
    level: "junior"
  },
  {
    q: "Как объявить функцию в Python?",
    a: "Функция объявляется с помощью ключевого слова def, затем указывается имя и круглые скобки для аргументов. Пример: def my_function():",
    tags: ["функции", "синтаксис"],
    level: "junior"
  },
  {
    q: "Для чего используется ключевое слово return?",
    a: "Ключевое слово return завершает выполнение функции и возвращает значение обратно туда, где она была вызвана.",
    tags: ["функции", "возврат значений"],
    level: "junior"
  },
  {
    q: "Что такое цикл for и как он работает?",
    a: "Цикл for используется для итерации по последовательности (список, строка, кортеж и т.д.). Он выполняет блок кода для каждого элемента последовательности.",
    tags: ["циклы", "итерация"],
    level: "junior"
  },
  {
    q: "Что такое условный оператор if-else?",
    a: "if-else — это конструкция, которая позволяет выполнять разные блоки кода в зависимости от истинности условия.",
    tags: ["условия", "ветвление"],
    level: "junior"
  },
  {
    q: "Как работают строки в Python? Как их можно форматировать?",
    a: "Строки в Python — это последовательности символов. Их можно форматировать с помощью f-строк (f'Hello {name}'), метода .format(), или оператора %.",
    tags: ["строки", "форматирование"],
    level: "junior"
  },
  {
    q: "Как работает оператор сравнения == и is?",
    a: "'==' сравнивает значения объектов, 'is' проверяет, ссылаются ли две переменные на один и тот же объект в памяти.",
    tags: ["операторы", "сравнение"],
    level: "junior"
  },
  {
    q: "Что такое None и для чего он используется?",
    a: "None — это специальное значение в Python, обозначающее отсутствие значения. Чаще всего используется для инициализации переменных или возврата из функций, когда результат не важен.",
    tags: ["значения", "none"],
    level: "junior"
  },
  {
    q: "Как прочитать данные с клавиатуры в Python?",
    a: "Для этого используется функция input(). Она возвращает строку, которую пользователь ввёл с клавиатуры.",
    tags: ["ввод", "консоль"],
    level: "junior"
  },
  {
    q: "Как преобразовать строку в число?",
    a: "Можно использовать функции int() или float(). Например: age = int(input('Введите возраст'))",
    tags: ["типы данных", "преобразование"],
    level: "junior"
  },
  {
    q: "Что такое словарь и как с ним работать?",
    a: "Словарь (dict) — это коллекция пар ключ-значение. Доступ к значениям осуществляется по ключу. Пример: my_dict = {'name': 'John'}",
    tags: ["словари", "коллекции"],
    level: "junior"
  },
  {
    q: "Как добавить элемент в список?",
    a: "Для этого используется метод append(). Например: my_list.append(10)",
    tags: ["списки", "методы"],
    level: "junior"
  },
  {
    q: "Как удалить элемент из списка?",
    a: "Можно использовать метод remove() (по значению) или del (по индексу). Пример: my_list.remove(5) или del my_list[0]",
    tags: ["списки", "методы"],
    level: "junior"
  },
  {
    q: "Что такое индексация и срезы в Python?",
    a: "Индексация — это способ доступа к элементам последовательности по номеру. Срезы позволяют получать часть последовательности: например, my_list[1:4]",
    tags: ["индексация", "срезы"],
    level: "junior"
  },
  {
    q: "Как проверить тип переменной?",
    a: "Для этого используется функция type(). Например: type(x) вернёт тип переменной x.",
    tags: ["типы", "type"],
    level: "junior"
  },
  {
    q: "Что означает выражение 'Everything is an object' в Python?",
    a: "Это значит, что всё в Python — объекты: числа, строки, функции, даже классы. Они могут иметь атрибуты и методы.",
    tags: ["объекты", "парадигмы"],
    level: "junior"
  },
  {
    q: "Как открыть файл в Python?",
    a: "Файл открывается с помощью функции open(). Рекомендуется использовать контекстный менеджер with: with open('file.txt') as f:",
    tags: ["файлы", "работа с файлами"],
    level: "junior"
  },
  {
    q: "Как установить стороннюю библиотеку в Python?",
    a: "Для установки используется pip — менеджер пакетов. Пример: pip install requests",
    tags: ["библиотеки", "pip"],
    level: "junior"
  },
  {
    q: "Что такое virtual environment и зачем он нужен?",
    a: "Virtual environment — это изолированная среда выполнения, в которой можно устанавливать зависимости, не мешая глобальной системе. Это полезно при работе над несколькими проектами.",
    tags: ["окружение", "venv"],
    level: "junior"
  },
  {
    q: "Как создать виртуальное окружение?",
    a: "С помощью команды python -m venv env. Активация зависит от ОС: source env/bin/activate (Linux/macOS), env\\Scripts\\activate (Windows)",
    tags: ["окружение", "venv"],
    level: "junior"
  },
  {
    q: "Что такое модуль и как его импортировать?",
    a: "Модуль — это файл с расширением .py. Его можно импортировать с помощью import. Например: import math",
    tags: ["модули", "импорт"],
    level: "junior"
  },
  {
    q: "Как вывести текст на экран в Python?",
    a: "Для этого используется функция print(). Например: print('Привет, мир!')",
    tags: ["вывод", "консоль"],
    level: "junior"
  }
];