export default [
  {
    q: "Что такое указатель в C++?",
    a: "Указатель — это переменная, которая хранит адрес другой переменной в памяти. Указатели позволяют напрямую управлять памятью и эффективно работать с данными."
  },
  {
    q: "Что такое ссылка в C++ и чем она отличается от указателя?",
    a: "Ссылка — это альтернативное имя для существующей переменной. В отличие от указателя, ссылка не может быть изменена после инициализации и не может быть нулевой (до C++11)."
  },
  {
    q: "Что такое структура (struct) и класс (class) в C++? Чем они отличаются?",
    a: "И struct, и class используются для создания пользовательских типов данных. Основное отличие — члены struct по умолчанию public, а в class — private."
  },
  {
    q: "Что такое конструктор и деструктор в C++?",
    a: "Конструктор — это специальный метод, вызываемый при создании объекта класса. Деструктор вызывается при уничтожении объекта и используется для освобождения ресурсов."
  },
  {
    q: "Какие спецификаторы доступа существуют в C++?",
    a: "public — доступен из любого места, private — доступен только внутри класса, protected — доступен внутри класса и его дочерних классах."
  },
  {
    q: "Что такое перегрузка функций в C++?",
    a: "Перегрузка позволяет иметь несколько функций с одинаковым именем, но разными параметрами. Компилятор выбирает подходящую версию на основе переданных аргументов."
  },
  {
    q: "Что такое перегрузка операторов в C++?",
    a: "Это возможность определить поведение стандартных операторов (+, -, == и т.д.) для пользовательских типов данных."
  },
  {
    q: "Что такое шаблоны (templates) в C++?",
    a: "Шаблоны позволяют писать обобщённый код, который работает с любыми типами данных. Они реализуются через template<typename T> или template<class T>."
  },
  {
    q: "Что такое статическая переменная-член класса?",
    a: "Статическая переменная принадлежит всему классу, а не конкретному экземпляру. Она общая для всех объектов класса и должна быть определена вне объявления класса."
  },
  {
    q: "Что такое статический метод класса?",
    a: "Статический метод принадлежит классу, а не объекту. Он может обращаться только к статическим членам класса и вызывается через имя класса."
  },
  {
    q: "Что такое наследование в C++?",
    a: "Наследование — это механизм, позволяющий одному классу (производному) наследовать свойства и методы другого класса (базового). Это поддерживает повторное использование кода."
  },
  {
    q: "Что такое виртуальные функции в C++?",
    a: "Виртуальная функция позволяет переопределять методы в производных классах и вызывать их через указатель или ссылку на базовый класс, обеспечивая полиморфизм."
  },
  {
    q: "Что такое абстрактный класс в C++?",
    a: "Абстрактный класс — это класс, содержащий хотя бы одну чисто виртуальную функцию (pure virtual function). Объекты такого класса нельзя создавать."
  },
  {
    q: "Что такое чисто виртуальная функция?",
    a: "Чисто виртуальная функция — это виртуальная функция без реализации, объявляемая как = 0. Она заставляет производные классы реализовать эту функцию."
  },
  {
    q: "Что такое пространство имён (namespace)?",
    a: "Пространство имён используется для группировки имен (функций, классов, переменных), чтобы избежать конфликтов имён. Например: namespace MyNamespace { ... }."
  },
  {
    q: "Что такое RAII в C++?",
    a: "RAII (Resource Acquisition Is Initialization) — это идиома управления ресурсами, при которой ресурсы выделяются в конструкторе и освобождаются в деструкторе."
  },
  {
    q: "Что такое умные указатели и какие виды умных указателей есть в C++?",
    a: "Умные указатели автоматически управляют памятью. В C++ есть std::unique_ptr (единственное владение), std::shared_ptr (разделяемое владение) и std::weak_ptr (неналичие владения)."
  },
  {
    q: "Что такое move-семантика в C++11?",
    a: "Move-семантика позволяет перемещать ресурсы вместо их копирования. Используется с помощью rvalue-ссылок (T&&) и функции std::move()."
  },
  {
    q: "Что такое lvalue и rvalue в C++?",
    a: "lvalue — выражение, которое имеет имя и может стоять слева от присваивания. rvalue — временный объект, который обычно стоит справа от присваивания."
  },
  {
    q: "Что такое перечисление (enum) в C++?",
    a: "Enum — это пользовательский тип, состоящий из множества именованных целочисленных констант. Существует enum class (строго типизированный) и обычный enum."
  },
  {
    q: "Что такое STL и какие основные компоненты она включает?",
    a: "STL (Standard Template Library) — библиотека стандартных шаблонов. Включает контейнеры (vector, map), алгоритмы (sort, find), итераторы и адаптеры."
  },
  {
    q: "Что такое контейнеры в STL и какие виды существуют?",
    a: "Контейнеры хранят данные. Последовательные (vector, list, deque), ассоциативные (set, map, multiset, multimap), и адаптеры (stack, queue, priority_queue)."
  },
  {
    q: "Что такое итераторы в STL?",
    a: "Итераторы предоставляют доступ к элементам контейнеров. Они действуют как указатели и позволяют обходить элементы и манипулировать ими."
  },
  {
    q: "Что такое исключения в C++ и как они используются?",
    a: "Исключения используются для обработки ошибок. Блок try-catch перехватывает исключения, выброшенные через throw. Однако в C++ часто предпочитают проверку возвращаемых значений."
  },
  {
    q: "Что такое inline-функции?",
    a: "Inline-функции предлагаются компилятору для встраивания кода вместо вызова функции, что может повысить производительность за счет увеличения размера кода."
  },
  {
    q: "Что такое preprocessor в C++?",
    a: "Препроцессор — это часть компилятора, которая обрабатывает директивы (#include, #define, #ifdef) до начала компиляции кода."
  },
  {
    q: "Что такое перегрузка оператора new/delete?",
    a: "Можно переопределять операторы new и delete глобально или в классе для управления выделением и освобождением памяти."
  },
  {
    q: "Что такое const-квалификатор в методах класса?",
    a: "const после объявления метода означает, что метод не изменяет состояние объекта. Такие методы можно вызывать на const-объектах."
  },
  {
    q: "Что такое делегирующие конструкторы?",
    a: "Делегирующий конструктор вызывает другой конструктор того же класса для повторного использования кода инициализации."
  },
  {
    q: "Что такое override и final в C++11?",
    a: "override гарантирует, что метод действительно переопределяет виртуальный метод базового класса. final запрещает дальнейшее переопределение метода или наследование класса."
  }
];