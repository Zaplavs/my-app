export default [
  {
    question: "Какой ключевое слово используется для определения класса в C#?",
    options: ["class", "Class", "define", "struct"],
    answer: "class",
    explanation: {
      correct: "В C# для определения класса используется ключевое слово 'class'",
      incorrect: "Неверно, в C# для создания класса используется ключевое слово 'class' с маленькой буквы"
    }
  },
  {
    question: "Какой метод является точкой входа в C# приложение?",
    options: ["Main()", "main()", "Start()", "Run()"],
    answer: "Main()",
    explanation: {
      correct: "Метод Main() является точкой входа в C# приложение и должен быть статическим",
      incorrect: "Неверно, точкой входа в C# приложении является метод Main() с заглавной буквы"
    }
  },
  {
    question: "Какой тип данных используется для хранения целых чисел в C#?",
    options: ["int", "integer", "number", "Int32"],
    answer: "int",
    explanation: {
      correct: "Тип int используется для хранения целых чисел в C# (является псевдонимом для System.Int32)",
      incorrect: "Неверно, в C# для целых чисел используется тип int"
    }
  },
  {
    question: "Как объявить переменную в C#?",
    options: ["тип имя;", "var имя;", "let имя;", "const имя;"],
    answer: "тип имя;",
    explanation: {
      correct: "В C# переменная объявляется как тип данных, за которым следует имя переменной, например: int age;",
      incorrect: "Неверно, в C# сначала указывается тип данных, затем имя переменной"
    }
  },
  {
    question: "Какой оператор используется для создания нового объекта в C#?",
    options: ["new", "create", "instance", "object"],
    answer: "new",
    explanation: {
      correct: "Оператор new используется для создания нового экземпляра объекта в C#",
      incorrect: "Неверно, для создания нового объекта в C# используется оператор new"
    }
  },
  {
    question: "Какой ключевое слово используется для наследования в C#?",
    options: [":", "extends", "inherits", "implements"],
    answer: ":",
    explanation: {
      correct: "В C# для наследования класса используется двоеточие, например: class Derived : Base",
      incorrect: "Неверно, в C# для наследования используется двоеточие"
    }
  },
  {
    question: "Какой тип данных используется для хранения логических значений в C#?",
    options: ["bool", "boolean", "logical", "bit"],
    answer: "bool",
    explanation: {
      correct: "Тип данных bool используется для хранения логических значений true и false в C#",
      incorrect: "Неверно, в C# для логических значений используется тип bool"
    }
  },
  {
    question: "Какой цикл используется для перебора элементов массива в C#?",
    options: ["foreach", "for", "while", "do-while"],
    answer: "foreach",
    explanation: {
      correct: "Цикл foreach используется для удобного перебора элементов массива или коллекции в C#",
      incorrect: "Неверно, для перебора элементов массива в C# удобно использовать цикл foreach"
    }
  },
  {
    question: "Какой метод используется для вывода текста в консоль в C#?",
    options: ["Console.WriteLine()", "Console.log()", "print()", "System.out.println()"],
    answer: "Console.WriteLine()",
    explanation: {
      correct: "Метод Console.WriteLine() используется для вывода текста в консоль в C#",
      incorrect: "Неверно, в C# для вывода в консоль используется Console.WriteLine()"
    }
  },
  {
    question: "Какой ключевое слово используется для определения константы в C#?",
    options: ["const", "readonly", "final", "static"],
    answer: "const",
    explanation: {
      correct: "Ключевое слово const используется для определения константы в C#, значение которой должно быть известно на этапе компиляции",
      incorrect: "Неверно, в C# для создания константы используется ключевое слово const"
    }
  },
  {
    question: "Какой тип данных используется для хранения дробных чисел в C#?",
    options: ["double", "float", "decimal", "real"],
    answer: "double",
    explanation: {
      correct: "Тип double используется для хранения дробных чисел с двойной точностью в C#",
      incorrect: "Неверно, для дробных чисел в C# чаще всего используется тип double"
    }
  },
  {
    question: "Какой ключевое слово используется для определения метода, который не возвращает значение?",
    options: ["void", "null", "none", "empty"],
    answer: "void",
    explanation: {
      correct: "Ключевое слово void используется для указания, что метод не возвращает значение",
      incorrect: "Неверно, в C# для методов без возвращаемого значения используется тип void"
    }
  },
  {
    question: "Какой оператор используется для сравнения двух значений на равенство?",
    options: ["==", "=", "!=", "<>"],
    answer: "==",
    explanation: {
      correct: "Оператор == используется для сравнения двух значений на равенство в C#",
      incorrect: "Неверно, для сравнения на равенство используется ==, а = - для присваивания"
    }
  },
  {
    question: "Какой тип данных представляет один символ в C#?",
    options: ["char", "string", "text", "byte"],
    answer: "char",
    explanation: {
      correct: "Тип char используется для хранения одного символа в C#",
      incorrect: "Неверно, для хранения одного символа в C# используется тип char"
    }
  },
  {
    question: "Какой ключевое слово используется для обращения к текущему объекту в C#?",
    options: ["this", "self", "current", "object"],
    answer: "this",
    explanation: {
      correct: "Ключевое слово this используется для обращения к текущему объекту в C#",
      incorrect: "Неверно, в C# для ссылки на текущий объект используется ключевое слово this"
    }
  },
  {
    question: "Какой тип данных используется для хранения строки в C#?",
    options: ["string", "String", "char[]", "text"],
    answer: "string",
    explanation: {
      correct: "Ключевое слово string используется для хранения строк в C# (является псевдонимом для System.String)",
      incorrect: "Неверно, в C# для строк используется ключевое слово string"
    }
  },
  {
    question: "Какой оператор используется для проверки условий в C#?",
    options: ["if", "when", "switch", "case"],
    answer: "if",
    explanation: {
      correct: "Оператор if используется для проверки условий и выполнения кода при их выполнении",
      incorrect: "Неверно, для проверки условий в C# используется оператор if"
    }
  },
  {
    question: "Какой ключевое слово используется для определения интерфейса в C#?",
    options: ["interface", "class", "abstract", "protocol"],
    answer: "interface",
    explanation: {
      correct: "Ключевое слово interface используется для определения интерфейса в C#",
      incorrect: "Неверно, для определения интерфейса в C# используется ключевое слово interface"
    }
  },
  {
    question: "Какой метод используется для получения длины строки в C#?",
    options: ["Length", "length()", "size()", "Count()"],
    answer: "Length",
    explanation: {
      correct: "Свойство Length возвращает количество символов в строке в C#",
      incorrect: "Неверно, для получения длины строки в C# используется свойство Length (не метод)"
    }
  },
  {
    question: "Какой ключевое слово используется для определения свойства в классе?",
    options: ["get/set", "property", "accessor", "field"],
    answer: "get/set",
    explanation: {
      correct: "В C# свойства определяются с помощью блоков get и set для получения и установки значения",
      incorrect: "Неверно, в C# свойства определяются с помощью методов доступа get и set"
    }
  },
  {
    question: "Какой оператор используется для выхода из метода и возврата значения?",
    options: ["return", "break", "exit", "stop"],
    answer: "return",
    explanation: {
      correct: "Ключевое слово return используется для завершения метода и возврата значения в C#",
      incorrect: "Неверно, для возврата значения из метода в C# используется ключевое слово return"
    }
  },
  {
    question: "Какой цикл гарантирует выполнение тела хотя бы один раз?",
    options: ["do-while", "while", "for", "foreach"],
    answer: "do-while",
    explanation: {
      correct: "Цикл do-while сначала выполняет тело, а затем проверяет условие, поэтому он выполняется хотя бы один раз",
      incorrect: "Неверно, цикл do-while гарантирует выполнение тела хотя бы один раз"
    }
  },
  {
    question: "Какой ключевое слово используется для доступа к методам родительского класса?",
    options: ["base", "this", "parent", "super"],
    answer: "base",
    explanation: {
      correct: "Ключевое слово base используется для вызова методов и конструктора родительского класса в C#",
      incorrect: "Неверно, для доступа к методам родительского класса в C# используется ключевое слово base"
    }
  },
  {
    question: "Какой тип данных имеет размер 4 байта и диапазон от -2,147,483,648 до 2,147,483,647?",
    options: ["int", "short", "long", "byte"],
    answer: "int",
    explanation: {
      correct: "Тип данных int занимает 4 байта и имеет указанный диапазон значений в C#",
      incorrect: "Неверно, тип int имеет размер 4 байта и указанный диапазон значений"
    }
  },
  {
    question: "Какой метод используется для преобразования строки в целое число?",
    options: ["int.Parse()", "Convert.ToInt32()", "Int32.TryParse()", "все перечисленные"],
    answer: "все перечисленные",
    explanation: {
      correct: "В C# есть несколько способов преобразования строки в число: int.Parse(), Convert.ToInt32() и Int32.TryParse()",
      incorrect: "Неверно, в C# существует несколько методов для преобразования строки в число, включая Parse, Convert и TryParse"
    }
  },
  {
    question: "Какой ключевое слово используется для определения абстрактного класса?",
    options: ["abstract", "interface", "virtual", "partial"],
    answer: "abstract",
    explanation: {
      correct: "Ключевое слово abstract используется для определения абстрактного класса или метода в C#",
      incorrect: "Неверно, для определения абстрактного класса в C# используется ключевое слово abstract"
    }
  },
  {
    question: "Какой оператор используется для проверки принадлежности объекта к типу?",
    options: ["is", "as", "typeof", "instanceof"],
    answer: "is",
    explanation: {
      correct: "Оператор is проверяет, является ли объект экземпляром указанного типа",
      incorrect: "Неверно, для проверки типа объекта в C# используется оператор is"
    }
  },
  {
    question: "Какой ключевое слово используется для определения метода, который может быть переопределен в производном классе?",
    options: ["virtual", "override", "abstract", "sealed"],
    answer: "virtual",
    explanation: {
      correct: "Ключевое слово virtual позволяет методу быть переопределенным в производных классах",
      incorrect: "Неверно, для методов, которые могут быть переопределены, используется ключевое слово virtual"
    }
  },
  {
    question: "Какой ключевое слово используется для определения пространства имен?",
    options: ["namespace", "using", "import", "module"],
    answer: "namespace",
    explanation: {
      correct: "Ключевое слово namespace используется для определения пространства имен в C#",
      incorrect: "Неверно, для определения пространства имен в C# используется ключевое слово namespace"
    }
  },
  {
    question: "Какой оператор используется для подключения пространства имен?",
    options: ["using", "import", "include", "require"],
    answer: "using",
    explanation: {
      correct: "Директива using позволяет использовать элементы пространства имен без полного квалифицированного имени",
      incorrect: "Неверно, для подключения пространства имен в C# используется директива using"
    }
  }
];