export default [
  {
    question: "Какой оператор используется для вывода данных в консоль в C++?",
    options: ["cout", "print", "console.log", "System.out"],
    answer: "cout",
    explanation: {
      correct: "В C++ для вывода данных используется объект cout из библиотеки iostream",
      incorrect: "Неверно, в C++ для вывода в консоль используется cout с оператором <<"
    }
  },
  {
    question: "Какой заголовочный файл нужно включить для использования cout и cin?",
    options: ["<iostream>", "<stdio.h>", "<conio.h>", "<stdlib.h>"],
    answer: "<iostream>",
    explanation: {
      correct: "Для использования объектов ввода-вывода cout и cin необходимо включить заголовочный файл <iostream>",
      incorrect: "Неверно, для cout и cin требуется заголовочный файл <iostream>"
    }
  },
  {
    question: "Как объявить переменную целого типа в C++?",
    options: ["int", "integer", "number", "var"],
    answer: "int",
    explanation: {
      correct: "Для объявления переменной целого типа в C++ используется ключевое слово int",
      incorrect: "Неверно, в C++ для целых чисел используется тип int"
    }
  },
  {
    question: "Какой оператор используется для ввода данных от пользователя?",
    options: ["cin", "input", "scanf", "read"],
    answer: "cin",
    explanation: {
      correct: "Для ввода данных от пользователя в C++ используется объект cin с оператором >>",
      incorrect: "Неверно, в C++ для ввода данных используется cin"
    }
  },
  {
    question: "Какой символ используется для комментариев в одной строке?",
    options: ["//", "/*", "#", "--"],
    answer: "//",
    explanation: {
      correct: "В C++ для однострочных комментариев используется //",
      incorrect: "Неверно, в C++ однострочные комментарии начинаются с //"
    }
  },
  {
    question: "Какой тип данных используется для хранения действительных чисел?",
    options: ["float", "int", "char", "bool"],
    answer: "float",
    explanation: {
      correct: "Тип float используется для хранения чисел с плавающей точкой (дробных чисел)",
      incorrect: "Неверно, для дробных чисел в C++ используется тип float или double"
    }
  },
  {
    question: "Какой оператор используется для присваивания значения переменной?",
    options: ["=", "==", ":=", "->"],
    answer: "=",
    explanation: {
      correct: "Оператор = используется для присваивания значения переменной в C++",
      incorrect: "Неверно, оператор присваивания в C++ - это =, а == используется для сравнения"
    }
  },
  {
    question: "Какой ключевое слово используется для определения константы в C++?",
    options: ["const", "final", "static", "readonly"],
    answer: "const",
    explanation: {
      correct: "Ключевое слово const используется для объявления констант в C++",
      incorrect: "Неверно, в C++ для констант используется ключевое слово const"
    }
  },
  {
    question: "Какой оператор используется для сравнения двух значений на равенство?",
    options: ["==", "=", "!=", "<>"],
    answer: "==",
    explanation: {
      correct: "Оператор == используется для сравнения двух значений на равенство в C++",
      incorrect: "Неверно, для сравнения на равенство используется ==, а = - для присваивания"
    }
  },
  {
    question: "Какой тип данных используется для хранения одного символа?",
    options: ["char", "string", "text", "byte"],
    answer: "char",
    explanation: {
      correct: "Тип char используется для хранения одного символа в C++",
      incorrect: "Неверно, для одного символа в C++ используется тип char"
    }
  },
  {
    question: "Какой оператор используется для создания условного ветвления?",
    options: ["if", "when", "switch", "case"],
    answer: "if",
    explanation: {
      correct: "Оператор if используется для условного выполнения кода в C++",
      incorrect: "Неверно, для условных ветвлений в C++ используется оператор if"
    }
  },
  {
    question: "Какой цикл выполняется хотя бы один раз?",
    options: ["do-while", "while", "for", "foreach"],
    answer: "do-while",
    explanation: {
      correct: "Цикл do-while сначала выполняет тело, а затем проверяет условие, поэтому он выполняется хотя бы один раз",
      incorrect: "Неверно, цикл do-while гарантирует выполнение тела хотя бы один раз"
    }
  },
  {
    question: "Какой оператор используется для выхода из цикла?",
    options: ["break", "exit", "return", "stop"],
    answer: "break",
    explanation: {
      correct: "Оператор break используется для немедленного выхода из цикла в C++",
      incorrect: "Неверно, для выхода из цикла в C++ используется оператор break"
    }
  },
  {
    question: "Как объявить массив из 5 целых чисел?",
    options: ["int arr[5];", "int arr(5);", "array<int> arr[5];", "int arr = new int[5];"],
    answer: "int arr[5];",
    explanation: {
      correct: "Массив из 5 целых чисел объявляется как int arr[5];",
      incorrect: "Неверно, в C++ массив фиксированного размера объявляется с квадратными скобками"
    }
  },
  {
    question: "Какой индекс имеет первый элемент массива?",
    options: ["0", "1", "начинается с названия", "зависит от типа"],
    answer: "0",
    explanation: {
      correct: "В C++ индексация массивов начинается с 0, поэтому первый элемент имеет индекс 0",
      incorrect: "Неверно, в C++ массивы индексируются с 0, поэтому первый элемент - с индексом 0"
    }
  },
  {
    question: "Какой заголовочный файл нужен для использования функции sqrt()?",
    options: ["<cmath>", "<math.h>", "<stdlib.h>", "<algorithm>"],
    answer: "<cmath>",
    explanation: {
      correct: "Для математических функций, включая sqrt(), в C++ используется заголовочный файл <cmath>",
      incorrect: "Неверно, в современном C++ для математических функций используется <cmath>"
    }
  },
  {
    question: "Какой оператор используется для выделения памяти в куче?",
    options: ["new", "malloc", "alloc", "create"],
    answer: "new",
    explanation: {
      correct: "Оператор new используется для выделения памяти в куче в C++",
      incorrect: "Неверно, в C++ для выделения памяти используется оператор new"
    }
  },
  {
    question: "Какой оператор используется для освобождения памяти, выделенной с помощью new?",
    options: ["delete", "free", "remove", "clear"],
    answer: "delete",
    explanation: {
      correct: "Оператор delete используется для освобождения памяти, выделенной с помощью new",
      incorrect: "Неверно, память, выделенная с помощью new, освобождается с помощью delete"
    }
  },
  {
    question: "Какой тип данных возвращает функция, если она не возвращает значение?",
    options: ["void", "null", "undefined", "empty"],
    answer: "void",
    explanation: {
      correct: "Функция, которая не возвращает значение, имеет тип возврата void",
      incorrect: "Неверно, в C++ функция без возвращаемого значения имеет тип void"
    }
  },
  {
    question: "Какой оператор используется для доступа к членам класса через указатель?",
    options: ["->", ".", "::", ":"],
    answer: "->",
    explanation: {
      correct: "Оператор -> используется для доступа к членам класса через указатель на объект",
      incorrect: "Неверно, для доступа к членам через указатель используется оператор ->"
    }
  },
  {
    question: "Какой ключевое слово используется для определения класса?",
    options: ["class", "struct", "object", "type"],
    answer: "class",
    explanation: {
      correct: "Ключевое слово class используется для определения класса в C++",
      incorrect: "Неверно, для определения класса в C++ используется ключевое слово class"
    }
  },
  {
    question: "Какой спецификатор доступа по умолчанию у класса?",
    options: ["private", "public", "protected", "internal"],
    answer: "private",
    explanation: {
      correct: "У класса в C++ спецификатор доступа по умолчанию - private",
      incorrect: "Неверно, в классе все члены по умолчанию являются private"
    }
  },
  {
    question: "Какой спецификатор доступа по умолчанию у структуры?",
    options: ["public", "private", "protected", "internal"],
    answer: "public",
    explanation: {
      correct: "У структуры в C++ спецификатор доступа по умолчанию - public",
      incorrect: "Неверно, в структуре все члены по умолчанию являются public"
    }
  },
  {
    question: "Какой оператор используется для определения пространства имен?",
    options: ["namespace", "using", "import", "module"],
    answer: "namespace",
    explanation: {
      correct: "Ключевое слово namespace используется для определения пространства имен в C++",
      incorrect: "Неверно, для определения пространства имен в C++ используется namespace"
    }
  },
  {
    question: "Какой оператор используется для включения стандартного пространства имен?",
    options: ["using namespace std;", "import std;", "include std;", "namespace std;"],
    answer: "using namespace std;",
    explanation: {
      correct: "Директива using namespace std; позволяет использовать элементы стандартной библиотеки без префикса std::",
      incorrect: "Неверно, для использования стандартного пространства имен используется using namespace std;"
    }
  },
  {
    question: "Какой тип данных используется для логических значений?",
    options: ["bool", "boolean", "logical", "bit"],
    answer: "bool",
    explanation: {
      correct: "Тип bool используется для хранения логических значений true и false в C++",
      incorrect: "Неверно, в C++ для логических значений используется тип bool"
    }
  },
  {
    question: "Какой оператор используется для получения адреса переменной?",
    options: ["&", "*", "->", "::"],
    answer: "&",
    explanation: {
      correct: "Оператор & используется для получения адреса переменной в C++",
      incorrect: "Неверно, для получения адреса переменной используется оператор &"
    }
  },
  {
    question: "Какой оператор используется для разыменования указателя?",
    options: ["*", "&", "->", "."],
    answer: "*",
    explanation: {
      correct: "Оператор * используется для разыменования указателя и доступа к значению по адресу",
      incorrect: "Неверно, для разыменования указателя используется оператор *"
    }
  },
  {
    question: "Какой функция является точкой входа в программу на C++?",
    options: ["main()", "start()", "init()", "run()"],
    answer: "main()",
    explanation: {
      correct: "Функция main() является точкой входа в любую программу на C++",
      incorrect: "Неверно, точкой входа в C++ программу является функция main()"
    }
  },
  {
    question: "Какой оператор используется для объявления ссылки?",
    options: ["&", "*", "ref", "link"],
    answer: "&",
    explanation: {
      correct: "Оператор & используется для объявления ссылки на переменную в C++",
      incorrect: "Неверно, для объявления ссылки в C++ используется оператор &"
    }
  }
];