export const golangPlan = [
  {
    id: 'module-1',
    title: 'Введение и основы Go',
    lessons: [
      {
        id: 1,
        title: 'Что такое Go и зачем его учить?',
        content:
          'История языка Go, создание в Google. Где используется (веб-сервера, микросервисы, DevOps инструменты). Преимущества Go: простота, скорость, конкурентность. Сравнение с другими языками программирования.',
        task: 'Напишите в паре предложений, где бы вы хотели использовать Go и почему.'
      },
      {
        id: 2,
        title: 'Установка Go и первая программа',
        content:
          'Установка Go на Windows, macOS, Linux. Настройка GOPATH и GOROOT. Структура программы на Go: пакет main, функция main(). Компиляция и запуск программы через go run и go build.',
        task: 'Установите Go, создайте и запустите программу "Hello, World!"'
      },
      {
        id: 3,
        title: 'Переменные и типы данных',
        content:
          'Объявление переменных: var, :=. Базовые типы: int, float64, string, bool. Константы через const. Преобразование типов с помощью явного приведения. Объявление нескольких переменных.',
        task: 'Создайте программу, которая объявляет переменные разных типов и выводит их значения.'
      }
    ]
  },
  {
    id: 'module-2',
    title: 'Ввод/вывод и операции',
    lessons: [
      {
        id: 4,
        title: 'Ввод и вывод данных',
        content:
          'Пакет fmt: Print, Println, Printf для вывода. Форматированный вывод (%v, %T, %d, %s, %f). Ввод данных: Scan, Scanln, Scanf. Работа с форматированным вводом.',
        task: 'Создайте интерактивную программу, которая спрашивает имя и возраст, затем выводит приветствие.'
      },
      {
        id: 5,
        title: 'Арифметические операции',
        content:
          'Математические операции: +, -, *, /, %. Унарные операции: +, -. Приоритет операций. Целочисленное деление и остаток от деления. Работа с числами с плавающей точкой.',
        task: 'Создайте простой калькулятор для 4 основных арифметических операций.'
      },
      {
        id: 6,
        title: 'Логические операции и сравнения',
        content:
          'Операторы сравнения: ==, !=, <, >, <=, >=. Логические операторы: &&, ||, !. Таблицы истинности. Приоритет логических операций. Булевы выражения.',
        task: 'Создайте программу, которая сравнивает два числа и выводит результаты всех сравнений.'
      }
    ]
  },
  {
    id: 'module-3',
    title: 'Управляющие конструкции',
    lessons: [
      {
        id: 7,
        title: 'Условные операторы if/else',
        content:
          'Синтаксис if/else. Вложенные условия. else if. Инициализация в условии. Логические выражения в условиях. Блоки кода и области видимости.',
        task: 'Создайте программу, которая определяет, является ли число положительным, отрицательным или нулем.'
      },
      {
        id: 8,
        title: 'Оператор switch',
        content:
          'Базовый синтаксис switch. Switch с выражениями. Fallthrough. Switch без выражения. Сравнение с if/else. Default case.',
        task: 'Создайте программу, которая по номеру дня недели выводит его название.'
      },
      {
        id: 9,
        title: 'Циклы в Go',
        content:
          'Цикл for (единственный в Go). Различные формы: бесконечный, с условием, традиционный. Break и continue. Вложенные циклы. Range для строк.',
        task: 'Создайте программу, которая выводит таблицу умножения от 1 до 10.'
      }
    ]
  },
  {
    id: 'module-4',
    title: 'Функции и составные типы',
    lessons: [
      {
        id: 10,
        title: 'Функции',
        content:
          'Объявление и вызов функций. Параметры и возвращаемые значения. Множественные возвращаемые значения. Именованные возвращаемые значения. Вложенные функции.',
        task: 'Создайте функции для вычисления площади и периметра прямоугольника.'
      },
      {
        id: 11,
        title: 'Массивы',
        content:
          'Объявление и инициализация массивов. Индексация массивов. Длина массива через len(). Передача массивов в функции. Ограничения массивов.',
        task: 'Создайте массив чисел и напишите функции для поиска минимума и максимума.'
      },
      {
        id: 12,
        title: 'Слайсы (срезы)',
        content:
          'Отличие слайсов от массивов. Создание и манипуляции слайсами. Встроенные функции: len, cap, append, copy. Слайсы как ссылочные типы. Нарезка (slicing).',
        task: 'Создайте программу для работы со списком задач, используя слайсы.'
      },
      {
        id: 13,
        title: 'Карты (map)',
        content:
          'Создание и использование карт. Добавление, удаление, поиск элементов. Проверка существования ключа. Итерация по картам. Вложенные карты.',
        task: 'Создайте телефонную книгу с возможностью добавления, поиска и удаления контактов.'
      }
    ]
  },
  {
    id: 'module-5',
    title: 'Структуры и методы',
    lessons: [
      {
        id: 14,
        title: 'Структуры',
        content:
          'Определение структур. Создание экземпляров структур. Доступ к полям. Встраивание структур. Анонимные структуры. Сравнение структур.',
        task: 'Создайте структуру Student с полями имя, возраст, оценки и функции для работы с ней.'
      },
      {
        id: 15,
        title: 'Методы',
        content:
          'Определение методов. Получатели (receivers): значение vs указатель. Методы для встроенных типов. Цепочки вызовов методов. Методы и интерфейсы.',
        task: 'Добавьте методы к структуре Student для вычисления среднего балла и вывода информации.'
      },
      {
        id: 16,
        title: 'Указатели',
        content:
          'Что такое указатели. Операторы & и *. Передача по значению vs по ссылке. Указатели и функции. Указатели на структуры. Избегание копирования больших структур.',
        task: 'Создайте программу, которая изменяет значения через указатели.'
      }
    ]
  },
  {
    id: 'module-6',
    title: 'Обработка ошибок и файлы',
    lessons: [
      {
        id: 17,
        title: 'Интерфейсы',
        content:
          'Что такое интерфейсы. Реализация интерфейсов. Пустой интерфейс interface{}. Type assertion. Интерфейсы в стандартной библиотеке.',
        task: 'Создайте интерфейс Shape и реализуйте его для различных геометрических фигур.'
      },
      {
        id: 18,
        title: 'Обработка ошибок',
        content:
          'Философия ошибок в Go. Тип error. Создание собственных ошибок. Проверка ошибок. Panic и recover. Лучшие практики обработки ошибок.',
        task: 'Создайте функцию деления с обработкой ошибки деления на ноль.'
      },
      {
        id: 19,
        title: 'Работа с файлами',
        content:
          'Чтение файлов через os.Open и ioutil.ReadFile. Запись в файлы через os.Create. Создание и удаление файлов. Работа с путями. Закрытие файлов.',
        task: 'Создайте программу для чтения и записи текстового файла с логами.'
      }
    ]
  },
  {
    id: 'module-7',
    title: 'Практические проекты',
    lessons: [
      {
        id: 20,
        title: 'Проект 1: Консольный калькулятор',
        content:
          'Планирование функционала калькулятора. Реализация арифметических операций. Обработка ошибок ввода. Интерфейс командной строки. Тестирование программы.',
        task: 'Создайте полноценный консольный калькулятор с меню выбора операций.'
      },
      {
        id: 21,
        title: 'Проект 2: Система учета задач',
        content:
          'Проектирование структуры задач. Хранение задач в памяти. Добавление, удаление, просмотр задач. Сохранение в файл. Загрузка из файла. Работа с меню.',
        task: 'Реализуйте систему учета задач с возможностью сохранения в файл.'
      },
      {
        id: 22,
        title: 'Проект 3: Веб-сервер для заметок',
        content:
          'Введение в net/http. Создание простого веб-сервера. Обработка GET/POST запросов. Хранение данных в памяти. Базовая HTML-форма. Деплой приложения.',
        task: 'Создайте простой веб-сервер для создания и просмотра заметок.'
      }
    ]
  }
];