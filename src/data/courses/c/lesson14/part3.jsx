// src/data/courses/c/lesson14/part3.jsx
import React, { useState } from 'react';
import { Monitor, FileText, Play, Code, Edit3, Save, CheckCircle, FolderOpen } from 'lucide-react';

const Part3 = () => {
  const [completedTasks, setCompletedTasks] = useState({
    task1: false,
    task2: false,
    task3: false
  });

  const handleTaskComplete = (task) => {
    setCompletedTasks(prev => ({
      ...prev,
      [task]: !prev[task]
    }));
  };

  return (
    <div className="space-y-8 text-gray-200">
      {/* –í—Å—Ç—É–ø–ª–µ–Ω–∏–µ */}
      <div className="bg-gradient-to-r from-blue-900/30 to-purple-900/30 backdrop-blur-sm border border-blue-700/30 rounded-2xl p-6 shadow-lg">
        <div className="flex items-start gap-4">
          <div className="bg-blue-500/20 p-3 rounded-lg">
            <Monitor className="w-6 h-6 text-blue-400" />
          </div>
          <div>
            <h1 className="text-2xl md:text-3xl font-bold text-white mb-2">üíª –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ: –†–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏ –≤ C</h1>
            <p className="text-gray-300">
              <span className="font-medium text-yellow-400">üéØ –¶–µ–ª—å:</span> –ù–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ –æ—Å–≤–æ–∏—Ç—å —á—Ç–µ–Ω–∏–µ –∏ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª—ã —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–π fopen(), fprintf(), fscanf() –∏ fgets().
            </p>
          </div>
        </div>
      </div>

      {/* –ó–∞–¥–∞–Ω–∏–µ 1: –ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –æ —Å—Ç—É–¥–µ–Ω—Ç–µ –≤ —Ñ–∞–π–ª */}
      <div className={`bg-gray-800/40 backdrop-blur-sm border rounded-2xl p-6 shadow-xl ${completedTasks.task1 ? 'border-green-700/50' : 'border-gray-700/50'}`}>
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <FileText className="w-5 h-5 text-green-400" />
          –ó–∞–¥–∞–Ω–∏–µ 1: –ó–∞–ø–∏—Å—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç—É–¥–µ–Ω—Ç–µ
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –∑–∞–ø–∏—Å–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç—É–¥–µ–Ω—Ç–µ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª:
          </p>
        </div>
        <div className="mt-6 space-y-6">
          <div className="bg-gray-900/50 p-5 rounded-xl border border-green-700/30">
            <h3 className="font-bold text-green-300 mb-3 flex items-center gap-2">
              <span className="bg-gray-700 w-6 h-6 rounded-full flex items-center justify-center text-sm">1</span>
              –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö
            </h3>
            <ul className="list-disc pl-6 space-y-2 text-gray-300">
              <li>–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª <code className="bg-gray-700 px-1.5 py-0.5 rounded">student_record.c</code></li>
              <li>–ó–∞–ø—Ä–æ—Å–∏—Ç–µ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: –§–ò–û, –≤–æ–∑—Ä–∞—Å—Ç, –≥—Ä—É–ø–ø—É, —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª</li>
              <li>–û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª <code className="bg-gray-700 px-1.5 py-0.5 rounded">student.txt</code> –¥–ª—è –∑–∞–ø–∏—Å–∏</li>
              <li>–ó–∞–ø–∏—à–∏—Ç–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –≤–∏–¥–µ</li>
              <li>–ü—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª</li>
              <li>–í—ã–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –∑–∞–ø–∏—Å–∏</li>
            </ul>
          </div>
          
          <div className="bg-gray-900/50 p-5 rounded-xl border border-blue-700/30">
            <h3 className="font-bold text-blue-300 mb-3 flex items-center gap-2">
              <span className="bg-gray-700 w-6 h-6 rounded-full flex items-center justify-center text-sm">2</span>
              –ü—Ä–∏–º–µ—Ä —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏
            </h3>
            <div className="bg-gray-800 p-4 rounded-lg mt-3 text-sm">
              <pre className="text-green-300">
{`#include <stdio.h>

int main() {
    char name[50];
    int age;
    char group[20];
    float average_grade;
    
    // –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö
    printf("–í–≤–µ–¥–∏—Ç–µ –§–ò–û —Å—Ç—É–¥–µ–Ω—Ç–∞: ");
    fgets(name, sizeof(name), stdin);
    
    printf("–í–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç: ");
    scanf("%d", &age);
    
    printf("–í–≤–µ–¥–∏—Ç–µ –≥—Ä—É–ø–ø—É: ");
    scanf("%s", group);
    
    printf("–í–≤–µ–¥–∏—Ç–µ —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª: ");
    scanf("%f", &average_grade);
    
    // –û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏
    FILE *file = fopen("student.txt", "w");
    
    if (file == NULL) {
        printf("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞!\\n");
        return 1;
    }
    
    // –ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª
    fprintf(file, "=== –ö–∞—Ä—Ç–æ—á–∫–∞ —Å—Ç—É–¥–µ–Ω—Ç–∞ ===\\n");
    fprintf(file, "–§–ò–û: %s", name);
    fprintf(file, "–í–æ–∑—Ä–∞—Å—Ç: %d –ª–µ—Ç\\n", age);
    fprintf(file, "–ì—Ä—É–ø–ø–∞: %s\\n", group);
    fprintf(file, "–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª: %.2f\\n", average_grade);
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞
    fclose(file);
    
    printf("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç—É–¥–µ–Ω—Ç–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ —Ñ–∞–π–ª student.txt\\n");
    
    return 0;
}`}
              </pre>
            </div>
            <div className="mt-3 p-3 bg-black rounded text-sm">
              <p className="text-white">–ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã:</p>
              <p className="text-gray-300 text-xs">
                –í–≤–µ–¥–∏—Ç–µ –§–ò–û —Å—Ç—É–¥–µ–Ω—Ç–∞: –ò–≤–∞–Ω–æ–≤ –ü–µ—Ç—Ä –°–µ—Ä–≥–µ–µ–≤–∏—á<br/>
                –í–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç: 20<br/>
                –í–≤–µ–¥–∏—Ç–µ –≥—Ä—É–ø–ø—É: –ò–¢-201<br/>
                –í–≤–µ–¥–∏—Ç–µ —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª: 4.75<br/>
                –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç—É–¥–µ–Ω—Ç–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ —Ñ–∞–π–ª student.txt
              </p>
            </div>
          </div>
        </div>
        
        <div className="mt-6 flex items-center">
          <input
            type="checkbox"
            id="task1"
            checked={completedTasks.task1}
            onChange={() => handleTaskComplete('task1')}
            className="w-5 h-5 text-blue-600 rounded focus:ring-blue-500"
          />
          <label htmlFor="task1" className="ml-2 text-gray-300">
            –Ø —Å–æ–∑–¥–∞–ª –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –æ —Å—Ç—É–¥–µ–Ω—Ç–µ
          </label>
          {completedTasks.task1 && <CheckCircle className="ml-2 w-5 h-5 text-green-400" />}
        </div>
      </div>

      {/* –ó–∞–¥–∞–Ω–∏–µ 2: –ß—Ç–µ–Ω–∏–µ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞ */}
      <div className={`bg-gray-800/40 backdrop-blur-sm border rounded-2xl p-6 shadow-xl ${completedTasks.task2 ? 'border-green-700/50' : 'border-gray-700/50'}`}>
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Edit3 className="w-5 h-5 text-purple-400" />
          –ó–∞–¥–∞–Ω–∏–µ 2: –ß—Ç–µ–Ω–∏–µ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è —á—Ç–µ–Ω–∏—è –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑ —Ñ–∞–π–ª–∞:
          </p>
        </div>
        <div className="mt-6 space-y-6">
          <div className="bg-gray-900/50 p-5 rounded-xl border border-purple-700/30">
            <h3 className="font-bold text-purple-300 mb-3">–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ:</h3>
            <ul className="list-disc pl-6 space-y-2 text-gray-300">
              <li>–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª <code className="bg-gray-700 px-1.5 py-0.5 rounded">read_student.c</code></li>
              <li>–û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª <code className="bg-gray-700 px-1.5 py-0.5 rounded">student.txt</code> –¥–ª—è —á—Ç–µ–Ω–∏—è</li>
              <li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª</li>
              <li>–ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ –∏ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ –Ω–∞ —ç–∫—Ä–∞–Ω–µ</li>
              <li>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code className="bg-gray-700 px-1.5 py-0.5 rounded">fgets()</code> –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —á—Ç–µ–Ω–∏—è —Å—Ç—Ä–æ–∫</li>
              <li>–ü—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª –ø–æ—Å–ª–µ —á—Ç–µ–Ω–∏—è</li>
            </ul>
            <div className="mt-4 bg-gray-800 p-3 rounded">
              <pre className="text-purple-300 text-sm">
{`#include <stdio.h>

int main() {
    FILE *file = fopen("student.txt", "r");
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
    if (file == NULL) {
        printf("–§–∞–π–ª student.txt –Ω–µ –Ω–∞–π–¥–µ–Ω!\\n");
        printf("–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –∑–∞–ø–∏—Å—å –æ —Å—Ç—É–¥–µ–Ω—Ç–µ.\\n");
        return 1;
    }
    
    printf("=== –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç—É–¥–µ–Ω—Ç–µ ===\\n");
    
    char line[100];
    // –ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –ø–æ—Å—Ç—Ä–æ—á–Ω–æ
    while (fgets(line, sizeof(line), file) != NULL) {
        printf("%s", line);
    }
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞
    fclose(file);
    
    printf("\\n–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!\\n");
    
    return 0;
}`}
              </pre>
            </div>
          </div>
        </div>
        
        <div className="mt-6 flex items-center">
          <input
            type="checkbox"
            id="task2"
            checked={completedTasks.task2}
            onChange={() => handleTaskComplete('task2')}
            className="w-5 h-5 text-blue-600 rounded focus:ring-blue-500"
          />
          <label htmlFor="task2" className="ml-2 text-gray-300">
            –Ø —Å–æ–∑–¥–∞–ª –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ —Å—Ç—É–¥–µ–Ω—Ç–µ
          </label>
          {completedTasks.task2 && <CheckCircle className="ml-2 w-5 h-5 text-green-400" />}
        </div>
      </div>

      {/* –ó–∞–¥–∞–Ω–∏–µ 3: –ñ—É—Ä–Ω–∞–ª –ø–æ—Å–µ—â–µ–Ω–∏–π —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –∑–∞–ø–∏—Å–µ–π */}
      <div className={`bg-gray-800/40 backdrop-blur-sm border rounded-2xl p-6 shadow-xl ${completedTasks.task3 ? 'border-green-700/50' : 'border-gray-700/50'}`}>
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Save className="w-5 h-5 text-cyan-400" />
          –ó–∞–¥–∞–Ω–∏–µ 3: –ñ—É—Ä–Ω–∞–ª –ø–æ—Å–µ—â–µ–Ω–∏–π
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –≤–µ–¥–µ–Ω–∏—è –∂—É—Ä–Ω–∞–ª–∞ –ø–æ—Å–µ—â–µ–Ω–∏–π —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–ø–∏—Å–µ–π:
          </p>
        </div>
        <div className="mt-6 space-y-6">
          <div className="bg-gray-900/50 p-5 rounded-xl border border-cyan-700/30">
            <h3 className="font-bold text-cyan-300 mb-3">–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ:</h3>
            <ul className="list-disc pl-6 space-y-2 text-gray-300">
              <li>–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª <code className="bg-gray-700 px-1.5 py-0.5 rounded">attendance_log.c</code></li>
              <li>–†–µ–∞–ª–∏–∑—É–π—Ç–µ –º–µ–Ω—é —Å —Ç—Ä–µ–º—è –ø—É–Ω–∫—Ç–∞–º–∏: –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å, –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∂—É—Ä–Ω–∞–ª, –≤—ã—Ö–æ–¥</li>
              <li>–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏: –æ—Ç–∫—Ä—ã–≤–∞–π—Ç–µ —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ "a" (–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ)</li>
              <li>–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞: –æ—Ç–∫—Ä—ã–≤–∞–π—Ç–µ —Ñ–∞–π–ª –≤ —Ä–µ–∂–∏–º–µ "r" (—á—Ç–µ–Ω–∏–µ)</li>
              <li>–ü—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–π—Ç–µ: –¥–∞—Ç—É, –§–ò–û —Å—Ç—É–¥–µ–Ω—Ç–∞, —Å—Ç–∞—Ç—É—Å (–ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª/–æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª)</li>
              <li>–ö–∞–∂–¥–∞—è –Ω–æ–≤–∞—è –∑–∞–ø–∏—Å—å –¥–æ–ª–∂–Ω–∞ –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞</li>
              <li>–û–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ —Å–ª—É—á–∞–π, –∫–æ–≥–¥–∞ —Ñ–∞–π–ª –µ—â–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç</li>
            </ul>
            <div className="mt-4 bg-gray-800 p-3 rounded">
              <pre className="text-cyan-300 text-xs">
{`#include <stdio.h>
#include <string.h>

int main() {
    int choice;
    
    printf("=== –ñ—É—Ä–Ω–∞–ª –ø–æ—Å–µ—â–µ–Ω–∏–π ===\\n");
    
    while (1) {
        printf("\\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:\\n");
        printf("1. –î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å\\n");
        printf("2. –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∂—É—Ä–Ω–∞–ª\\n");
        printf("3. –í—ã—Ö–æ–¥\\n");
        printf("–í–∞—à –≤—ã–±–æ—Ä: ");
        scanf("%d", &choice);
        
        // –û—á–∏—Å—Ç–∫–∞ –±—É—Ñ–µ—Ä–∞ –≤–≤–æ–¥–∞
        while (getchar() != '\\n');
        
        switch (choice) {
            case 1: {
                FILE *file = fopen("attendance.txt", "a");
                if (file == NULL) {
                    printf("–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞!\\n");
                    break;
                }
                
                char date[20], name[50], status[20];
                
                printf("–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É (–î–î.–ú–ú.–ì–ì–ì–ì): ");
                fgets(date, sizeof(date), stdin);
                
                printf("–í–≤–µ–¥–∏—Ç–µ –§–ò–û —Å—Ç—É–¥–µ–Ω—Ç–∞: ");
                fgets(name, sizeof(name), stdin);
                
                printf("–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞—Ç—É—Å (–ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª/–æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª): ");
                fgets(status, sizeof(status), stdin);
                
                fprintf(file, "–î–∞—Ç–∞: %s", date);
                fprintf(file, "–°—Ç—É–¥–µ–Ω—Ç: %s", name);
                fprintf(file, "–°—Ç–∞—Ç—É—Å: %s", status);
                fprintf(file, "------------------------\\n");
                
                fclose(file);
                printf("–ó–∞–ø–∏—Å—å –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∂—É—Ä–Ω–∞–ª!\\n");
                break;
            }
            
            case 2: {
                FILE *file = fopen("attendance.txt", "r");
                if (file == NULL) {
                    printf("–ñ—É—Ä–Ω–∞–ª –ø—É—Å—Ç –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.\\n");
                    break;
                }
                
                printf("\\n=== –ñ—É—Ä–Ω–∞–ª –ø–æ—Å–µ—â–µ–Ω–∏–π ===\\n");
                char line[100];
                while (fgets(line, sizeof(line), file) != NULL) {
                    printf("%s", line);
                }
                fclose(file);
                break;
            }
            
            case 3:
                printf("–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!\\n");
                return 0;
                
            default:
                printf("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!\\n");
        }
    }
    
    return 0;
}`}
              </pre>
            </div>
            <div className="mt-4 p-3 bg-yellow-900/20 border border-yellow-700/30 rounded-lg">
              <p className="text-yellow-300 text-sm">
                ‚ö†Ô∏è <span className="font-medium">–í–∞–∂–Ω–æ:</span> –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ–∂–∏–º–∞ "a" –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–µ–π 
                –∏ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –æ—á–∏—Å—Ç–∫—É –±—É—Ñ–µ—Ä–∞ –≤–≤–æ–¥–∞ —Å –ø–æ–º–æ—â—å—é <code className="bg-gray-700 px-1.5 py-0.5 rounded">while (getchar() != '\\n');</code>!
              </p>
            </div>
          </div>
        </div>
        
        <div className="mt-6 flex items-center">
          <input
            type="checkbox"
            id="task3"
            checked={completedTasks.task3}
            onChange={() => handleTaskComplete('task3')}
            className="w-5 h-5 text-blue-600 rounded focus:ring-blue-500"
          />
          <label htmlFor="task3" className="ml-2 text-gray-300">
            –Ø —Å–æ–∑–¥–∞–ª –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –≤–µ–¥–µ–Ω–∏—è –∂—É—Ä–Ω–∞–ª–∞ –ø–æ—Å–µ—â–µ–Ω–∏–π
          </label>
          {completedTasks.task3 && <CheckCircle className="ml-2 w-5 h-5 text-green-400" />}
        </div>
      </div>

      {/* –ó–∞–∫–ª—é—á–µ–Ω–∏–µ */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <div className="flex items-start gap-3">
          <div className="bg-green-500/20 p-2 rounded-lg flex-shrink-0">
            <CheckCircle className="w-5 h-5 text-green-400" />
          </div>
          <div>
            <h3 className="font-bold text-white mb-2">–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! üéâ</h3>
            <p className="text-gray-300">
              –¢–µ–ø–µ—Ä—å –≤—ã —É–≤–µ—Ä–µ–Ω–Ω–æ –º–æ–∂–µ—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ñ–∞–π–ª–∞–º–∏ –≤ C ‚Äî —Å–æ–∑–¥–∞–≤–∞—Ç—å, —á–∏—Ç–∞—Ç—å, –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –∏ –¥–æ–±–∞–≤–ª—è—Ç—å –¥–∞–Ω–Ω—ã–µ. 
              –í—ã –Ω–∞—É—á–∏–ª–∏—Å—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏ –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—ã, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç 
              –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –º–µ–∂–¥—É –∑–∞–ø—É—Å–∫–∞–º–∏. –≠—Ç–æ –≤–∞–∂–Ω—ã–π –Ω–∞–≤—ã–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π!
              –í —Å–ª–µ–¥—É—é—â–µ–º —É—Ä–æ–∫–µ –º—ã –∏–∑—É—á–∏–º –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ–º—ã –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∏–º –∏—Ç–æ–≥–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç.
            </p>
            {Object.values(completedTasks).every(task => task) && (
              <div className="mt-3 p-3 bg-green-900/20 border border-green-700/30 rounded-lg flex items-center">
                <CheckCircle className="w-5 h-5 text-green-400 mr-2 flex-shrink-0" />
                <span className="text-green-300">–í—Å–µ –∑–∞–¥–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã! –í—ã –≥–æ—Ç–æ–≤—ã –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Ä–æ–∫—É.</span>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
};

export default Part3;