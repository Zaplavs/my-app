// src/data/courses/c/lesson10/part3.jsx
import React, { useState } from 'react';
import { Monitor, FileText, Play, Code, Edit3, Database, CheckCircle, Hash } from 'lucide-react';

const Part3 = () => {
  const [completedTasks, setCompletedTasks] = useState({
    task1: false,
    task2: false,
    task3: false
  });

  const handleTaskComplete = (task) => {
    setCompletedTasks(prev => ({
      ...prev,
      [task]: !prev[task]
    }));
  };

  return (
    <div className="space-y-8 text-gray-200">
      {/* –í—Å—Ç—É–ø–ª–µ–Ω–∏–µ */}
      <div className="bg-gradient-to-r from-blue-900/30 to-purple-900/30 backdrop-blur-sm border border-blue-700/30 rounded-2xl p-6 shadow-lg">
        <div className="flex items-start gap-4">
          <div className="bg-blue-500/20 p-3 rounded-lg">
            <Monitor className="w-6 h-6 text-blue-400" />
          </div>
          <div>
            <h1 className="text-2xl md:text-3xl font-bold text-white mb-2">üíª –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ: –ú–∞—Å—Å–∏–≤—ã –≤ C</h1>
            <p className="text-gray-300">
              <span className="font-medium text-yellow-400">üéØ –¶–µ–ª—å:</span> –ù–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ –æ—Å–≤–æ–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∏ —Ä–∞–±–æ—Ç—É —Å –º–∞—Å—Å–∏–≤–∞–º–∏.
            </p>
          </div>
        </div>
      </div>

      {/* –ó–∞–¥–∞–Ω–∏–µ 1: –°–æ–∑–¥–∞–Ω–∏–µ –∏ –≤—ã–≤–æ–¥ –º–∞—Å—Å–∏–≤–∞ */}
      <div className={`bg-gray-800/40 backdrop-blur-sm border rounded-2xl p-6 shadow-xl ${completedTasks.task1 ? 'border-green-700/50' : 'border-gray-700/50'}`}>
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <FileText className="w-5 h-5 text-green-400" />
          –ó–∞–¥–∞–Ω–∏–µ 1: –ú–∞—Å—Å–∏–≤ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –≤—ã–≤–æ–¥–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä –∑–∞ –Ω–µ–¥–µ–ª—é:
          </p>
        </div>
        <div className="mt-6 space-y-6">
          <div className="bg-gray-900/50 p-5 rounded-xl border border-green-700/30">
            <h3 className="font-bold text-green-300 mb-3 flex items-center gap-2">
              <span className="bg-gray-700 w-6 h-6 rounded-full flex items-center justify-center text-sm">1</span>
              –°–æ–∑–¥–∞–π—Ç–µ –º–∞—Å—Å–∏–≤ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä
            </h3>
            <ul className="list-disc pl-6 space-y-2 text-gray-300">
              <li>–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª <code className="bg-gray-700 px-1.5 py-0.5 rounded">temperatures.c</code></li>
              <li>–°–æ–∑–¥–∞–π—Ç–µ –º–∞—Å—Å–∏–≤ <code className="bg-gray-700 px-1.5 py-0.5 rounded">float temps[7]</code> –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä</li>
              <li>–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –º–∞—Å—Å–∏–≤ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏: 22.5, 24.0, 21.8, 23.2, 25.1, 26.3, 24.7</li>
              <li>–í—ã–≤–µ–¥–∏—Ç–µ –≤—Å–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã —Å –ø–æ–º–æ—â—å—é —Ü–∏–∫–ª–∞ <code className="bg-gray-700 px-1.5 py-0.5 rounded">for</code></li>
              <li>–ö–∞–∂–¥–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–æ–¥–∏—Ç—å—Å—è —Å –ø–æ—è—Å–Ω–µ–Ω–∏–µ–º –¥–Ω—è –Ω–µ–¥–µ–ª–∏</li>
            </ul>
          </div>
          
          <div className="bg-gray-900/50 p-5 rounded-xl border border-blue-700/30">
            <h3 className="font-bold text-blue-300 mb-3 flex items-center gap-2">
              <span className="bg-gray-700 w-6 h-6 rounded-full flex items-center justify-center text-sm">2</span>
              –ü—Ä–∏–º–µ—Ä —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏
            </h3>
            <div className="bg-gray-800 p-4 rounded-lg mt-3 text-sm">
              <pre className="text-green-300">
{`#include <stdio.h>

int main() {
    float temps[7] = {22.5, 24.0, 21.8, 23.2, 25.1, 26.3, 24.7};
    char days[7][12] = {"–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–í—Ç–æ—Ä–Ω–∏–∫", "–°—Ä–µ–¥–∞", 
                        "–ß–µ—Ç–≤–µ—Ä–≥", "–ü—è—Ç–Ω–∏—Ü–∞", "–°—É–±–±–æ—Ç–∞", "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"};
    
    printf("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –∑–∞ –Ω–µ–¥–µ–ª—é:\\n");
    
    for (int i = 0; i < 7; i++) {
        printf("%-12s: %.1f¬∞C\\n", days[i], temps[i]);
    }
    
    return 0;
}`}
              </pre>
            </div>
            <div className="mt-3 p-3 bg-black rounded text-sm">
              <p className="text-white">–û–∂–∏–¥–∞–µ–º—ã–π –≤—ã–≤–æ–¥:</p>
              <p className="text-gray-300 text-xs">
                –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –∑–∞ –Ω–µ–¥–µ–ª—é:<br/>
                –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ : 22.5¬∞C<br/>
                –í—Ç–æ—Ä–Ω–∏–∫     : 24.0¬∞C<br/>
                –°—Ä–µ–¥–∞       : 21.8¬∞C<br/>
                –ß–µ—Ç–≤–µ—Ä–≥     : 23.2¬∞C<br/>
                –ü—è—Ç–Ω–∏—Ü–∞     : 25.1¬∞C<br/>
                –°—É–±–±–æ—Ç–∞     : 26.3¬∞C<br/>
                –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ : 24.7¬∞C
              </p>
            </div>
          </div>
        </div>
        
        <div className="mt-6 flex items-center">
          <input
            type="checkbox"
            id="task1"
            checked={completedTasks.task1}
            onChange={() => handleTaskComplete('task1')}
            className="w-5 h-5 text-blue-600 rounded focus:ring-blue-500"
          />
          <label htmlFor="task1" className="ml-2 text-gray-300">
            –Ø —Å–æ–∑–¥–∞–ª –ø—Ä–æ–≥—Ä–∞–º–º—É —Å –º–∞—Å—Å–∏–≤–æ–º —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä
          </label>
          {completedTasks.task1 && <CheckCircle className="ml-2 w-5 h-5 text-green-400" />}
        </div>
      </div>

      {/* –ó–∞–¥–∞–Ω–∏–µ 2: –†–∞–±–æ—Ç–∞ —Å –º–∞—Å—Å–∏–≤–æ–º —á–∏—Å–µ–ª */}
      <div className={`bg-gray-800/40 backdrop-blur-sm border rounded-2xl p-6 shadow-xl ${completedTasks.task2 ? 'border-green-700/50' : 'border-gray-700/50'}`}>
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Edit3 className="w-5 h-5 text-purple-400" />
          –ó–∞–¥–∞–Ω–∏–µ 2: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ü–µ–Ω–æ–∫
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –æ—Ü–µ–Ω–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤:
          </p>
        </div>
        <div className="mt-6 space-y-6">
          <div className="bg-gray-900/50 p-5 rounded-xl border border-purple-700/30">
            <h3 className="font-bold text-purple-300 mb-3">–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ:</h3>
            <ul className="list-disc pl-6 space-y-2 text-gray-300">
              <li>–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª <code className="bg-gray-700 px-1.5 py-0.5 rounded">grades.c</code></li>
              <li>–°–æ–∑–¥–∞–π—Ç–µ –º–∞—Å—Å–∏–≤ <code className="bg-gray-700 px-1.5 py-0.5 rounded">int grades[10]</code> —Å –æ—Ü–µ–Ω–∫–∞–º–∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤</li>
              <li>–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –º–∞—Å—Å–∏–≤ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏: 85, 92, 78, 96, 88, 73, 89, 94, 81, 87</li>
              <li>–ù–∞–π–¥–∏—Ç–µ –∏ –≤—ã–≤–µ–¥–∏—Ç–µ: —Å—É–º–º—É –≤—Å–µ—Ö –æ—Ü–µ–Ω–æ–∫, —Å—Ä–µ–¥–Ω—é—é –æ—Ü–µ–Ω–∫—É, –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –∏ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –æ—Ü–µ–Ω–∫–∏</li>
              <li>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ü–∏–∫–ª—ã <code className="bg-gray-700 px-1.5 py-0.5 rounded">for</code> –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–∞—Å—Å–∏–≤–∞</li>
              <li>–ü–æ–¥—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ —Å –æ—Ü–µ–Ω–∫–æ–π –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–π</li>
            </ul>
            <div className="mt-4 bg-gray-800 p-3 rounded">
              <pre className="text-purple-300 text-sm">
{`#include <stdio.h>

int main() {
    int grades[10] = {85, 92, 78, 96, 88, 73, 89, 94, 81, 87};
    int sum = 0, max = grades[0], min = grades[0];
    float average;
    int above_average = 0;
    
    // –ü–æ–¥—Å—á–µ—Ç —Å—É–º–º—ã
    for (int i = 0; i < 10; i++) {
        sum += grades[i];
    }
    
    average = (float)sum / 10;
    
    // –ü–æ–∏—Å–∫ –º–∞–∫—Å–∏–º—É–º–∞ –∏ –º–∏–Ω–∏–º—É–º–∞
    for (int i = 1; i < 10; i++) {
        if (grades[i] > max) max = grades[i];
        if (grades[i] < min) min = grades[i];
    }
    
    // –ü–æ–¥—Å—á–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ
    for (int i = 0; i < 10; i++) {
        if (grades[i] > average) above_average++;
    }
    
    printf("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ü–µ–Ω–æ–∫:\\n");
    printf("–°—É–º–º–∞: %d\\n", sum);
    printf("–°—Ä–µ–¥–Ω—è—è: %.1f\\n", average);
    printf("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è: %d\\n", max);
    printf("–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è: %d\\n", min);
    printf("–í—ã—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ: %d —Å—Ç—É–¥–µ–Ω—Ç–æ–≤\\n", above_average);
    
    return 0;
}`}
              </pre>
            </div>
          </div>
        </div>
        
        <div className="mt-6 flex items-center">
          <input
            type="checkbox"
            id="task2"
            checked={completedTasks.task2}
            onChange={() => handleTaskComplete('task2')}
            className="w-5 h-5 text-blue-600 rounded focus:ring-blue-500"
          />
          <label htmlFor="task2" className="ml-2 text-gray-300">
            –Ø —Å–æ–∑–¥–∞–ª –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –æ—Ü–µ–Ω–æ–∫
          </label>
          {completedTasks.task2 && <CheckCircle className="ml-2 w-5 h-5 text-green-400" />}
        </div>
      </div>

      {/* –ó–∞–¥–∞–Ω–∏–µ 3: –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å –º–∞—Å—Å–∏–≤–æ–º */}
      <div className={`bg-gray-800/40 backdrop-blur-sm border rounded-2xl p-6 shadow-xl ${completedTasks.task3 ? 'border-green-700/50' : 'border-gray-700/50'}`}>
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Database className="w-5 h-5 text-cyan-400" />
          –ó–∞–¥–∞–Ω–∏–µ 3: –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –≤ –º–∞—Å—Å–∏–≤
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–≤–æ–¥–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –º–∞—Å—Å–∏–≤:
          </p>
        </div>
        <div className="mt-6 space-y-6">
          <div className="bg-gray-900/50 p-5 rounded-xl border border-cyan-700/30">
            <h3 className="font-bold text-cyan-300 mb-3">–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ:</h3>
            <ul className="list-disc pl-6 space-y-2 text-gray-300">
              <li>–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª <code className="bg-gray-700 px-1.5 py-0.5 rounded">input_array.c</code></li>
              <li>–°–æ–∑–¥–∞–π—Ç–µ –º–∞—Å—Å–∏–≤ <code className="bg-gray-700 px-1.5 py-0.5 rounded">int numbers[5]</code> –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —á–∏—Å–µ–ª</li>
              <li>–ó–∞–ø—Ä–æ—Å–∏—Ç–µ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 5 —á–∏—Å–µ–ª –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∏—Ö –≤ –º–∞—Å—Å–∏–≤</li>
              <li>–í—ã–≤–µ–¥–∏—Ç–µ –≤—Å–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ —á–∏—Å–ª–∞ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ</li>
              <li>–ù–∞–π–¥–∏—Ç–µ –∏ –≤—ã–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —á–µ—Ç–Ω—ã—Ö —á–∏—Å–µ–ª –≤ –º–∞—Å—Å–∏–≤–µ</li>
              <li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ –≤ –º–∞—Å—Å–∏–≤–µ —á–∏—Å–ª–æ 42, –∏ –≤—ã–≤–µ–¥–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</li>
            </ul>
            <div className="mt-4 bg-gray-800 p-3 rounded">
              <pre className="text-cyan-300 text-xs">
{`#include <stdio.h>

int main() {
    int numbers[5];
    int sum_even = 0;
    int found_42 = 0;
    
    printf("–í–≤–µ–¥–∏—Ç–µ 5 —á–∏—Å–µ–ª:\\n");
    
    // –í–≤–æ–¥ —á–∏—Å–µ–ª
    for (int i = 0; i < 5; i++) {
        printf("–ß–∏—Å–ª–æ %d: ", i + 1);
        scanf("%d", &numbers[i]);
    }
    
    printf("\\n–í–≤–µ–¥–µ–Ω–Ω—ã–µ —á–∏—Å–ª–∞ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ:\\n");
    for (int i = 4; i >= 0; i--) {
        printf("%d ", numbers[i]);
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —á–µ—Ç–Ω–æ—Å—Ç—å
        if (numbers[i] % 2 == 0) {
            sum_even += numbers[i];
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ 42
        if (numbers[i] == 42) {
            found_42 = 1;
        }
    }
    
    printf("\\n\\n–°—É–º–º–∞ —á–µ—Ç–Ω—ã—Ö —á–∏—Å–µ–ª: %d\\n", sum_even);
    
    if (found_42) {
        printf("–ß–∏—Å–ª–æ 42 –Ω–∞–π–¥–µ–Ω–æ –≤ –º–∞—Å—Å–∏–≤–µ!\\n");
    } else {
        printf("–ß–∏—Å–ª–æ 42 –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –º–∞—Å—Å–∏–≤–µ.\\n");
    }
    
    return 0;
}`}
              </pre>
            </div>
            <div className="mt-4 p-3 bg-yellow-900/20 border border-yellow-700/30 rounded-lg">
              <p className="text-yellow-300 text-sm">
                ‚ö†Ô∏è <span className="font-medium">–í–∞–∂–Ω–æ:</span> –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ & –≤ scanf() –∏ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—é –º–∞—Å—Å–∏–≤–∞!
              </p>
            </div>
          </div>
        </div>
        
        <div className="mt-6 flex items-center">
          <input
            type="checkbox"
            id="task3"
            checked={completedTasks.task3}
            onChange={() => handleTaskComplete('task3')}
            className="w-5 h-5 text-blue-600 rounded focus:ring-blue-500"
          />
          <label htmlFor="task3" className="ml-2 text-gray-300">
            –Ø —Å–æ–∑–¥–∞–ª –ø—Ä–æ–≥—Ä–∞–º–º—É —Å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º –≤–≤–æ–¥–æ–º –≤ –º–∞—Å—Å–∏–≤
          </label>
          {completedTasks.task3 && <CheckCircle className="ml-2 w-5 h-5 text-green-400" />}
        </div>
      </div>

      {/* –ó–∞–∫–ª—é—á–µ–Ω–∏–µ */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <div className="flex items-start gap-3">
          <div className="bg-green-500/20 p-2 rounded-lg flex-shrink-0">
            <CheckCircle className="w-5 h-5 text-green-400" />
          </div>
          <div>
            <h3 className="font-bold text-white mb-2">–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! üéâ</h3>
            <p className="text-gray-300">
              –¢–µ–ø–µ—Ä—å –≤—ã —É–≤–µ—Ä–µ–Ω–Ω–æ –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –º–∞—Å—Å–∏–≤–∞–º–∏ –≤ C. 
              –í—ã –Ω–∞—É—á–∏–ª–∏—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –º–∞—Å—Å–∏–≤—ã, –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ —ç–ª–µ–º–µ–Ω—Ç–∞–º –ø–æ –∏–Ω–¥–µ–∫—Å—É, 
              –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ü–∏–∫–ª—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–∞—Å—Å–∏–≤–æ–≤ –∏ –≤–≤–æ–¥–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º–∞—Å—Å–∏–≤—ã.
              –í —Å–ª–µ–¥—É—é—â–µ–º —É—Ä–æ–∫–µ –º—ã –Ω–∞—É—á–∏–º—Å—è —Ä–∞–±–æ—Ç–∞—Ç—å —Å–æ —Å—Ç—Ä–æ–∫–∞–º–∏ –∫–∞–∫ —Å –º–∞—Å—Å–∏–≤–∞–º–∏ —Å–∏–º–≤–æ–ª–æ–≤.
            </p>
            {Object.values(completedTasks).every(task => task) && (
              <div className="mt-3 p-3 bg-green-900/20 border border-green-700/30 rounded-lg flex items-center">
                <CheckCircle className="w-5 h-5 text-green-400 mr-2 flex-shrink-0" />
                <span className="text-green-300">–í—Å–µ –∑–∞–¥–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã! –í—ã –≥–æ—Ç–æ–≤—ã –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Ä–æ–∫—É.</span>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
};

export default Part3;