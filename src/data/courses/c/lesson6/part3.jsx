// src/data/courses/c/lesson6/part3.jsx
import React, { useState } from 'react';
import { Monitor, FileText, Play, Code, Edit3, Keyboard, CheckCircle, Terminal } from 'lucide-react';

const Part3 = () => {
  const [completedTasks, setCompletedTasks] = useState({
    task1: false,
    task2: false,
    task3: false
  });

  const handleTaskComplete = (task) => {
    setCompletedTasks(prev => ({
      ...prev,
      [task]: !prev[task]
    }));
  };

  return (
    <div className="space-y-8 text-gray-200">
      {/* –í—Å—Ç—É–ø–ª–µ–Ω–∏–µ */}
      <div className="bg-gradient-to-r from-blue-900/30 to-purple-900/30 backdrop-blur-sm border border-blue-700/30 rounded-2xl p-6 shadow-lg">
        <div className="flex items-start gap-4">
          <div className="bg-blue-500/20 p-3 rounded-lg">
            <Monitor className="w-6 h-6 text-blue-400" />
          </div>
          <div>
            <h1 className="text-2xl md:text-3xl font-bold text-white mb-2">üíª –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ: –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã</h1>
            <p className="text-gray-300">
              <span className="font-medium text-yellow-400">üéØ –¶–µ–ª—å:</span> –ù–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ –æ—Å–≤–æ–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ scanf() –¥–ª—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤.
            </p>
          </div>
        </div>
      </div>

      {/* –ó–∞–¥–∞–Ω–∏–µ 1: –ü—Ä–æ—Å—Ç–æ–π –≤–≤–æ–¥ –æ–¥–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è */}
      <div className={`bg-gray-800/40 backdrop-blur-sm border rounded-2xl p-6 shadow-xl ${completedTasks.task1 ? 'border-green-700/50' : 'border-gray-700/50'}`}>
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <FileText className="w-5 h-5 text-green-400" />
          –ó–∞–¥–∞–Ω–∏–µ 1: –í–≤–æ–¥ –∏ –≤—ã–≤–æ–¥ –æ–¥–Ω–æ–≥–æ —Ü–µ–ª–æ–≥–æ —á–∏—Å–ª–∞
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –∏ –≤—ã–≤–æ–¥–∏—Ç –µ–≥–æ –æ–±—Ä–∞—Ç–Ω–æ:
          </p>
        </div>
        <div className="mt-6 space-y-6">
          <div className="bg-gray-900/50 p-5 rounded-xl border border-green-700/30">
            <h3 className="font-bold text-green-300 mb-3 flex items-center gap-2">
              <span className="bg-gray-700 w-6 h-6 rounded-full flex items-center justify-center text-sm">1</span>
              –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª –≤–≤–æ–¥–∞
            </h3>
            <ul className="list-disc pl-6 space-y-2 text-gray-300">
              <li>–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª <code className="bg-gray-700 px-1.5 py-0.5 rounded">input_test.c</code></li>
              <li>–ü–æ–¥–∫–ª—é—á–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –±–∏–±–ª–∏–æ—Ç–µ–∫—É <code className="bg-gray-700 px-1.5 py-0.5 rounded">{`#include <stdio.h>`}</code></li>
            </ul>
          </div>
          
          <div className="bg-gray-900/50 p-5 rounded-xl border border-blue-700/30">
            <h3 className="font-bold text-blue-300 mb-3 flex items-center gap-2">
              <span className="bg-gray-700 w-6 h-6 rounded-full flex items-center justify-center text-sm">2</span>
              –†–µ–∞–ª–∏–∑—É–π—Ç–µ –≤–≤–æ–¥ –∏ –≤—ã–≤–æ–¥
            </h3>
            <ul className="list-disc pl-6 space-y-2 text-gray-300">
              <li>–û–±—ä—è–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Ç–∏–ø–∞ <code className="bg-gray-700 px-1.5 py-0.5 rounded">int</code></li>
              <li>–í—ã–≤–µ–¥–∏—Ç–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –∫ –≤–≤–æ–¥—É —Å –ø–æ–º–æ—â—å—é <code className="bg-gray-700 px-1.5 py-0.5 rounded">printf()</code></li>
              <li>–ü–æ–ª—É—á–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø–æ–º–æ—â—å—é <code className="bg-gray-700 px-1.5 py-0.5 rounded">scanf()</code> (–Ω–µ –∑–∞–±—É–¥—å—Ç–µ &!)</li>
              <li>–í—ã–≤–µ–¥–∏—Ç–µ –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –æ–±—Ä–∞—Ç–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é</li>
            </ul>
            <div className="bg-gray-800 p-4 rounded-lg mt-3 text-sm">
              <pre className="text-green-300">
{`#include <stdio.h>

int main() {
    int number;
    
    printf("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ: ");
    scanf("%d", &number);
    
    printf("–í—ã –≤–≤–µ–ª–∏ —á–∏—Å–ª–æ: %d\\n", number);
    
    return 0;
}`}
              </pre>
            </div>
          </div>
        </div>
        
        <div className="mt-6 flex items-center">
          <input
            type="checkbox"
            id="task1"
            checked={completedTasks.task1}
            onChange={() => handleTaskComplete('task1')}
            className="w-5 h-5 text-blue-600 rounded focus:ring-blue-500"
          />
          <label htmlFor="task1" className="ml-2 text-gray-300">
            –Ø —Å–æ–∑–¥–∞–ª –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –≤–≤–æ–¥–∞ –∏ –≤—ã–≤–æ–¥–∞ —Ü–µ–ª–æ–≥–æ —á–∏—Å–ª–∞
          </label>
          {completedTasks.task1 && <CheckCircle className="ml-2 w-5 h-5 text-green-400" />}
        </div>
      </div>

      {/* –ó–∞–¥–∞–Ω–∏–µ 2: –í–≤–æ–¥ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ */}
      <div className={`bg-gray-800/40 backdrop-blur-sm border rounded-2xl p-6 shadow-xl ${completedTasks.task2 ? 'border-green-700/50' : 'border-gray-700/50'}`}>
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Edit3 className="w-5 h-5 text-purple-400" />
          –ó–∞–¥–∞–Ω–∏–µ 2: –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–∞–Ω–Ω—ã–µ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤:
          </p>
        </div>
        <div className="mt-6 space-y-6">
          <div className="bg-gray-900/50 p-5 rounded-xl border border-purple-700/30">
            <h3 className="font-bold text-purple-300 mb-3">–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ:</h3>
            <ul className="list-disc pl-6 space-y-2 text-gray-300">
              <li>–û–±—ä—è–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–∏–ø–æ–≤ <code className="bg-gray-700 px-1.5 py-0.5 rounded">int</code>, <code className="bg-gray-700 px-1.5 py-0.5 rounded">float</code> –∏ <code className="bg-gray-700 px-1.5 py-0.5 rounded">char</code></li>
              <li>–ü–æ–æ—á–µ—Ä–µ–¥–Ω–æ –∑–∞–ø—Ä–æ—Å–∏—Ç–µ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: –≤–æ–∑—Ä–∞—Å—Ç, —Ä–æ—Å—Ç –∏ –ø–µ—Ä–≤—É—é –±—É–∫–≤—É –∏–º–µ–Ω–∏</li>
              <li>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞</li>
              <li>–ù–µ –∑–∞–±—É–¥—å—Ç–µ & –ø–µ—Ä–µ–¥ –∫–∞–∂–¥–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –≤ scanf()!</li>
              <li>–í—ã–≤–µ–¥–∏—Ç–µ –≤—Å–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –≤–∏–¥–µ</li>
            </ul>
            <div className="mt-4 bg-gray-800 p-3 rounded">
              <pre className="text-purple-300 text-sm">
{`#include <stdio.h>

int main() {
    int age;
    float height;
    char initial;
    
    printf("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç: ");
    scanf("%d", &age);
    
    printf("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ä–æ—Å—Ç (–≤ —Å–º): ");
    scanf("%f", &height);
    
    printf("–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤—É—é –±—É–∫–≤—É –≤–∞—à–µ–≥–æ –∏–º–µ–Ω–∏: ");
    scanf(" %c", &initial);
    
    printf("\\n=== –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ ===\\n");
    printf("–í–æ–∑—Ä–∞—Å—Ç: %d –ª–µ—Ç\\n", age);
    printf("–†–æ—Å—Ç: %.1f —Å–º\\n", height);
    printf("–ò–º—è –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–∞: %c\\n", initial);
    
    return 0;
}`}
              </pre>
            </div>
            <div className="mt-4 p-3 bg-blue-900/20 border border-blue-700/30 rounded-lg">
              <p className="text-blue-300 text-sm">
                üí° <span className="font-medium">–°–æ–≤–µ—Ç:</span> –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –ø—Ä–æ–±–µ–ª –ø–µ—Ä–µ–¥ %c –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–º scanf() ‚Äî —ç—Ç–æ –≤–∞–∂–Ω–æ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã!
              </p>
            </div>
          </div>
        </div>
        
        <div className="mt-6 flex items-center">
          <input
            type="checkbox"
            id="task2"
            checked={completedTasks.task2}
            onChange={() => handleTaskComplete('task2')}
            className="w-5 h-5 text-blue-600 rounded focus:ring-blue-500"
          />
          <label htmlFor="task2" className="ml-2 text-gray-300">
            –Ø —Å–æ–∑–¥–∞–ª –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤
          </label>
          {completedTasks.task2 && <CheckCircle className="ml-2 w-5 h-5 text-green-400" />}
        </div>
      </div>

      {/* –ó–∞–¥–∞–Ω–∏–µ 3: –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã —Å –æ—à–∏–±–∫–∞–º–∏ */}
      <div className={`bg-gray-800/40 backdrop-blur-sm border rounded-2xl p-6 shadow-xl ${completedTasks.task3 ? 'border-green-700/50' : 'border-gray-700/50'}`}>
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Terminal className="w-5 h-5 text-cyan-400" />
          –ó–∞–¥–∞–Ω–∏–µ 3: –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫ –≤ scanf()
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            –ü—Ä–æ–≤–µ–¥–∏—Ç–µ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –æ—à–∏–±–∫–∞–º–∏ –≤ scanf(), —á—Ç–æ–±—ã –ª—É—á—à–µ –∏—Ö –ø–æ–Ω—è—Ç—å:
          </p>
        </div>
        <div className="mt-6 space-y-6">
          <div className="bg-gray-900/50 p-5 rounded-xl border border-cyan-700/30">
            <h3 className="font-bold text-cyan-300 mb-3">–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ:</h3>
            <ul className="list-disc pl-6 space-y-2 text-gray-300">
              <li>–°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É —Å intentional –æ—à–∏–±–∫–æ–π: –∑–∞–±—É–¥—å—Ç–µ & –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –≤ scanf()</li>
              <li>–°–∫–æ–º–ø–∏–ª–∏—Ä—É–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ, –∫–∞–∫–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –≤—ã–¥–∞—Å—Ç –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä</li>
              <li>–ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ, —á—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç</li>
              <li>–ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫—É –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ä–∞–±–æ—Ç—É</li>
              <li>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –±—É–∫–≤—ã –≤–º–µ—Å—Ç–æ —á–∏—Å–µ–ª ‚Äî —á—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç?</li>
              <li>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–µ —Å—Ç–∞–≤–∏—Ç—å –ø—Ä–æ–±–µ–ª –ø–µ—Ä–µ–¥ %c ‚Äî –∫–∞–∫ —ç—Ç–æ –ø–æ–≤–ª–∏—è–µ—Ç –Ω–∞ —Ä–∞–±–æ—Ç—É?</li>
            </ul>
            <div className="mt-4 bg-gray-800 p-3 rounded">
              <pre className="text-red-300 text-sm">
{`// –ü—Ä–∏–º–µ—Ä —Å –û–®–ò–ë–ö–û–ô (–∑–∞–±—ã–ª–∏ &):
int number;
printf("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: ");
scanf("%d", number);  // –û–®–ò–ë–ö–ê! –î–æ–ª–∂–Ω–æ –±—ã—Ç—å &number

// –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç:
scanf("%d", &number); // –¢–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ`}
              </pre>
            </div>
            <div className="mt-4 bg-gray-800 p-3 rounded">
              <pre className="text-orange-300 text-sm">
{`// –ü—Ä–∏–º–µ—Ä –±–µ–∑ –ø—Ä–æ–±–µ–ª–∞ –ø–µ—Ä–µ–¥ %c:
char letter;
scanf("%c", &letter);  // –ú–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ

// –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç:
scanf(" %c", &letter); // –ü—Ä–æ–±–µ–ª –ø–µ—Ä–µ–¥ %c`}
              </pre>
            </div>
            <div className="mt-4 p-3 bg-yellow-900/20 border border-yellow-700/30 rounded-lg">
              <p className="text-yellow-300 text-sm">
                ‚ö†Ô∏è <span className="font-medium">–í–∞–∂–Ω–æ:</span> –≠—Ç–∏ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã –ø–æ–º–æ–≥—É—Ç –≤–∞–º –∑–∞–ø–æ–º–Ω–∏—Ç—å, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å scanf() –∏ –∏–∑–±–µ–≥–∞—Ç—å —Ç–∏–ø–∏—á–Ω—ã—Ö –æ—à–∏–±–æ–∫ –≤ –±—É–¥—É—â–µ–º.
              </p>
            </div>
          </div>
        </div>
        
        <div className="mt-6 flex items-center">
          <input
            type="checkbox"
            id="task3"
            checked={completedTasks.task3}
            onChange={() => handleTaskComplete('task3')}
            className="w-5 h-5 text-blue-600 rounded focus:ring-blue-500"
          />
          <label htmlFor="task3" className="ml-2 text-gray-300">
            –Ø –ø—Ä–æ–≤–µ–ª —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã —Å –æ—à–∏–±–∫–∞–º–∏ –≤ scanf() –∏ –ø–æ–Ω—è–ª –∏—Ö –ø—Ä–∏—á–∏–Ω—ã
          </label>
          {completedTasks.task3 && <CheckCircle className="ml-2 w-5 h-5 text-green-400" />}
        </div>
      </div>

      {/* –ó–∞–∫–ª—é—á–µ–Ω–∏–µ */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <div className="flex items-start gap-3">
          <div className="bg-green-500/20 p-2 rounded-lg flex-shrink-0">
            <CheckCircle className="w-5 h-5 text-green-400" />
          </div>
          <div>
            <h3 className="font-bold text-white mb-2">–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! üéâ</h3>
            <p className="text-gray-300">
              –¢–µ–ø–µ—Ä—å –≤—ã —É–≤–µ—Ä–µ–Ω–Ω–æ –º–æ–∂–µ—Ç–µ –≤–≤–æ–¥–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏ –ø–æ–Ω–∏–º–∞–µ—Ç–µ, –∫–∞–∫ –∏–∑–±–µ–∂–∞—Ç—å —Ç–∏–ø–∏—á–Ω—ã—Ö –æ—à–∏–±–æ–∫ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ scanf(). 
              –≠—Ç–æ –≤–∞–∂–Ω—ã–π –Ω–∞–≤—ã–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º.
              –í —Å–ª–µ–¥—É—é—â–µ–º —É—Ä–æ–∫–µ –º—ã –Ω–∞—É—á–∏–º—Å—è —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–æ—Å—Ç—ã–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã –∏ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏.
            </p>
            {Object.values(completedTasks).every(task => task) && (
              <div className="mt-3 p-3 bg-green-900/20 border border-green-700/30 rounded-lg flex items-center">
                <CheckCircle className="w-5 h-5 text-green-400 mr-2 flex-shrink-0" />
                <span className="text-green-300">–í—Å–µ –∑–∞–¥–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã! –í—ã –≥–æ—Ç–æ–≤—ã –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Ä–æ–∫—É.</span>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
};

export default Part3;