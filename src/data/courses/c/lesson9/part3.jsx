// src/data/courses/c/lesson9/part3.jsx
import React, { useState } from 'react';
import { Monitor, FileText, Play, Code, Edit3, FunctionSquare, CheckCircle, Box } from 'lucide-react';

const Part3 = () => {
  const [completedTasks, setCompletedTasks] = useState({
    task1: false,
    task2: false,
    task3: false
  });

  const handleTaskComplete = (task) => {
    setCompletedTasks(prev => ({
      ...prev,
      [task]: !prev[task]
    }));
  };

  return (
    <div className="space-y-8 text-gray-200">
      {/* –í—Å—Ç—É–ø–ª–µ–Ω–∏–µ */}
      <div className="bg-gradient-to-r from-blue-900/30 to-purple-900/30 backdrop-blur-sm border border-blue-700/30 rounded-2xl p-6 shadow-lg">
        <div className="flex items-start gap-4">
          <div className="bg-blue-500/20 p-3 rounded-lg">
            <Monitor className="w-6 h-6 text-blue-400" />
          </div>
          <div>
            <h1 className="text-2xl md:text-3xl font-bold text-white mb-2">üíª –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ: –§—É–Ω–∫—Ü–∏–∏ –≤ C</h1>
            <p className="text-gray-300">
              <span className="font-medium text-yellow-400">üéØ –¶–µ–ª—å:</span> –ù–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ –æ—Å–≤–æ–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞.
            </p>
          </div>
        </div>
      </div>

      {/* –ó–∞–¥–∞–Ω–∏–µ 1: –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ */}
      <div className={`bg-gray-800/40 backdrop-blur-sm border rounded-2xl p-6 shadow-xl ${completedTasks.task1 ? 'border-green-700/50' : 'border-gray-700/50'}`}>
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <FileText className="w-5 h-5 text-green-400" />
          –ó–∞–¥–∞–Ω–∏–µ 1: –°–æ–∑–¥–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É —Å —Ñ—É–Ω–∫—Ü–∏–µ–π, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:
          </p>
        </div>
        <div className="mt-6 space-y-6">
          <div className="bg-gray-900/50 p-5 rounded-xl border border-green-700/30">
            <h3 className="font-bold text-green-300 mb-3 flex items-center gap-2">
              <span className="bg-gray-700 w-6 h-6 rounded-full flex items-center justify-center text-sm">1</span>
              –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª —Å —Ñ—É–Ω–∫—Ü–∏–µ–π –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
            </h3>
            <ul className="list-disc pl-6 space-y-2 text-gray-300">
              <li>–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª <code className="bg-gray-700 px-1.5 py-0.5 rounded">greeting.c</code></li>
              <li>–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é <code className="bg-gray-700 px-1.5 py-0.5 rounded">void printGreeting()</code> –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤</li>
              <li>–§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–æ–¥–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</li>
              <li>–í—ã–∑–æ–≤–∏—Ç–µ —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤ <code className="bg-gray-700 px-1.5 py-0.5 rounded">main()</code></li>
            </ul>
          </div>
          
          <div className="bg-gray-900/50 p-5 rounded-xl border border-blue-700/30">
            <h3 className="font-bold text-blue-300 mb-3 flex items-center gap-2">
              <span className="bg-gray-700 w-6 h-6 rounded-full flex items-center justify-center text-sm">2</span>
              –ü—Ä–∏–º–µ—Ä —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏
            </h3>
            <div className="bg-gray-800 p-4 rounded-lg mt-3 text-sm">
              <pre className="text-green-300">
{`#include <stdio.h>

// –§—É–Ω–∫—Ü–∏—è –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏ –±–µ–∑ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
void printGreeting() {
    printf("===================\\n");
    printf("  –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\\n");
    printf("  –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–±–æ—Ç—É!\\n");
    printf("===================\\n");
}

int main() {
    printGreeting();  // –ü–µ—Ä–≤—ã–π –≤—ã–∑–æ–≤
    printf("–í—ã–ø–æ–ª–Ω—è–µ–º –∫–∞–∫–∏–µ-—Ç–æ –¥–µ–π—Å—Ç–≤–∏—è...\\n");
    printGreeting();  // –í—Ç–æ—Ä–æ–π –≤—ã–∑–æ–≤
    
    return 0;
}`}
              </pre>
            </div>
            <div className="mt-3 p-3 bg-black rounded text-sm">
              <p className="text-white">–û–∂–∏–¥–∞–µ–º—ã–π –≤—ã–≤–æ–¥:</p>
              <p className="text-gray-300 text-xs">
                ===================<br/>
                &nbsp;&nbsp;–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!<br/>
                &nbsp;&nbsp;–ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–±–æ—Ç—É!<br/>
                ===================<br/>
                –í—ã–ø–æ–ª–Ω—è–µ–º –∫–∞–∫–∏–µ-—Ç–æ –¥–µ–π—Å—Ç–≤–∏—è...<br/>
                ===================<br/>
                &nbsp;&nbsp;–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!<br/>
                &nbsp;&nbsp;–ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–±–æ—Ç—É!<br/>
                ===================
              </p>
            </div>
          </div>
        </div>
        
        <div className="mt-6 flex items-center">
          <input
            type="checkbox"
            id="task1"
            checked={completedTasks.task1}
            onChange={() => handleTaskComplete('task1')}
            className="w-5 h-5 text-blue-600 rounded focus:ring-blue-500"
          />
          <label htmlFor="task1" className="ml-2 text-gray-300">
            –Ø —Å–æ–∑–¥–∞–ª –ø—Ä–æ–≥—Ä–∞–º–º—É —Å —Ñ—É–Ω–∫—Ü–∏–µ–π –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
          </label>
          {completedTasks.task1 && <CheckCircle className="ml-2 w-5 h-5 text-green-400" />}
        </div>
      </div>

      {/* –ó–∞–¥–∞–Ω–∏–µ 2: –§—É–Ω–∫—Ü–∏—è —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º */}
      <div className={`bg-gray-800/40 backdrop-blur-sm border rounded-2xl p-6 shadow-xl ${completedTasks.task2 ? 'border-green-700/50' : 'border-gray-700/50'}`}>
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Edit3 className="w-5 h-5 text-purple-400" />
          –ó–∞–¥–∞–Ω–∏–µ 2: –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏:
          </p>
        </div>
        <div className="mt-6 space-y-6">
          <div className="bg-gray-900/50 p-5 rounded-xl border border-purple-700/30">
            <h3 className="font-bold text-purple-300 mb-3">–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ:</h3>
            <ul className="list-disc pl-6 space-y-2 text-gray-300">
              <li>–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª <code className="bg-gray-700 px-1.5 py-0.5 rounded">math_functions.c</code></li>
              <li>–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é <code className="bg-gray-700 px-1.5 py-0.5 rounded">int square(int number)</code> –¥–ª—è –≤–æ–∑–≤–µ–¥–µ–Ω–∏—è –≤ –∫–≤–∞–¥—Ä–∞—Ç</li>
              <li>–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é <code className="bg-gray-700 px-1.5 py-0.5 rounded">int max(int a, int b)</code> –¥–ª—è –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –±–æ–ª—å—à–µ–≥–æ —á–∏—Å–ª–∞</li>
              <li>–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é <code className="bg-gray-700 px-1.5 py-0.5 rounded">float average(int a, int b)</code> –¥–ª—è –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è —Å—Ä–µ–¥–Ω–µ–≥–æ</li>
              <li>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–æ—Ç–æ—Ç–∏–ø—ã —Ñ—É–Ω–∫—Ü–∏–π –ø–µ—Ä–µ–¥ <code className="bg-gray-700 px-1.5 py-0.5 rounded">main()</code></li>
              <li>–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ <code className="bg-gray-700 px-1.5 py-0.5 rounded">main()</code></li>
            </ul>
            <div className="mt-4 bg-gray-800 p-3 rounded">
              <pre className="text-purple-300 text-sm">
{`#include <stdio.h>

// –ü—Ä–æ—Ç–æ—Ç–∏–ø—ã —Ñ—É–Ω–∫—Ü–∏–π
int square(int number);
int max(int a, int b);
float average(int a, int b);

int main() {
    int num1 = 5, num2 = 8;
    
    printf("–ö–≤–∞–¥—Ä–∞—Ç %d = %d\\n", num1, square(num1));
    printf("–ö–≤–∞–¥—Ä–∞—Ç %d = %d\\n", num2, square(num2));
    
    printf("–ë–æ–ª—å—à–µ–µ –∏–∑ %d –∏ %d = %d\\n", num1, num2, max(num1, num2));
    
    printf("–°—Ä–µ–¥–Ω–µ–µ %d –∏ %d = %.2f\\n", num1, num2, average(num1, num2));
    
    return 0;
}

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π
int square(int number) {
    return number * number;
}

int max(int a, int b) {
    if (a > b) {
        return a;
    } else {
        return b;
    }
}

float average(int a, int b) {
    return (float)(a + b) / 2;
}`}
              </pre>
            </div>
            <div className="mt-4 p-3 bg-blue-900/20 border border-blue-700/30 rounded-lg">
              <p className="text-blue-300 text-sm">
                üí° <span className="font-medium">–°–æ–≤–µ—Ç:</span> –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ average() ‚Äî –±–µ–∑ (float) —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ—Ç —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã–º!
              </p>
            </div>
          </div>
        </div>
        
        <div className="mt-6 flex items-center">
          <input
            type="checkbox"
            id="task2"
            checked={completedTasks.task2}
            onChange={() => handleTaskComplete('task2')}
            className="w-5 h-5 text-blue-600 rounded focus:ring-blue-500"
          />
          <label htmlFor="task2" className="ml-2 text-gray-300">
            –Ø —Å–æ–∑–¥–∞–ª –ø—Ä–æ–≥—Ä–∞–º–º—É —Å –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏
          </label>
          {completedTasks.task2 && <CheckCircle className="ml-2 w-5 h-5 text-green-400" />}
        </div>
      </div>

      {/* –ó–∞–¥–∞–Ω–∏–µ 3: –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ */}
      <div className={`bg-gray-800/40 backdrop-blur-sm border rounded-2xl p-6 shadow-xl ${completedTasks.task3 ? 'border-green-700/50' : 'border-gray-700/50'}`}>
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <FunctionSquare className="w-5 h-5 text-cyan-400" />
          –ó–∞–¥–∞–Ω–∏–µ 3: –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∞–Ω–∞–ª–∏–∑–∞ —á–∏—Å–µ–ª
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —á–∏—Å–ª–æ —Å –ø–æ–º–æ—â—å—é –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π:
          </p>
        </div>
        <div className="mt-6 space-y-6">
          <div className="bg-gray-900/50 p-5 rounded-xl border border-cyan-700/30">
            <h3 className="font-bold text-cyan-300 mb-3">–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ:</h3>
            <ul className="list-disc pl-6 space-y-2 text-gray-300">
              <li>–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª <code className="bg-gray-700 px-1.5 py-0.5 rounded">number_analyzer.c</code></li>
              <li>–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é <code className="bg-gray-700 px-1.5 py-0.5 rounded">void printMenu()</code> –¥–ª—è –≤—ã–≤–æ–¥–∞ –º–µ–Ω—é</li>
              <li>–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é <code className="bg-gray-700 px-1.5 py-0.5 rounded">int isEven(int number)</code> –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–µ—Ç–Ω–æ—Å—Ç–∏ (–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 1 –µ—Å–ª–∏ —á–µ—Ç–Ω–æ–µ, 0 –µ—Å–ª–∏ –Ω–µ—á–µ—Ç–Ω–æ–µ)</li>
              <li>–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é <code className="bg-gray-700 px-1.5 py-0.5 rounded">int factorial(int number)</code> –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª–∞</li>
              <li>–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é <code className="bg-gray-700 px-1.5 py-0.5 rounded">void printTable(int number)</code> –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ç–∞–±–ª–∏—Ü—ã —É–º–Ω–æ–∂–µ–Ω–∏—è</li>
              <li>–í <code className="bg-gray-700 px-1.5 py-0.5 rounded">main()</code> –∑–∞–ø—Ä–æ—Å–∏—Ç–µ —á–∏—Å–ª–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏</li>
            </ul>
            <div className="mt-4 bg-gray-800 p-3 rounded">
              <pre className="text-cyan-300 text-xs">
{`#include <stdio.h>

// –ü—Ä–æ—Ç–æ—Ç–∏–ø—ã —Ñ—É–Ω–∫—Ü–∏–π
void printMenu();
int isEven(int number);
int factorial(int number);
void printTable(int number);

int main() {
    int number;
    
    printf("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞: ");
    scanf("%d", &number);
    
    printMenu();
    
    printf("\\n–ê–Ω–∞–ª–∏–∑ —á–∏—Å–ª–∞ %d:\\n", number);
    printf("–ß–µ—Ç–Ω–æ–µ: %s\\n", isEven(number) ? "–î–∞" : "–ù–µ—Ç");
    printf("–§–∞–∫—Ç–æ—Ä–∏–∞–ª: %d\\n", factorial(number));
    printf("\\n–¢–∞–±–ª–∏—Ü–∞ —É–º–Ω–æ–∂–µ–Ω–∏—è:\\n");
    printTable(number);
    
    return 0;
}

void printMenu() {
    printf("\\n=== –ê–ù–ê–õ–ò–ó–ê–¢–û–† –ß–ò–°–ï–õ ===\\n");
    printf("–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —á–∏—Å–µ–ª\\n");
    printf("==========================\\n");
}

int isEven(int number) {
    return number % 2 == 0;
}

int factorial(int number) {
    if (number <= 1) return 1;
    int result = 1;
    for (int i = 2; i <= number; i++) {
        result *= i;
    }
    return result;
}

void printTable(int number) {
    for (int i = 1; i <= 10; i++) {
        printf("%d √ó %d = %d\\n", number, i, number * i);
    }
}`}
              </pre>
            </div>
            <div className="mt-4 p-3 bg-yellow-900/20 border border-yellow-700/30 rounded-lg">
              <p className="text-yellow-300 text-sm">
                ‚ö†Ô∏è <span className="font-medium">–í–∞–∂–Ω–æ:</span> –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –ø—Ä–æ—Ç–æ—Ç–∏–ø—ã —Ñ—É–Ω–∫—Ü–∏–π –æ–±—ä—è–≤–ª–µ–Ω—ã –ø–µ—Ä–µ–¥ main(), –∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π ‚Äî –ø–æ—Å–ª–µ main()!
              </p>
            </div>
          </div>
        </div>
        
        <div className="mt-6 flex items-center">
          <input
            type="checkbox"
            id="task3"
            checked={completedTasks.task3}
            onChange={() => handleTaskComplete('task3')}
            className="w-5 h-5 text-blue-600 rounded focus:ring-blue-500"
          />
          <label htmlFor="task3" className="ml-2 text-gray-300">
            –Ø —Å–æ–∑–¥–∞–ª –∫–æ–º–ø–ª–µ–∫—Å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏
          </label>
          {completedTasks.task3 && <CheckCircle className="ml-2 w-5 h-5 text-green-400" />}
        </div>
      </div>

      {/* –ó–∞–∫–ª—é—á–µ–Ω–∏–µ */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <div className="flex items-start gap-3">
          <div className="bg-green-500/20 p-2 rounded-lg flex-shrink-0">
            <CheckCircle className="w-5 h-5 text-green-400" />
          </div>
          <div>
            <h3 className="font-bold text-white mb-2">–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! üéâ</h3>
            <p className="text-gray-300">
              –¢–µ–ø–µ—Ä—å –≤—ã —É–≤–µ—Ä–µ–Ω–Ω–æ –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∞—à–µ–≥–æ –∫–æ–¥–∞. 
              –í—ã –Ω–∞—É—á–∏–ª–∏—Å—å —Ä–∞–±–æ—Ç–∞—Ç—å —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –∏ –ø—Ä–æ—Ç–æ—Ç–∏–ø–∞–º–∏ —Ñ—É–Ω–∫—Ü–∏–π.
              –í —Å–ª–µ–¥—É—é—â–µ–º —É—Ä–æ–∫–µ –º—ã –Ω–∞—É—á–∏–º—Å—è —Ä–∞–±–æ—Ç–∞—Ç—å —Å –º–∞—Å—Å–∏–≤–∞–º–∏ ‚Äî —Å—Ç—Ä—É–∫—Ç—É—Ä–∞–º–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –∑–Ω–∞—á–µ–Ω–∏–π.
            </p>
            {Object.values(completedTasks).every(task => task) && (
              <div className="mt-3 p-3 bg-green-900/20 border border-green-700/30 rounded-lg flex items-center">
                <CheckCircle className="w-5 h-5 text-green-400 mr-2 flex-shrink-0" />
                <span className="text-green-300">–í—Å–µ –∑–∞–¥–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã! –í—ã –≥–æ—Ç–æ–≤—ã –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Ä–æ–∫—É.</span>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
};

export default Part3;