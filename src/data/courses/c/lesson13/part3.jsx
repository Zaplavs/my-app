// src/data/courses/c/lesson13/part3.jsx
import React, { useState } from 'react';
import { Monitor, FileText, Play, Code, Edit3, User, CheckCircle, Users } from 'lucide-react';

const Part3 = () => {
  const [completedTasks, setCompletedTasks] = useState({
    task1: false,
    task2: false,
    task3: false
  });

  const handleTaskComplete = (task) => {
    setCompletedTasks(prev => ({
      ...prev,
      [task]: !prev[task]
    }));
  };

  return (
    <div className="space-y-8 text-gray-200">
      {/* –í—Å—Ç—É–ø–ª–µ–Ω–∏–µ */}
      <div className="bg-gradient-to-r from-blue-900/30 to-purple-900/30 backdrop-blur-sm border border-blue-700/30 rounded-2xl p-6 shadow-lg">
        <div className="flex items-start gap-4">
          <div className="bg-blue-500/20 p-3 rounded-lg">
            <Monitor className="w-6 h-6 text-blue-400" />
          </div>
          <div>
            <h1 className="text-2xl md:text-3xl font-bold text-white mb-2">üíª –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ: –°—Ç—Ä—É–∫—Ç—É—Ä—ã –≤ C</h1>
            <p className="text-gray-300">
              <span className="font-medium text-yellow-400">üéØ –¶–µ–ª—å:</span> –ù–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ –æ—Å–≤–æ–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
            </p>
          </div>
        </div>
      </div>

      {/* –ó–∞–¥–∞–Ω–∏–µ 1: –ü—Ä–æ—Å—Ç–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ Student */}
      <div className={`bg-gray-800/40 backdrop-blur-sm border rounded-2xl p-6 shadow-xl ${completedTasks.task1 ? 'border-green-700/50' : 'border-gray-700/50'}`}>
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <FileText className="w-5 h-5 text-green-400" />
          –ó–∞–¥–∞–Ω–∏–µ 1: –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å—Ç—É–¥–µ–Ω—Ç–∞
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å—Ç—É–¥–µ–Ω—Ç–µ:
          </p>
        </div>
        <div className="mt-6 space-y-6">
          <div className="bg-gray-900/50 p-5 rounded-xl border border-green-700/30">
            <h3 className="font-bold text-green-300 mb-3 flex items-center gap-2">
              <span className="bg-gray-700 w-6 h-6 rounded-full flex items-center justify-center text-sm">1</span>
              –°–æ–∑–¥–∞–π—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É Student
            </h3>
            <ul className="list-disc pl-6 space-y-2 text-gray-300">
              <li>–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª <code className="bg-gray-700 px-1.5 py-0.5 rounded">student.c</code></li>
              <li>–û–±—ä—è–≤–∏—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É <code className="bg-gray-700 px-1.5 py-0.5 rounded">Student</code> —Å –ø–æ–ª—è–º–∏: –∏–º—è (—Å—Ç—Ä–æ–∫–∞ 50 —Å–∏–º–≤–æ–ª–æ–≤), –≤–æ–∑—Ä–∞—Å—Ç (int), —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª (float)</li>
              <li>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code className="bg-gray-700 px-1.5 py-0.5 rounded">typedef</code> –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã</li>
              <li>–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Ç–∏–ø–∞ Student –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –µ—ë –¥–∞–Ω–Ω—ã–º–∏</li>
              <li>–í—ã–≤–µ–¥–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç—É–¥–µ–Ω—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –≤–∏–¥–µ</li>
            </ul>
          </div>
          
          <div className="bg-gray-900/50 p-5 rounded-xl border border-blue-700/30">
            <h3 className="font-bold text-blue-300 mb-3 flex items-center gap-2">
              <span className="bg-gray-700 w-6 h-6 rounded-full flex items-center justify-center text-sm">2</span>
              –ü—Ä–∏–º–µ—Ä —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏
            </h3>
            <div className="bg-gray-800 p-4 rounded-lg mt-3 text-sm">
              <pre className="text-green-300">
{`#include <stdio.h>
#include <string.h>

typedef struct {
    char name[50];
    int age;
    float average_grade;
} Student;

int main() {
    // –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—É–¥–µ–Ω—Ç–∞
    Student student1 = {
        .name = "–ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞",
        .age = 20,
        .average_grade = 4.75
    };
    
    // –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    printf("=== –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç—É–¥–µ–Ω—Ç–µ ===\\n");
    printf("–ò–º—è: %s\\n", student1.name);
    printf("–í–æ–∑—Ä–∞—Å—Ç: %d –ª–µ—Ç\\n", student1.age);
    printf("–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª: %.2f\\n", student1.average_grade);
    
    // –ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    student1.age = 21;
    student1.average_grade = 4.85;
    
    printf("\\n=== –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è ===\\n");
    printf("–í–æ–∑—Ä–∞—Å—Ç: %d –ª–µ—Ç\\n", student1.age);
    printf("–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª: %.2f\\n", student1.average_grade);
    
    return 0;
}`}
              </pre>
            </div>
            <div className="mt-3 p-3 bg-black rounded text-sm">
              <p className="text-white">–ü—Ä–∏–º–µ—Ä–Ω—ã–π –≤—ã–≤–æ–¥:</p>
              <p className="text-gray-300 text-xs">
                === –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç—É–¥–µ–Ω—Ç–µ ===<br/>
                –ò–º—è: –ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞<br/>
                –í–æ–∑—Ä–∞—Å—Ç: 20 –ª–µ—Ç<br/>
                –°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª: 4.75<br/>
                <br/>
                === –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è ===<br/>
                –í–æ–∑—Ä–∞—Å—Ç: 21 –ª–µ—Ç<br/>
                –°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª: 4.85
              </p>
            </div>
          </div>
        </div>
        
        <div className="mt-6 flex items-center">
          <input
            type="checkbox"
            id="task1"
            checked={completedTasks.task1}
            onChange={() => handleTaskComplete('task1')}
            className="w-5 h-5 text-blue-600 rounded focus:ring-blue-500"
          />
          <label htmlFor="task1" className="ml-2 text-gray-300">
            –Ø —Å–æ–∑–¥–∞–ª –ø—Ä–æ–≥—Ä–∞–º–º—É —Å–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π Student
          </label>
          {completedTasks.task1 && <CheckCircle className="ml-2 w-5 h-5 text-green-400" />}
        </div>
      </div>

      {/* –ó–∞–¥–∞–Ω–∏–µ 2: –ú–∞—Å—Å–∏–≤ —Å—Ç—Ä—É–∫—Ç—É—Ä Book */}
      <div className={`bg-gray-800/40 backdrop-blur-sm border rounded-2xl p-6 shadow-xl ${completedTasks.task2 ? 'border-green-700/50' : 'border-gray-700/50'}`}>
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Edit3 className="w-5 h-5 text-purple-400" />
          –ó–∞–¥–∞–Ω–∏–µ 2: –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∫–Ω–∏–≥
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∏–±–ª–∏–æ—Ç–µ—á–Ω—ã–º —Ñ–æ–Ω–¥–æ–º:
          </p>
        </div>
        <div className="mt-6 space-y-6">
          <div className="bg-gray-900/50 p-5 rounded-xl border border-purple-700/30">
            <h3 className="font-bold text-purple-300 mb-3">–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ:</h3>
            <ul className="list-disc pl-6 space-y-2 text-gray-300">
              <li>–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª <code className="bg-gray-700 px-1.5 py-0.5 rounded">library.c</code></li>
              <li>–û–±—ä—è–≤–∏—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É <code className="bg-gray-700 px-1.5 py-0.5 rounded">Book</code> —Å –ø–æ–ª—è–º–∏: –Ω–∞–∑–≤–∞–Ω–∏–µ, –∞–≤—Ç–æ—Ä, –≥–æ–¥ –∏–∑–¥–∞–Ω–∏—è, —Ü–µ–Ω–∞</li>
              <li>–°–æ–∑–¥–∞–π—Ç–µ –º–∞—Å—Å–∏–≤ –∏–∑ 5 –∫–Ω–∏–≥ –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –µ–≥–æ –¥–∞–Ω–Ω—ã–º–∏</li>
              <li>–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤—Å–µ—Ö –∫–Ω–∏–≥–∞—Ö</li>
              <li>–ù–∞–π–¥–∏—Ç–µ –∏ –≤—ã–≤–µ–¥–∏—Ç–µ —Å–∞–º—É—é –¥–æ—Ä–æ–≥—É—é –∫–Ω–∏–≥—É</li>
              <li>–ü–æ–¥—Å—á–∏—Ç–∞–π—Ç–µ —Å—Ä–µ–¥–Ω—é—é —Ü–µ–Ω—É –≤—Å–µ—Ö –∫–Ω–∏–≥</li>
            </ul>
            <div className="mt-4 bg-gray-800 p-3 rounded">
              <pre className="text-purple-300 text-sm">
{`#include <stdio.h>
#include <string.h>

typedef struct {
    char title[100];
    char author[50];
    int year;
    float price;
} Book;

int main() {
    // –ú–∞—Å—Å–∏–≤ –∫–Ω–∏–≥
    Book library[5] = {
        {"–í–æ–π–Ω–∞ –∏ –º–∏—Ä", "–õ.–ù. –¢–æ–ª—Å—Ç–æ–π", 1869, 1200.50},
        {"–ü—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –∏ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ", "–§.–ú. –î–æ—Å—Ç–æ–µ–≤—Å–∫–∏–π", 1866, 850.00},
        {"–ú–∞—Å—Ç–µ—Ä –∏ –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞", "–ú.–ê. –ë—É–ª–≥–∞–∫–æ–≤", 1967, 950.75},
        {"–ï–≤–≥–µ–Ω–∏–π –û–Ω–µ–≥–∏–Ω", "–ê.–°. –ü—É—à–∫–∏–Ω", 1833, 680.25},
        {"–ê–Ω–Ω–∞ –ö–∞—Ä–µ–Ω–∏–Ω–∞", "–õ.–ù. –¢–æ–ª—Å—Ç–æ–π", 1878, 1100.00}
    };
    
    printf("=== –ë–∏–±–ª–∏–æ—Ç–µ—á–Ω—ã–π —Ñ–æ–Ω–¥ ===\\n");
    
    // –í—ã–≤–æ–¥ –≤—Å–µ—Ö –∫–Ω–∏–≥
    for (int i = 0; i < 5; i++) {
        printf("%d. %s\\n", i + 1, library[i].title);
        printf("   –ê–≤—Ç–æ—Ä: %s\\n", library[i].author);
        printf("   –ì–æ–¥: %d\\n", library[i].year);
        printf("   –¶–µ–Ω–∞: %.2f —Ä—É–±.\\n\\n", library[i].price);
    }
    
    // –ü–æ–∏—Å–∫ —Å–∞–º–æ–π –¥–æ—Ä–æ–≥–æ–π –∫–Ω–∏–≥–∏
    int most_expensive = 0;
    for (int i = 1; i < 5; i++) {
        if (library[i].price > library[most_expensive].price) {
            most_expensive = i;
        }
    }
    
    printf("–°–∞–º–∞—è –¥–æ—Ä–æ–≥–∞—è –∫–Ω–∏–≥–∞:\\n");
    printf("  %s (%.2f —Ä—É–±.)\\n", library[most_expensive].title, library[most_expensive].price);
    
    // –ü–æ–¥—Å—á–µ—Ç —Å—Ä–µ–¥–Ω–µ–π —Ü–µ–Ω—ã
    float total_price = 0;
    for (int i = 0; i < 5; i++) {
        total_price += library[i].price;
    }
    float average_price = total_price / 5;
    
    printf("–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –∫–Ω–∏–≥: %.2f —Ä—É–±.\\n", average_price);
    
    return 0;
}`}
              </pre>
            </div>
          </div>
        </div>
        
        <div className="mt-6 flex items-center">
          <input
            type="checkbox"
            id="task2"
            checked={completedTasks.task2}
            onChange={() => handleTaskComplete('task2')}
            className="w-5 h-5 text-blue-600 rounded focus:ring-blue-500"
          />
          <label htmlFor="task2" className="ml-2 text-gray-300">
            –Ø —Å–æ–∑–¥–∞–ª –ø—Ä–æ–≥—Ä–∞–º–º—É —Å –±–∏–±–ª–∏–æ—Ç–µ—á–Ω—ã–º —Ñ–æ–Ω–¥–æ–º
          </label>
          {completedTasks.task2 && <CheckCircle className="ml-2 w-5 h-5 text-green-400" />}
        </div>
      </div>

      {/* –ó–∞–¥–∞–Ω–∏–µ 3: –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞–º–∏ */}
      <div className={`bg-gray-800/40 backdrop-blur-sm border rounded-2xl p-6 shadow-xl ${completedTasks.task3 ? 'border-green-700/50' : 'border-gray-700/50'}`}>
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Users className="w-5 h-5 text-cyan-400" />
          –ó–∞–¥–∞–Ω–∏–µ 3: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º–∏ –∫–æ–º–ø–∞–Ω–∏–∏
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞—Ö —Å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º –≤–≤–æ–¥–æ–º:
          </p>
        </div>
        <div className="mt-6 space-y-6">
          <div className="bg-gray-900/50 p-5 rounded-xl border border-cyan-700/30">
            <h3 className="font-bold text-cyan-300 mb-3">–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ:</h3>
            <ul className="list-disc pl-6 space-y-2 text-gray-300">
              <li>–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª <code className="bg-gray-700 px-1.5 py-0.5 rounded">employees.c</code></li>
              <li>–û–±—ä—è–≤–∏—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É <code className="bg-gray-700 px-1.5 py-0.5 rounded">Employee</code> —Å –ø–æ–ª—è–º–∏: —Ç–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä, –§–ò–û, –¥–æ–ª–∂–Ω–æ—Å—Ç—å, –æ–∫–ª–∞–¥, —Å—Ç–∞–∂ —Ä–∞–±–æ—Ç—ã</li>
              <li>–ó–∞–ø—Ä–æ—Å–∏—Ç–µ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</li>
              <li>–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –≤—ã–¥–µ–ª–∏—Ç–µ –ø–∞–º—è—Ç—å –¥–ª—è –º–∞—Å—Å–∏–≤–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</li>
              <li>–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã–º–∏, –≤–≤–µ–¥–µ–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º</li>
              <li>–í—ã–≤–µ–¥–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</li>
              <li>–ù–∞–π–¥–∏—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º —Å—Ç–∞–∂–µ–º</li>
              <li>–ü—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Å–≤–æ–±–æ–¥–∏—Ç–µ –≤—ã–¥–µ–ª–µ–Ω–Ω—É—é –ø–∞–º—è—Ç—å</li>
            </ul>
            <div className="mt-4 bg-gray-800 p-3 rounded">
              <pre className="text-cyan-300 text-xs">
{`#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct {
    int id;
    char name[50];
    char position[50];
    float salary;
    int experience;
} Employee;

int main() {
    int n;
    
    printf("–°–∫–æ–ª—å–∫–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å? ");
    scanf("%d", &n);
    
    // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –≤—ã–¥–µ–ª–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏
    Employee *employees = (Employee*)malloc(n * sizeof(Employee));
    
    if (employees == NULL) {
        printf("–û—à–∏–±–∫–∞ –≤—ã–¥–µ–ª–µ–Ω–∏—è –ø–∞–º—è—Ç–∏!\\n");
        return 1;
    }
    
    // –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞—Ö
    printf("\\n–í–≤–µ–¥–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞—Ö:\\n");
    for (int i = 0; i < n; i++) {
        printf("\\n–°–æ—Ç—Ä—É–¥–Ω–∏–∫ %d:\\n", i + 1);
        
        employees[i].id = i + 1;
        
        printf("  –§–ò–û: ");
        scanf(" %[^\n]", employees[i].name);
        
        printf("  –î–æ–ª–∂–Ω–æ—Å—Ç—å: ");
        scanf(" %[^\n]", employees[i].position);
        
        printf("  –û–∫–ª–∞–¥: ");
        scanf("%f", &employees[i].salary);
        
        printf("  –°—Ç–∞–∂ (–ª–µ—Ç): ");
        scanf("%d", &employees[i].experience);
    }
    
    // –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞—Ö
    printf("\\n\\n=== –°–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ ===\\n");
    for (int i = 0; i < n; i++) {
        printf("%d. %s\\n", employees[i].id, employees[i].name);
        printf("   –î–æ–ª–∂–Ω–æ—Å—Ç—å: %s\\n", employees[i].position);
        printf("   –û–∫–ª–∞–¥: %.2f —Ä—É–±.\\n", employees[i].salary);
        printf("   –°—Ç–∞–∂: %d –ª–µ—Ç\\n\\n", employees[i].experience);
    }
    
    // –ü–æ–∏—Å–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º —Å—Ç–∞–∂–µ–º
    int max_exp_index = 0;
    for (int i = 1; i < n; i++) {
        if (employees[i].experience > employees[max_exp_index].experience) {
            max_exp_index = i;
        }
    }
    
    printf("–°–æ—Ç—Ä—É–¥–Ω–∏–∫ —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º —Å—Ç–∞–∂–µ–º:\\n");
    printf("  %s (%d –ª–µ—Ç)\\n", employees[max_exp_index].name, employees[max_exp_index].experience);
    
    // –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏
    free(employees);
    employees = NULL;
    
    printf("\\n–ü–∞–º—è—Ç—å –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∞. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.\\n");
    
    return 0;
}`}
              </pre>
            </div>
            <div className="mt-4 p-3 bg-yellow-900/20 border border-yellow-700/30 rounded-lg">
              <p className="text-yellow-300 text-sm">
                ‚ö†Ô∏è <span className="font-medium">–í–∞–∂–Ω–æ:</span> –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ <code className="bg-gray-700 px-1.5 py-0.5 rounded">scanf(" %[^\n]", ...)</code> 
                –¥–ª—è –≤–≤–æ–¥–∞ —Å—Ç—Ä–æ–∫ —Å –ø—Ä–æ–±–µ–ª–∞–º–∏ –∏ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏!
              </p>
            </div>
          </div>
        </div>
        
        <div className="mt-6 flex items-center">
          <input
            type="checkbox"
            id="task3"
            checked={completedTasks.task3}
            onChange={() => handleTaskComplete('task3')}
            className="w-5 h-5 text-blue-600 rounded focus:ring-blue-500"
          />
          <label htmlFor="task3" className="ml-2 text-gray-300">
            –Ø —Å–æ–∑–¥–∞–ª –ø—Ä–æ–≥—Ä–∞–º–º—É —Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º–∏
          </label>
          {completedTasks.task3 && <CheckCircle className="ml-2 w-5 h-5 text-green-400" />}
        </div>
      </div>

      {/* –ó–∞–∫–ª—é—á–µ–Ω–∏–µ */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <div className="flex items-start gap-3">
          <div className="bg-green-500/20 p-2 rounded-lg flex-shrink-0">
            <CheckCircle className="w-5 h-5 text-green-400" />
          </div>
          <div>
            <h3 className="font-bold text-white mb-2">–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! üéâ</h3>
            <p className="text-gray-300">
              –¢–µ–ø–µ—Ä—å –≤—ã —É–≤–µ—Ä–µ–Ω–Ω–æ –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –≤ C. 
              –í—ã –Ω–∞—É—á–∏–ª–∏—Å—å –æ–±—ä–µ–¥–∏–Ω—è—Ç—å —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, —Ä–∞–±–æ—Ç–∞—Ç—å —Å –º–∞—Å—Å–∏–≤–∞–º–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä 
              –∏ —Å–æ—á–µ—Ç–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –ø–∞–º—è—Ç—å—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–∏–±–∫–∏—Ö –ø—Ä–æ–≥—Ä–∞–º–º.
              –í —Å–ª–µ–¥—É—é—â–µ–º —É—Ä–æ–∫–µ –º—ã –Ω–∞—É—á–∏–º—Å—è –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –≤ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ —Ä–∞–±–æ—Ç–∞—Ç—å —Å —É–∫–∞–∑–∞—Ç–µ–ª—è–º–∏ –Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã.
            </p>
            {Object.values(completedTasks).every(task => task) && (
              <div className="mt-3 p-3 bg-green-900/20 border border-green-700/30 rounded-lg flex items-center">
                <CheckCircle className="w-5 h-5 text-green-400 mr-2 flex-shrink-0" />
                <span className="text-green-300">–í—Å–µ –∑–∞–¥–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã! –í—ã –≥–æ—Ç–æ–≤—ã –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Ä–æ–∫—É.</span>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
};

export default Part3;