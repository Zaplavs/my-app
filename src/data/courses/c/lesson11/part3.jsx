// src/data/courses/c/lesson11/part3.jsx
import React, { useState } from 'react';
import { Monitor, FileText, Play, Code, Edit3, Navigation, CheckCircle, Target } from 'lucide-react';

const Part3 = () => {
  const [completedTasks, setCompletedTasks] = useState({
    task1: false,
    task2: false,
    task3: false
  });

  const handleTaskComplete = (task) => {
    setCompletedTasks(prev => ({
      ...prev,
      [task]: !prev[task]
    }));
  };

  return (
    <div className="space-y-8 text-gray-200">
      {/* –í—Å—Ç—É–ø–ª–µ–Ω–∏–µ */}
      <div className="bg-gradient-to-r from-blue-900/30 to-purple-900/30 backdrop-blur-sm border border-blue-700/30 rounded-2xl p-6 shadow-lg">
        <div className="flex items-start gap-4">
          <div className="bg-blue-500/20 p-3 rounded-lg">
            <Monitor className="w-6 h-6 text-blue-400" />
          </div>
          <div>
            <h1 className="text-2xl md:text-3xl font-bold text-white mb-2">üíª –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ: –£–∫–∞–∑–∞—Ç–µ–ª–∏ –≤ C</h1>
            <p className="text-gray-300">
              <span className="font-medium text-yellow-400">üéØ –¶–µ–ª—å:</span> –ù–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ –æ—Å–≤–æ–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å —É–∫–∞–∑–∞—Ç–µ–ª—è–º–∏, –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞–º–∏ & –∏ *.
            </p>
          </div>
        </div>
      </div>

      {/* –ó–∞–¥–∞–Ω–∏–µ 1: –û—Å–Ω–æ–≤—ã —É–∫–∞–∑–∞—Ç–µ–ª–µ–π */}
      <div className={`bg-gray-800/40 backdrop-blur-sm border rounded-2xl p-6 shadow-xl ${completedTasks.task1 ? 'border-green-700/50' : 'border-gray-700/50'}`}>
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <FileText className="w-5 h-5 text-green-400" />
          –ó–∞–¥–∞–Ω–∏–µ 1: –†–∞–±–æ—Ç–∞ —Å –∞–¥—Ä–µ—Å–∞–º–∏ –∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å –∞–¥—Ä–µ—Å–∞–º–∏ –∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞—Ç–µ–ª–∏:
          </p>
        </div>
        <div className="mt-6 space-y-6">
          <div className="bg-gray-900/50 p-5 rounded-xl border border-green-700/30">
            <h3 className="font-bold text-green-300 mb-3 flex items-center gap-2">
              <span className="bg-gray-700 w-6 h-6 rounded-full flex items-center justify-center text-sm">1</span>
              –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É —Å —É–∫–∞–∑–∞—Ç–µ–ª—è–º–∏
            </h3>
            <ul className="list-disc pl-6 space-y-2 text-gray-300">
              <li>–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª <code className="bg-gray-700 px-1.5 py-0.5 rounded">pointers_basics.c</code></li>
              <li>–û–±—ä—è–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Ç–∏–ø–∞ <code className="bg-gray-700 px-1.5 py-0.5 rounded">int</code> —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º 100</li>
              <li>–û–±—ä—è–≤–∏—Ç–µ —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ —ç—Ç—É –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é</li>
              <li>–í—ã–≤–µ–¥–∏—Ç–µ: –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π, –∞–¥—Ä–µ—Å –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π, –∑–Ω–∞—á–µ–Ω–∏–µ —É–∫–∞–∑–∞—Ç–µ–ª—è, –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ –∞–¥—Ä–µ—Å—É —É–∫–∞–∑–∞—Ç–µ–ª—è</li>
              <li>–ò–∑–º–µ–Ω–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ 200</li>
              <li>–°–Ω–æ–≤–∞ –≤—ã–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–±—ã—á–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º</li>
            </ul>
          </div>
          
          <div className="bg-gray-900/50 p-5 rounded-xl border border-blue-700/30">
            <h3 className="font-bold text-blue-300 mb-3 flex items-center gap-2">
              <span className="bg-gray-700 w-6 h-6 rounded-full flex items-center justify-center text-sm">2</span>
              –ü—Ä–∏–º–µ—Ä —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏
            </h3>
            <div className="bg-gray-800 p-4 rounded-lg mt-3 text-sm">
              <pre className="text-green-300">
{`#include <stdio.h>

int main() {
    int number = 100;
    int *ptr = &number;
    
    printf("=== –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ ===\\n");
    printf("–ó–Ω–∞—á–µ–Ω–∏–µ number: %d\\n", number);
    printf("–ê–¥—Ä–µ—Å number: %p\\n", &number);
    printf("–ó–Ω–∞—á–µ–Ω–∏–µ ptr: %p\\n", ptr);
    printf("–ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ –∞–¥—Ä–µ—Å—É ptr: %d\\n", *ptr);
    
    // –ò–∑–º–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞—Ç–µ–ª—å
    *ptr = 200;
    
    printf("\\n=== –ü–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞—Ç–µ–ª—å ===\\n");
    printf("–ó–Ω–∞—á–µ–Ω–∏–µ number: %d\\n", number);
    printf("–ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ –∞–¥—Ä–µ—Å—É ptr: %d\\n", *ptr);
    
    return 0;
}`}
              </pre>
            </div>
            <div className="mt-3 p-3 bg-black rounded text-sm">
              <p className="text-white">–ü—Ä–∏–º–µ—Ä–Ω—ã–π –≤—ã–≤–æ–¥:</p>
              <p className="text-gray-300 text-xs">
                === –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ ===<br/>
                –ó–Ω–∞—á–µ–Ω–∏–µ number: 100<br/>
                –ê–¥—Ä–µ—Å number: 0x7fff5fbff6ac<br/>
                –ó–Ω–∞—á–µ–Ω–∏–µ ptr: 0x7fff5fbff6ac<br/>
                –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ –∞–¥—Ä–µ—Å—É ptr: 100<br/>
                <br/>
                === –ü–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞—Ç–µ–ª—å ===<br/>
                –ó–Ω–∞—á–µ–Ω–∏–µ number: 200<br/>
                –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ –∞–¥—Ä–µ—Å—É ptr: 200
              </p>
            </div>
          </div>
        </div>
        
        <div className="mt-6 flex items-center">
          <input
            type="checkbox"
            id="task1"
            checked={completedTasks.task1}
            onChange={() => handleTaskComplete('task1')}
            className="w-5 h-5 text-blue-600 rounded focus:ring-blue-500"
          />
          <label htmlFor="task1" className="ml-2 text-gray-300">
            –Ø —Å–æ–∑–¥–∞–ª –ø—Ä–æ–≥—Ä–∞–º–º—É —Å –æ—Å–Ω–æ–≤–∞–º–∏ —É–∫–∞–∑–∞—Ç–µ–ª–µ–π
          </label>
          {completedTasks.task1 && <CheckCircle className="ml-2 w-5 h-5 text-green-400" />}
        </div>
      </div>

      {/* –ó–∞–¥–∞–Ω–∏–µ 2: –£–∫–∞–∑–∞—Ç–µ–ª–∏ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ */}
      <div className={`bg-gray-800/40 backdrop-blur-sm border rounded-2xl p-6 shadow-xl ${completedTasks.task2 ? 'border-green-700/50' : 'border-gray-700/50'}`}>
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Edit3 className="w-5 h-5 text-purple-400" />
          –ó–∞–¥–∞–Ω–∏–µ 2: –†–∞–±–æ—Ç–∞ —Å —É–∫–∞–∑–∞—Ç–µ–ª—è–º–∏ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É —Å —É–∫–∞–∑–∞—Ç–µ–ª—è–º–∏ –Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤:
          </p>
        </div>
        <div className="mt-6 space-y-6">
          <div className="bg-gray-900/50 p-5 rounded-xl border border-purple-700/30">
            <h3 className="font-bold text-purple-300 mb-3">–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ:</h3>
            <ul className="list-disc pl-6 space-y-2 text-gray-300">
              <li>–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª <code className="bg-gray-700 px-1.5 py-0.5 rounded">different_pointers.c</code></li>
              <li>–û–±—ä—è–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤: <code className="bg-gray-700 px-1.5 py-0.5 rounded">int</code>, <code className="bg-gray-700 px-1.5 py-0.5 rounded">float</code>, <code className="bg-gray-700 px-1.5 py-0.5 rounded">char</code></li>
              <li>–°–æ–∑–¥–∞–π—Ç–µ —É–∫–∞–∑–∞—Ç–µ–ª–∏ –Ω–∞ –∫–∞–∂–¥—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ç–∏–ø–æ–≤</li>
              <li>–í—ã–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –∞–¥—Ä–µ—Å–∞ –≤—Å–µ—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞—Ç–µ–ª–∏</li>
              <li>–ò–∑–º–µ–Ω–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤—Å–µ—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞—Ç–µ–ª–∏</li>
              <li>–°–Ω–æ–≤–∞ –≤—ã–≤–µ–¥–∏—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è</li>
            </ul>
            <div className="mt-4 bg-gray-800 p-3 rounded">
              <pre className="text-purple-300 text-sm">
{`#include <stdio.h>

int main() {
    // –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤
    int integer = 42;
    float decimal = 3.14;
    char symbol = 'A';
    
    // –£–∫–∞–∑–∞—Ç–µ–ª–∏ –Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    int *int_ptr = &integer;
    float *float_ptr = &decimal;
    char *char_ptr = &symbol;
    
    printf("=== –ò—Å—Ö–æ–¥–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è ===\\n");
    printf("int: %d, –∞–¥—Ä–µ—Å: %p\\n", *int_ptr, int_ptr);
    printf("float: %.2f, –∞–¥—Ä–µ—Å: %p\\n", *float_ptr, float_ptr);
    printf("char: %c, –∞–¥—Ä–µ—Å: %p\\n", *char_ptr, char_ptr);
    
    // –ò–∑–º–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞—Ç–µ–ª–∏
    *int_ptr = 100;
    *float_ptr = 2.71;
    *char_ptr = 'Z';
    
    printf("\\n=== –ò–∑–º–µ–Ω–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è ===\\n");
    printf("int: %d\\n", integer);
    printf("float: %.2f\\n", decimal);
    printf("char: %c\\n", symbol);
    
    return 0;
}`}
              </pre>
            </div>
          </div>
        </div>
        
        <div className="mt-6 flex items-center">
          <input
            type="checkbox"
            id="task2"
            checked={completedTasks.task2}
            onChange={() => handleTaskComplete('task2')}
            className="w-5 h-5 text-blue-600 rounded focus:ring-blue-500"
          />
          <label htmlFor="task2" className="ml-2 text-gray-300">
            –Ø —Å–æ–∑–¥–∞–ª –ø—Ä–æ–≥—Ä–∞–º–º—É —Å —É–∫–∞–∑–∞—Ç–µ–ª—è–º–∏ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤
          </label>
          {completedTasks.task2 && <CheckCircle className="ml-2 w-5 h-5 text-green-400" />}
        </div>
      </div>

      {/* –ó–∞–¥–∞–Ω–∏–µ 3: NULL —É–∫–∞–∑–∞—Ç–µ–ª–∏ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å */}
      <div className={`bg-gray-800/40 backdrop-blur-sm border rounded-2xl p-6 shadow-xl ${completedTasks.task3 ? 'border-green-700/50' : 'border-gray-700/50'}`}>
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Target className="w-5 h-5 text-cyan-400" />
          –ó–∞–¥–∞–Ω–∏–µ 3: –†–∞–±–æ—Ç–∞ —Å NULL —É–∫–∞–∑–∞—Ç–µ–ª—è–º–∏
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å —É–∫–∞–∑–∞—Ç–µ–ª—è–º–∏:
          </p>
        </div>
        <div className="mt-6 space-y-6">
          <div className="bg-gray-900/50 p-5 rounded-xl border border-cyan-700/30">
            <h3 className="font-bold text-cyan-300 mb-3">–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ:</h3>
            <ul className="list-disc pl-6 space-y-2 text-gray-300">
              <li>–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª <code className="bg-gray-700 px-1.5 py-0.5 rounded">null_pointers.c</code></li>
              <li>–û–±—ä—è–≤–∏—Ç–µ —É–∫–∞–∑–∞—Ç–µ–ª—å, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–Ω–∞—á–µ–Ω–∏–µ–º <code className="bg-gray-700 px-1.5 py-0.5 rounded">NULL</code></li>
              <li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ <code className="bg-gray-700 px-1.5 py-0.5 rounded">NULL</code> –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º</li>
              <li>–°–æ–∑–¥–∞–π—Ç–µ –æ–±—ã—á–Ω—ã–π —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é <code className="bg-gray-700 px-1.5 py-0.5 rounded">int</code></li>
              <li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –µ–≥–æ –Ω–∞ <code className="bg-gray-700 px-1.5 py-0.5 rounded">NULL</code> –∏ –≤—ã–≤–µ–¥–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è</li>
              <li>–ü—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–π—Ç–µ, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —É–∫–∞–∑–∞—Ç–µ–ª–∏</li>
            </ul>
            <div className="mt-4 bg-gray-800 p-3 rounded">
              <pre className="text-cyan-300 text-xs">
{`#include <stdio.h>

int main() {
    // NULL —É–∫–∞–∑–∞—Ç–µ–ª—å
    int *null_ptr = NULL;
    
    // –û–±—ã—á–Ω—ã–π —É–∫–∞–∑–∞—Ç–µ–ª—å
    int value = 123;
    int *normal_ptr = &value;
    
    printf("=== –ü—Ä–æ–≤–µ—Ä–∫–∞ NULL —É–∫–∞–∑–∞—Ç–µ–ª—è ===\\n");
    if (null_ptr == NULL) {
        printf("null_ptr –Ω–µ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∏ –Ω–∞ —á—Ç–æ\\n");
    } else {
        printf("–ó–Ω–∞—á–µ–Ω–∏–µ null_ptr: %d\\n", *null_ptr);
    }
    
    printf("\\n=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—ã—á–Ω–æ–≥–æ —É–∫–∞–∑–∞—Ç–µ–ª—è ===\\n");
    if (normal_ptr == NULL) {
        printf("normal_ptr –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω\\n");
    } else {
        printf("normal_ptr —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞: %p\\n", normal_ptr);
        printf("–ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ –∞–¥—Ä–µ—Å—É: %d\\n", *normal_ptr);
    }
    
    // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —É–∫–∞–∑–∞—Ç–µ–ª—è
    if (normal_ptr != NULL) {
        *normal_ptr = 456;
        printf("\\n–ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: %d\\n", value);
    }
    
    return 0;
}`}
              </pre>
            </div>
            <div className="mt-4 p-3 bg-yellow-900/20 border border-yellow-700/30 rounded-lg">
              <p className="text-yellow-300 text-sm">
                ‚ö†Ô∏è <span className="font-medium">–í–∞–∂–Ω–æ:</span> –í—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ —É–∫–∞–∑–∞—Ç–µ–ª–∏ –Ω–∞ NULL –ø–µ—Ä–µ–¥ —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞–Ω–∏–µ–º! 
                –≠—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –æ—à–∏–±–∫–∏ –∏ —Å–±–æ–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã.
              </p>
            </div>
          </div>
        </div>
        
        <div className="mt-6 flex items-center">
          <input
            type="checkbox"
            id="task3"
            checked={completedTasks.task3}
            onChange={() => handleTaskComplete('task3')}
            className="w-5 h-5 text-blue-600 rounded focus:ring-blue-500"
          />
          <label htmlFor="task3" className="ml-2 text-gray-300">
            –Ø —Å–æ–∑–¥–∞–ª –ø—Ä–æ–≥—Ä–∞–º–º—É —Å –±–µ–∑–æ–ø–∞—Å–Ω–æ–π —Ä–∞–±–æ—Ç–æ–π —É–∫–∞–∑–∞—Ç–µ–ª–µ–π
          </label>
          {completedTasks.task3 && <CheckCircle className="ml-2 w-5 h-5 text-green-400" />}
        </div>
      </div>

      {/* –ó–∞–∫–ª—é—á–µ–Ω–∏–µ */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <div className="flex items-start gap-3">
          <div className="bg-green-500/20 p-2 rounded-lg flex-shrink-0">
            <CheckCircle className="w-5 h-5 text-green-400" />
          </div>
          <div>
            <h3 className="font-bold text-white mb-2">–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! üéâ</h3>
            <p className="text-gray-300">
              –¢–µ–ø–µ—Ä—å –≤—ã —É–≤–µ—Ä–µ–Ω–Ω–æ –º–æ–∂–µ—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å —Å —É–∫–∞–∑–∞—Ç–µ–ª—è–º–∏ –≤ C. 
              –í—ã –Ω–∞—É—á–∏–ª–∏—Å—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã & –∏ *, —Ä–∞–±–æ—Ç–∞—Ç—å —Å —É–∫–∞–∑–∞—Ç–µ–ª—è–º–∏ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ 
              –∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å —É–∫–∞–∑–∞—Ç–µ–ª—è–º–∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ NULL.
              –í —Å–ª–µ–¥—É—é—â–µ–º —É—Ä–æ–∫–µ –º—ã –Ω–∞—É—á–∏–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —É–∫–∞–∑–∞—Ç–µ–ª–∏ —Å –º–∞—Å—Å–∏–≤–∞–º–∏ –∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏.
            </p>
            {Object.values(completedTasks).every(task => task) && (
              <div className="mt-3 p-3 bg-green-900/20 border border-green-700/30 rounded-lg flex items-center">
                <CheckCircle className="w-5 h-5 text-green-400 mr-2 flex-shrink-0" />
                <span className="text-green-300">–í—Å–µ –∑–∞–¥–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã! –í—ã –≥–æ—Ç–æ–≤—ã –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Ä–æ–∫—É.</span>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
};

export default Part3;