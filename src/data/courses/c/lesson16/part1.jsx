// src/data/courses/c/lesson15/part2.jsx
import React from 'react';
import { Code, Bug, Shield, HardDrive, Zap, CheckCircle } from 'lucide-react';

const Part1 = () => {
  return (
    <div className="space-y-8 text-gray-200">
      {/* –í—Å—Ç—É–ø–ª–µ–Ω–∏–µ */}
      <div className="bg-gradient-to-r from-blue-900/30 to-purple-900/30 backdrop-blur-sm border border-blue-700/30 rounded-2xl p-6 shadow-lg">
        <div className="flex items-start gap-4">
          <div className="bg-blue-500/20 p-3 rounded-lg">
            <Code className="w-6 h-6 text-blue-400" />
          </div>
          <div>
            <h1 className="text-2xl md:text-3xl font-bold text-white mb-2">üîß –£—Ä–æ–∫ 16: –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —É—á–µ—Ç–∞ —Ä–∞–±–æ—á–∏—Ö</h1>
            <h2 className="text-xl font-semibold text-blue-300 mb-3">–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –∫–∞—á–µ—Å—Ç–≤–∞</h2>
            <p className="text-gray-300">
              <span className="font-medium text-yellow-400">üéØ –¶–µ–ª—å —É—Ä–æ–∫–∞:</span> –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –ø—Ä–æ–≤–µ—Å—Ç–∏ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ.
            </p>
          </div>
        </div>
      </div>

      {/* –ü–ª–∞–Ω —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Zap className="w-5 h-5 text-green-400" />
          –ü–ª–∞–Ω —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –±—É–¥–µ—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –ø–æ—ç—Ç–∞–ø–Ω–æ, –Ω–∞—á–∏–Ω–∞—è —Å –±–∞–∑–æ–≤—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä –¥–∞–Ω–Ω—ã—Ö –∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞—è –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π:
          </p>
        </div>

        <div className="mt-6 space-y-4">
          <div className="bg-gray-900/50 p-4 rounded-xl border border-green-700/30">
            <h3 className="font-bold text-green-300 mb-2 flex items-center gap-2">
              <span className="bg-green-600 w-6 h-6 rounded-full flex items-center justify-center text-white text-sm">1</span>
              –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö
            </h3>
            <p className="text-gray-300 text-sm ml-8">
              –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É Worker –∏ —Ä–µ–∞–ª–∏–∑—É–µ–º –±–∞–∑–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–µ–π
            </p>
          </div>
          
          <div className="bg-gray-900/50 p-4 rounded-xl border border-blue-700/30">
            <h3 className="font-bold text-blue-300 mb-2 flex items-center gap-2">
              <span className="bg-blue-600 w-6 h-6 rounded-full flex items-center justify-center text-white text-sm">2</span>
              –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
            </h3>
            <p className="text-gray-300 text-sm ml-8">
              –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è, –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è, –ø–æ–∏—Å–∫–∞ –∏ —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏
            </p>
          </div>
          
          <div className="bg-gray-900/50 p-4 rounded-xl border border-purple-700/30">
            <h3 className="font-bold text-purple-300 mb-2 flex items-center gap-2">
              <span className="bg-purple-600 w-6 h-6 rounded-full flex items-center justify-center text-white text-sm">3</span>
              –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
            </h3>
            <p className="text-gray-300 text-sm ml-8">
              –†–µ–∞–ª–∏–∑—É–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é –∏ –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ø—Ä–æ–≥—Ä–∞–º–º—ã
            </p>
          </div>
          
          <div className="bg-gray-900/50 p-4 rounded-xl border border-orange-700/30">
            <h3 className="font-bold text-orange-300 mb-2 flex items-center gap-2">
              <span className="bg-orange-600 w-6 h-6 rounded-full flex items-center justify-center text-white text-sm">4</span>
              –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
            </h3>
            <p className="text-gray-300 text-sm ml-8">
              –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –µ–¥–∏–Ω—É—é —Ä–∞–±–æ—Ç–∞—é—â—É—é —Å–∏—Å—Ç–µ–º—É
            </p>
          </div>
          
          <div className="bg-gray-900/50 p-4 rounded-xl border border-red-700/30">
            <h3 className="font-bold text-red-300 mb-2 flex items-center gap-2">
              <span className="bg-red-600 w-6 h-6 rounded-full flex items-center justify-center text-white text-sm">5</span>
              –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
            </h3>
            <p className="text-gray-300 text-sm ml-8">
              –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã, –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —É—Ç–µ—á–µ–∫ –ø–∞–º—è—Ç–∏ –∏ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å
            </p>
          </div>
        </div>
      </div>

      {/* –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <HardDrive className="w-5 h-5 text-cyan-400" />
          –®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã Worker
        </h2>
        
        <div className="mt-6 space-y-6">
          <div className="bg-gray-900/50 p-5 rounded-xl border border-cyan-700/30">
            <h3 className="font-bold text-cyan-300 mb-3">–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:</h3>
            <div className="bg-gray-800 p-4 rounded-lg">
              <pre className="text-cyan-300 text-sm">
{`#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_WORKERS 100
#define NAME_LENGTH 50

// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–∞–±–æ—á–µ–º
typedef struct {
    int id;                    // –¢–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä
    char name[NAME_LENGTH];    // –§–ò–û
    int age;                   // –í–æ–∑—Ä–∞—Å—Ç
    float salary;              // –ó–∞—Ä–ø–ª–∞—Ç–∞
    char position[30];         // –î–æ–ª–∂–Ω–æ—Å—Ç—å
    char department[30];       // –û—Ç–¥–µ–ª
} Worker;

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
Worker workers[MAX_WORKERS];
int worker_count = 0;`}
              </pre>
            </div>
            <div className="mt-3 p-2 bg-cyan-900/20 border border-cyan-700/30 rounded text-cyan-300 text-xs">
              üí° <span className="font-medium">–°–æ–≤–µ—Ç:</span> –ò—Å–ø–æ–ª—å–∑—É–µ–º typedef –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞, 
              –∞ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —É–ø—Ä–æ—Å—Ç—è—Ç —Ä–∞–±–æ—Ç—É —Å –¥–∞–Ω–Ω—ã–º–∏ –≤ —Ñ—É–Ω–∫—Ü–∏—è—Ö.
            </div>
          </div>

          <div className="bg-gray-900/50 p-5 rounded-xl border border-green-700/30">
            <h3 className="font-bold text-green-300 mb-3">–§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—á–µ–≥–æ:</h3>
            <div className="bg-gray-800 p-4 rounded-lg">
              <pre className="text-green-300 text-sm">
{`int addWorker() {
    if (worker_count >= MAX_WORKERS) {
        printf("–û—à–∏–±–∫–∞: –î–æ—Å—Ç–∏–≥–Ω—É—Ç–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—á–∏—Ö!\\n");
        return 0;
    }
    
    Worker new_worker;
    
    printf("–í–≤–µ–¥–∏—Ç–µ —Ç–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä: ");
    scanf("%d", &new_worker.id);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å —Ç–∞–±–µ–ª—å–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    for (int i = 0; i < worker_count; i++) {
        if (workers[i].id == new_worker.id) {
            printf("–û—à–∏–±–∫–∞: –†–∞–±–æ—á–∏–π —Å —Ç–∞–∫–∏–º —Ç–∞–±–µ–ª—å–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!\\n");
            return 0;
        }
    }
    
    printf("–í–≤–µ–¥–∏—Ç–µ –§–ò–û: ");
    scanf(" %[^\n]", new_worker.name);
    
    printf("–í–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç: ");
    scanf("%d", &new_worker.age);
    
    printf("–í–≤–µ–¥–∏—Ç–µ –∑–∞—Ä–ø–ª–∞—Ç—É: ");
    scanf("%f", &new_worker.salary);
    
    printf("–í–≤–µ–¥–∏—Ç–µ –¥–æ–ª–∂–Ω–æ—Å—Ç—å: ");
    scanf(" %[^\n]", new_worker.position);
    
    printf("–í–≤–µ–¥–∏—Ç–µ –æ—Ç–¥–µ–ª: ");
    scanf(" %[^\n]", new_worker.department);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –≤ –º–∞—Å—Å–∏–≤
    workers[worker_count] = new_worker;
    worker_count++;
    
    printf("–†–∞–±–æ—á–∏–π —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!\\n");
    return 1;
}`}
              </pre>
            </div>
          </div>
        </div>
      </div>

      {/* –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –ø–æ–∏—Å–∫–∞ */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <CheckCircle className="w-5 h-5 text-purple-400" />
          –®–∞–≥ 2: –§—É–Ω–∫—Ü–∏–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –ø–æ–∏—Å–∫–∞
        </h2>
        
        <div className="mt-6 space-y-6">
          <div className="bg-gray-900/50 p-5 rounded-xl border border-purple-700/30">
            <h3 className="font-bold text-purple-300 mb-3">–§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å–µ—Ö —Ä–∞–±–æ—á–∏—Ö:</h3>
            <div className="bg-gray-800 p-4 rounded-lg">
              <pre className="text-purple-300 text-sm">
{`void showAllWorkers() {
    if (worker_count == 0) {
        printf("–°–ø–∏—Å–æ–∫ —Ä–∞–±–æ—á–∏—Ö –ø—É—Å—Ç!\\n");
        return;
    }
    
    printf("\\n=== –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ä–∞–±–æ—á–∏—Ö ===\\n");
    printf("%-5s %-25s %-5s %-10s %-20s %-15s\\n", 
           "ID", "–§–ò–û", "–í–æ–∑—Ä", "–ó–∞—Ä–ø–ª–∞—Ç–∞", "–î–æ–ª–∂–Ω–æ—Å—Ç—å", "–û—Ç–¥–µ–ª");
    printf("%s\\n", "-------------------------------------------------------------");
    
    for (int i = 0; i < worker_count; i++) {
        printf("%-5d %-25s %-5d %-10.2f %-20s %-15s\\n",
               workers[i].id,
               workers[i].name,
               workers[i].age,
               workers[i].salary,
               workers[i].position,
               workers[i].department);
    }
    printf("\\n–í—Å–µ–≥–æ —Ä–∞–±–æ—á–∏—Ö: %d\\n", worker_count);
}`}
              </pre>
            </div>
          </div>

          <div className="bg-gray-900/50 p-5 rounded-xl border border-orange-700/30">
            <h3 className="font-bold text-orange-300 mb-3">–§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –ø–æ –∏–º–µ–Ω–∏:</h3>
            <div className="bg-gray-800 p-4 rounded-lg">
              <pre className="text-orange-300 text-sm">
{`void findWorker() {
    if (worker_count == 0) {
        printf("–°–ø–∏—Å–æ–∫ —Ä–∞–±–æ—á–∏—Ö –ø—É—Å—Ç!\\n");
        return;
    }
    
    char search_name[NAME_LENGTH];
    printf("–í–≤–µ–¥–∏—Ç–µ –§–ò–û –¥–ª—è –ø–æ–∏—Å–∫–∞: ");
    scanf(" %[^\n]", search_name);
    
    int found = 0;
    printf("\\n=== –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ ===\\n");
    
    for (int i = 0; i < worker_count; i++) {
        if (strstr(workers[i].name, search_name) != NULL) {
            printf("ID: %d\\n", workers[i].id);
            printf("–§–ò–û: %s\\n", workers[i].name);
            printf("–í–æ–∑—Ä–∞—Å—Ç: %d\\n", workers[i].age);
            printf("–ó–∞—Ä–ø–ª–∞—Ç–∞: %.2f\\n", workers[i].salary);
            printf("–î–æ–ª–∂–Ω–æ—Å—Ç—å: %s\\n", workers[i].position);
            printf("–û—Ç–¥–µ–ª: %s\\n", workers[i].department);
            printf("------------------------\\n");
            found = 1;
        }
    }
    
    if (!found) {
        printf("–†–∞–±–æ—á–∏–π —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω.\\n");
    }
}`}
              </pre>
            </div>
          </div>
        </div>
      </div>

      {/* –†–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏ */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <HardDrive className="w-5 h-5 text-blue-400" />
          –®–∞–≥ 3: –§—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏
        </h2>
        
        <div className="mt-6 space-y-6">
          <div className="bg-gray-900/50 p-5 rounded-xl border border-blue-700/30">
            <h3 className="font-bold text-blue-300 mb-3">–§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ —Ñ–∞–π–ª:</h3>
            <div className="bg-gray-800 p-4 rounded-lg">
              <pre className="text-blue-300 text-sm">
{`int saveToFile() {
    FILE *file = fopen("workers.dat", "w");
    
    if (file == NULL) {
        printf("–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏!\\n");
        return 0;
    }
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—á–∏—Ö
    fprintf(file, "%d\\n", worker_count);
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–∞–∂–¥–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ
    for (int i = 0; i < worker_count; i++) {
        fprintf(file, "%d\\n", workers[i].id);
        fprintf(file, "%s\\n", workers[i].name);
        fprintf(file, "%d\\n", workers[i].age);
        fprintf(file, "%.2f\\n", workers[i].salary);
        fprintf(file, "%s\\n", workers[i].position);
        fprintf(file, "%s\\n", workers[i].department);
    }
    
    fclose(file);
    printf("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª workers.dat\\n");
    return 1;
}`}
              </pre>
            </div>
          </div>

          <div className="bg-gray-900/50 p-5 rounded-xl border border-green-700/30">
            <h3 className="font-bold text-green-300 mb-3">–§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ —Ñ–∞–π–ª–∞:</h3>
            <div className="bg-gray-800 p-4 rounded-lg">
              <pre className="text-green-300 text-sm">
{`int loadFromFile() {
    FILE *file = fopen("workers.dat", "r");
    
    if (file == NULL) {
        printf("–§–∞–π–ª workers.dat –Ω–µ –Ω–∞–π–¥–µ–Ω. –ë—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π.\\n");
        return 0;
    }
    
    // –ß–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—á–∏—Ö
    if (fscanf(file, "%d\\n", &worker_count) != 1) {
        printf("–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞!\\n");
        fclose(file);
        return 0;
    }
    
    // –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–∞–∂–¥–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ
    for (int i = 0; i < worker_count; i++) {
        if (fscanf(file, "%d\\n", &workers[i].id) != 1) break;
        if (fgets(workers[i].name, NAME_LENGTH, file) == NULL) break;
        workers[i].name[strcspn(workers[i].name, "\\n")] = 0; // –£–¥–∞–ª—è–µ–º \\n
        if (fscanf(file, "%d\\n", &workers[i].age) != 1) break;
        if (fscanf(file, "%f\\n", &workers[i].salary) != 1) break;
        if (fgets(workers[i].position, 30, file) == NULL) break;
        workers[i].position[strcspn(workers[i].position, "\\n")] = 0;
        if (fgets(workers[i].department, 30, file) == NULL) break;
        workers[i].department[strcspn(workers[i].department, "\\n")] = 0;
    }
    
    fclose(file);
    printf("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ —Ñ–∞–π–ª–∞ workers.dat\\n");
    printf("–ó–∞–≥—Ä—É–∂–µ–Ω–æ %d –∑–∞–ø–∏—Å–µ–π\\n", worker_count);
    return 1;
}`}
              </pre>
            </div>
          </div>
        </div>
      </div>

      {/* –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏ –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Zap className="w-5 h-5 text-yellow-400" />
          –®–∞–≥ 4: –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏ –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
        </h2>
        
        <div className="bg-gray-900/50 p-5 rounded-xl border border-yellow-700/30">
          <h3 className="font-bold text-yellow-300 mb-3">–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω—é:</h3>
          <div className="bg-gray-800 p-4 rounded-lg">
            <pre className="text-yellow-300 text-sm">
{`void showMenu() {
    printf("\\n=== –°–∏—Å—Ç–µ–º–∞ —É—á–µ—Ç–∞ —Ä–∞–±–æ—á–∏—Ö –∑–∞–≤–æ–¥–∞ ===\\n");
    printf("1. –î–æ–±–∞–≤–∏—Ç—å —Ä–∞–±–æ—á–µ–≥–æ\\n");
    printf("2. –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ—Ö —Ä–∞–±–æ—á–∏—Ö\\n");
    printf("3. –ù–∞–π—Ç–∏ —Ä–∞–±–æ—á–µ–≥–æ –ø–æ –∏–º–µ–Ω–∏\\n");
    printf("4. –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª\\n");
    printf("5. –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞\\n");
    printf("6. –í—ã—Ö–æ–¥\\n");
    printf("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ");
}

int main() {
    int choice;
    
    // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    loadFromFile();
    
    while (1) {
        showMenu();
        scanf("%d", &choice);
        
        switch (choice) {
            case 1:
                addWorker();
                break;
            case 2:
                showAllWorkers();
                break;
            case 3:
                findWorker();
                break;
            case 4:
                saveToFile();
                break;
            case 5:
                loadFromFile();
                break;
            case 6:
                printf("–°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º...\\n");
                saveToFile();
                printf("–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!\\n");
                return 0;
            default:
                printf("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.\\n");
        }
        
        printf("\\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...");
        while (getchar() != '\\n');
        getchar();
    }
    
    return 0;
}`}
            </pre>
          </div>
        </div>
      </div>

      {/* –ó–∞–∫–ª—é—á–µ–Ω–∏–µ */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <div className="flex items-start gap-3">
          <div className="bg-green-500/20 p-2 rounded-lg flex-shrink-0">
            <Code className="w-5 h-5 text-green-400" />
          </div>
          <div>
            <h3 className="font-bold text-white mb-2">–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! üéâ</h3>
            <p className="text-gray-300">
              –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –ø–æ–ª–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —É—á–µ—Ç–∞ —Ä–∞–±–æ—á–∏—Ö –∑–∞–≤–æ–¥–∞! –≠—Ç–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤—Å–µ –∏–∑—É—á–µ–Ω–Ω—ã–µ 
              –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏: —Å—Ç—Ä—É–∫—Ç—É—Ä—ã, —Ñ—É–Ω–∫—Ü–∏–∏, —Ñ–∞–π–ª—ã, –º–∞—Å—Å–∏–≤—ã –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å. 
              –í —Å–ª–µ–¥—É—é—â–µ–º —É—Ä–æ–∫–µ –º—ã –ø—Ä–æ–≤–µ–¥–µ–º –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –ø—Ä–æ–≥—Ä–∞–º–º—ã.
            </p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Part1;