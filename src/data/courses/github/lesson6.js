export default {
  id: 7,
  title: "Отмена изменений и сброс",
  contentBlocks: [
    {
      type: 'text',
      text: `
        <p>
          При работе с Git бывают моменты, когда нужно отменить изменения — будь то случайное редактирование файла, неправильный коммит или ошибка в индексе.
        </p>
        <p>
          В этом уроке вы узнаете, как безопасно откатывать изменения на разных этапах:
        </p>
      `
    },
    {
      type: 'text',
      text: `
        <ul class="list-disc pl-5 space-y-1 mb-4">
          <li><code>git restore</code> — отменяет изменения в рабочей директории.</li>
          <li><code>git reset HEAD</code> — убирает файл из индекса (staging area).</li>
          <li><code>git reset</code> и <code>git revert</code> — откатывают коммиты.</li>
        </ul>
      `
    },
    {
      type: 'text',
      text: `
        <h3 class="font-bold mt-4 mb-2">Отмена изменений в рабочей директории: git restore</h3>
        <p>
          Если вы случайно изменили файл, но ещё не добавили его в индекс (<code>git add</code>), вы можете восстановить его до последнего закоммиченного состояния:
        </p>
      `
    },
    {
      type: 'code',
      code: `git restore имя_файла`
    },
    {
      type: 'text',
      text: `
        <p>
          Например:
        </p>
      `
    },
    {
      type: 'code',
      code: `git restore README.md`
    },
    {
      type: 'text',
      text: `
        <p>
          Эта команда заменит содержимое файла <code>README.md</code> на то, которое было зафиксировано в последнем коммите. 
          Все несохранённые изменения в этом файле будут потеряны!
        </p>
      `
    },
    {
      type: 'text',
      text: `
        <h3 class="font-bold mt-4 mb-2">Отмена добавления файла в индекс: git reset HEAD</h3>
        <p>
          Если вы уже выполнили <code>git add</code>, но хотите убрать файл из индекса (например, чтобы не попал в следующий коммит), используйте:
        </p>
      `
    },
    {
      type: 'code',
      code: `git reset HEAD имя_файла`
    },
    {
      type: 'text',
      text: `
        <p>
          Пример:
        </p>
      `
    },
    {
      type: 'code',
      code: `git reset HEAD index.html`
    },
    {
      type: 'text',
      text: `
        <p>
          После этой команды файл остаётся в рабочей директории, но больше не будет включён в следующий коммит.
        </p>
      `
    },
    {
      type: 'text',
      text: `
        <h3 class="font-bold mt-4 mb-2">Откат одного или нескольких коммитов: git reset</h3>
        <p>
          Иногда нужно полностью удалить один или несколько последних коммитов. Для этого используется команда:
        </p>
      `
    },
    {
      type: 'code',
      code: `git reset --опция хэш_коммита`
    },
    {
      type: 'text',
      text: `
        <p>
          Основные режимы <code>git reset</code>:
        </p>
      `
    },
    {
      type: 'text',
      text: `
        <ul class="list-disc pl-5 space-y-1 mb-4">
          <li><strong>--soft</strong> — откатывает указатель HEAD, но сохраняет изменения в индексе.</li>
          <li><strong>--mixed (по умолчанию)</strong> — откатывает HEAD и индекс, оставляя изменения в рабочей директории.</li>
          <li><strong>--hard</strong> — полностью удаляет коммиты и все связанные с ними изменения.</li>
        </ul>
      `
    },
    {
      type: 'text',
      text: `
        <p>
          Пример:
        </p>
      `
    },
    {
      type: 'code',
      code: `git reset --hard HEAD~1`
    },
    {
      type: 'text',
      text: `
        <p>
          Эта команда удаляет последний коммит и все изменения в файлах.
        </p>
        <p class="text-red-600 font-bold">
          ⚠️ Внимание: <code>git reset --hard</code> необратим! Используйте с осторожностью.
        </p>
      `
    },
    {
      type: 'text',
      text: `
        <h3 class="font-bold mt-4 mb-2">Безопасная отмена коммита: git revert</h3>
        <p>
          Если вы хотите отменить изменения, но при этом сохранить историю (например, в совместной разработке), лучше использовать:
        </p>
      `
    },
    {
      type: 'code',
      code: `git revert хэш_коммита`
    },
    {
      type: 'text',
      text: `
        <p>
          Эта команда создаёт новый коммит, который "отменяет" изменения указанного коммита. Это безопаснее, чем <code>git reset</code>, особенно если изменения уже были отправлены в удалённый репозиторий.
        </p>
      `
    },
    {
      type: 'text',
      text: `
        <p>
          Пример:
        </p>
      `
    },
    {
      type: 'code',
      code: `git revert abcdef1234`
    },
    {
      type: 'text',
      text: `
        <p>
          После этого Git создаст новый коммит, в котором изменения из коммита <code>abcdef1234</code> будут отменены.
        </p>
      `
    },
    {
      type: 'text',
      text: `
        <h3 class="font-bold mt-4 mb-2">Итог</h3>
        <p>
          Теперь вы знаете, как отменять изменения на разных этапах работы с Git:
        </p>
      `
    },
    {
      type: 'text',
      text: `
        <ul class="list-disc pl-5 space-y-1 mb-4">
          <li><code>git restore</code> — для отмены изменений в рабочей директории.</li>
          <li><code>git reset HEAD</code> — для убирания файлов из индекса.</li>
          <li><code>git reset</code> — для отката коммитов (в разных режимах).</li>
          <li><code>git revert</code> — для безопасного отката изменений с сохранением истории.</li>
        </ul>
      `
    },
    {
      type: 'text',
      text: `
        <p>
          Эти инструменты помогут вам исправлять ошибки и поддерживать чистую историю проекта.
        </p>
        <p>
          В следующем уроке мы рассмотрим работу с ветками: создание, переключение и объединение.
        </p>
      `
    }
  ],
  task: "Сделайте изменения в файле, добавьте их в индекс, а затем отмените добавление. Затем отмените сам коммит безопасным способом.",
  exampleAnswer: "Выполнены команды:\ngit add .\ngit reset HEAD # Отмена добавления\n# Делаем коммит перед откатом\ngit commit -m \"Тестовый коммит\"\ngit revert HEAD # Безопасно отменяем коммит"
};