export default {
  id: 28,
  title: "Цитаты и код",
  contentBlocks: [
    {
      type: 'text',
      text: `
        <p>
          При написании технической документации, заметок или обсуждении кода часто нужно приводить цитаты или вставлять фрагменты кода. В Markdown для этого есть специальные инструменты.
        </p>
        <p>
          В этом уроке вы узнаете:
        </p>
      `
    },
    {
      type: 'text',
      text: `
        <ul class="list-disc pl-5 space-y-1 mb-4">
          <li>Как оформлять цитаты с помощью символа <code>></code>.</li>
          <li>Как вставлять инлайновый и многострочный код.</li>
          <li>Как использовать подсветку синтаксиса в редакторах, поддерживающих это.</li>
        </ul>
      `
    },
    {
      type: 'text',
      text: `
        <h3 class="font-bold mt-4 mb-2">Цитаты</h3>
        <p>
          Чтобы добавить цитату, используйте символ <code>></code> перед текстом. Это особенно удобно при цитировании чужих слов, логов, сообщений или при создании разделов с важными замечаниями.
        </p>
      `
    },
    {
      type: 'code',
      code: "> Это простая цитата.\n> Она может состоять из нескольких строк."
    },
    {
      type: 'text',
      text: `
        <p>
          Можно также делать вложенные цитаты — просто добавьте больше символов <code>></code>.
        </p>
      `
    },
    {
      type: 'code',
      code: "> Основная цитата\n>> Вложенная цитата"
    },
    {
      type: 'text',
      text: `
        <h3 class="font-bold mt-4 mb-2">Инлайновый код</h3>
        <p>
          Если вам нужно выделить небольшой фрагмент кода прямо внутри предложения, используйте одинарные обратные кавычки <code>\`</code>.
        </p>
      `
    },
    {
      type: 'code',
      code: "Функция \`console.log()\` выводит текст в консоль."
    },
    {
      type: 'text',
      text: `
        <p>
          Такой способ идеально подходит для описания переменных, функций, команд и других коротких фрагментов.
        </p>
      `
    },
    {
      type: 'text',
      text: `
        <h3 class="font-bold mt-4 mb-2">Многострочные блоки кода</h3>
        <p>
          Для более длинных фрагментов кода используйте тройные обратные кавычки <code>\`\`\`</code>. Это создаёт отдельный блок кода.
        </p>
      `
    },
    {
      type: 'code',
      code: "```\nfunction hello() {\n  console.log('Привет, мир!');\n}\nhello();\n```"
    },
    {
      type: 'text',
      text: `
        <h4 class="font-semibold mt-3 mb-1">Подсветка синтаксиса:</h4>
        <p>
          Многие редакторы (например, VS Code, GitHub, Obsidian) поддерживают подсветку синтаксиса. Для этого после трёх кавычек укажите язык программирования.
        </p>
      `
    },
    {
      type: 'code',
      code: "```javascript\nfunction hello() {\n  console.log('Привет, мир!');\n}\nhello();\n```"
    },
    {
      type: 'text',
      text: `
        <p>
          Поддерживается множество языков: <code>python</code>, <code>html</code>, <code>css</code>, <code>bash</code> и другие.
        </p>
      `
    },
    {
      type: 'text',
      text: `
        <h3 class="font-bold mt-4 mb-2">Практические советы</h3>
        <p>
          Вот несколько рекомендаций:
        </p>
      `
    },
    {
      type: 'text',
      text: `
        <ul class="list-disc pl-5 space-y-1 mb-4">
          <li>Используйте цитаты для выделения важной информации или комментариев.</li>
          <li>Для краткого указания на команды и переменные применяйте инлайновый код.</li>
          <li>Вставляйте большие блоки кода с указанием языка для лучшей читаемости.</li>
          <li>Тестируйте внешний вид вашего документа в разных редакторах, чтобы убедиться в корректном отображении.</li>
        </ul>
      `
    },
    {
      type: 'text',
      text: `
        <h3 class="font-bold mt-4 mb-2">Итог</h3>
        <p>
          Теперь вы знаете:
        </p>
      `
    },
    {
      type: 'text',
      text: `
        <ul class="list-disc pl-5 space-y-1 mb-4">
          <li>Как оформлять цитаты с помощью символа <code>></code>.</li>
          <li>Как использовать инлайновый и многострочный код.</li>
          <li>Как добавлять подсветку синтаксиса для различных языков программирования.</li>
        </ul>
      `
    },
    {
      type: 'text',
      text: `
        <p>
          В следующем уроке мы рассмотрим таблицы и научимся создавать структурированные данные в Markdown.
        </p>
      `
    }
  ],
  task: "Создайте документ с примером кода на Python и цитатой известного программиста. Также добавьте инлайновые команды и блок кода с подсветкой.",
  exampleAnswer: "# Пример работы с Python\n\n> \"Код должен быть понятен человеку, а уже потом машине.\" — Martin Fowler\n\n## Инлайновый код\n\nЗапуск программы выполняется через команду \`python main.py\`. Функция \`print()\` выводит текст на экран.\n\n## Блок кода\n\n```python\ndef hello(name):\n    print(f'Привет, {name}!')\n\nhello('Мир')\n```\n\nЭто базовый пример функции, которая приветствует пользователя."
};