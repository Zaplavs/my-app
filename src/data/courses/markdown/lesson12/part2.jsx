// src/data/courses/markdown/lesson12/part2.jsx
import React, { useState } from 'react';
import { CheckCircle, XCircle, RotateCcw, Award, Hash, Link, Anchor } from 'lucide-react';

const Part2 = () => {
  // –î–∞–Ω–Ω—ã–µ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã –ø–æ —Ç–µ–º–µ —É—Ä–æ–∫–∞
  const quizData = [
    {
      id: 1,
      question: "–ö–∞–∫–æ–π —Å–∏–º–≤–æ–ª –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ Markdown –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —è–∫–æ—Ä–Ω–æ–π —Å—Å—ã–ª–∫–∏ –Ω–∞ –∑–∞–≥–æ–ª–æ–≤–æ–∫?",
      options: [
        "*",
        "#",
        "@",
        "&"
      ],
      correctAnswer: 1 // #
    },
    {
      id: 2,
      question: "–ö–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —è–∫–æ—Ä—å –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ `## –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Markdown`?",
      options: [
        "#–∫–∞–∫-–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å-markdown",
        "#–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Markdown",
        "#–∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å markdown",
        "#–ö–∞–∫-–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å-Markdown"
      ],
      correctAnswer: 0 // #–∫–∞–∫-–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å-markdown
    },
    {
      id: 3,
      question: "–ö–∞–∫–æ–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ —è–∫–æ—Ä—å –≤–Ω—É—Ç—Ä–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞?",
      options: [
        "[–¢–µ–∫—Å—Ç](#—è–∫–æ—Ä—å)",
        "[–¢–µ–∫—Å—Ç](—è–∫–æ—Ä—å)",
        "[#—è–∫–æ—Ä—å](–¢–µ–∫—Å—Ç)",
        "(–¢–µ–∫—Å—Ç)[#—è–∫–æ—Ä—å]"
      ],
      correctAnswer: 0 // [–¢–µ–∫—Å—Ç](#—è–∫–æ—Ä—å)
    },
    {
      id: 4,
      question: "–ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç —Å –ø—Ä–æ–±–µ–ª–∞–º–∏ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ –ø—Ä–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º —Å–æ–∑–¥–∞–Ω–∏–∏ —è–∫–æ—Ä—è?",
      options: [
        "–ü—Ä–æ–±–µ–ª—ã –æ—Å—Ç–∞–Ω—É—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π",
        "–ü—Ä–æ–±–µ–ª—ã –±—É–¥—É—Ç –∑–∞–º–µ–Ω–µ–Ω—ã –Ω–∞ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è",
        "–ü—Ä–æ–±–µ–ª—ã –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã",
        "–ü—Ä–æ–±–µ–ª—ã –±—É–¥—É—Ç –∑–∞–º–µ–Ω–µ–Ω—ã –Ω–∞ –¥–µ—Ñ–∏—Å—ã"
      ],
      correctAnswer: 3 // –ü—Ä–æ–±–µ–ª—ã –±—É–¥—É—Ç –∑–∞–º–µ–Ω–µ–Ω—ã –Ω–∞ –¥–µ—Ñ–∏—Å—ã
    },
    {
      id: 5,
      question: "–ö–∞–∫–æ–π —è–∫–æ—Ä—å –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ `### –ß—Ç–æ –Ω–æ–≤–æ–≥–æ –≤ –≤–µ—Ä—Å–∏–∏ 2.0?`?",
      options: [
        "#—á—Ç–æ-–Ω–æ–≤–æ–≥–æ-–≤-–≤–µ—Ä—Å–∏–∏-20",
        "#—á—Ç–æ-–Ω–æ–≤–æ–≥–æ-–≤-–≤–µ—Ä—Å–∏–∏-2.0",
        "#–ß—Ç–æ-–Ω–æ–≤–æ–≥–æ-–≤-–≤–µ—Ä—Å–∏–∏-2.0",
        "#—á—Ç–æ-–Ω–æ–≤–æ–≥–æ-–≤-–≤–µ—Ä—Å–∏–∏-2-0"
      ],
      correctAnswer: 0 // #—á—Ç–æ-–Ω–æ–≤–æ–≥–æ-–≤-–≤–µ—Ä—Å–∏–∏-20
    },
    {
      id: 6,
      question: "–î–ª—è –∫–∞–∫–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞ Markdown –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è —è–∫–æ—Ä—è?",
      options: [
        "–î–ª—è –≤—Å–µ—Ö –∞–±–∑–∞—Ü–µ–≤",
        "–î–ª—è –≤—Å–µ—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤",
        "–î–ª—è –≤—Å–µ—Ö —Å–ø–∏—Å–∫–æ–≤",
        "–î–ª—è –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"
      ],
      correctAnswer: 1 // –î–ª—è –≤—Å–µ—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
    },
    {
      id: 7,
      question: "–ö–∞–∫–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ—Ç —É —Å–ª–µ–¥—É—é—â–µ–π —Ä–∞–∑–º–µ—Ç–∫–∏: `[–ü–µ—Ä–µ–π—Ç–∏ –∫ –Ω–∞—á–∞–ª—É](#–≤–≤–µ–¥–µ–Ω–∏–µ)`?",
      options: [
        "–°—Å—ã–ª–∫–∞ —Å —Ç–µ–∫—Å—Ç–æ–º '–ü–µ—Ä–µ–π—Ç–∏ –∫ –Ω–∞—á–∞–ª—É' –Ω–∞ —è–∫–æ—Ä—å #–≤–≤–µ–¥–µ–Ω–∏–µ",
        "–¢–µ–∫—Å—Ç '[–ü–µ—Ä–µ–π—Ç–∏ –∫ –Ω–∞—á–∞–ª—É](#–≤–≤–µ–¥–µ–Ω–∏–µ)' –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
        "–°—Å—ã–ª–∫–∞ —Å —Ç–µ–∫—Å—Ç–æ–º '#–≤–≤–µ–¥–µ–Ω–∏–µ' –Ω–∞ —è–∫–æ—Ä—å –ü–µ—Ä–µ–π—Ç–∏ –∫ –Ω–∞—á–∞–ª—É",
        "–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
      ],
      correctAnswer: 0 // –°—Å—ã–ª–∫–∞ —Å —Ç–µ–∫—Å—Ç–æ–º '–ü–µ—Ä–µ–π—Ç–∏ –∫ –Ω–∞—á–∞–ª—É' –Ω–∞ —è–∫–æ—Ä—å #–≤–≤–µ–¥–µ–Ω–∏–µ
    }
  ];

  // –°–æ—Å—Ç–æ—è–Ω–∏—è –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
  const [userAnswers, setUserAnswers] = useState(Array(quizData.length).fill(null));
  const [submitted, setSubmitted] = useState(false);
  const [score, setScore] = useState(0);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –æ—Ç–≤–µ—Ç–∞
  const handleAnswerSelect = (questionIndex, optionIndex) => {
    if (submitted) return; // –ë–ª–æ–∫–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
    const newAnswers = [...userAnswers];
    newAnswers[questionIndex] = optionIndex;
    setUserAnswers(newAnswers);
  };

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤
  const handleSubmit = () => {
    let newScore = 0;
    userAnswers.forEach((answer, index) => {
      if (answer === quizData[index].correctAnswer) {
        newScore++;
      }
    });
    setScore(newScore);
    setSubmitted(true);
  };

  // –°–±—Ä–æ—Å –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
  const handleReset = () => {
    setUserAnswers(Array(quizData.length).fill(null));
    setSubmitted(false);
    setScore(0);
  };

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, –≤—Å–µ –ª–∏ –≤–æ–ø—Ä–æ—Å—ã –æ—Ç–≤–µ—á–µ–Ω—ã
  const allAnswered = userAnswers.every(answer => answer !== null);

  return (
    <div className="space-y-6">
      {/* –®–∞–ø–∫–∞ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã */}
      <div className="bg-gradient-to-r from-blue-900/30 to-purple-900/30 backdrop-blur-sm border border-blue-700/30 rounded-2xl p-6 shadow-lg">
        <div className="flex items-start gap-4">
          <div className="bg-blue-500/20 p-3 rounded-lg">
            <Anchor className="w-6 h-6 text-blue-400" />
          </div>
          <div>
            <h1 className="text-2xl md:text-3xl font-bold text-white mb-2">üß† –í–∏–∫—Ç–æ—Ä–∏–Ω–∞: –Ø–∫–æ—Ä–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –≤ Markdown</h1>
            <p className="text-gray-300">
              –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è –ø–æ —Ç–µ–º–µ <span className="font-medium text-yellow-400">—è–∫–æ—Ä–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ –≤–Ω—É—Ç—Ä–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –≤ Markdown</span>.
            </p>
            <p className="text-gray-400 text-sm mt-2">–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞.</p>
          </div>
        </div>
      </div>

      {/* –ö–∞—Ä—Ç–æ—á–∫–∞ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        {/* –°–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤ */}
        {quizData.map((q, questionIndex) => {
          const isSelected = userAnswers[questionIndex] !== null;
          const isCorrect = userAnswers[questionIndex] === q.correctAnswer;
          return (
            <div 
              key={q.id} 
              className={`mb-8 last:mb-0 p-4 rounded-lg ${
                submitted && isSelected && isCorrect 
                  ? 'bg-green-900/20 border border-green-700/30' 
                  : submitted && isSelected && !isCorrect 
                    ? 'bg-red-900/20 border border-red-700/30' 
                    : 'bg-gray-900/50'
              }`}
            >
              {/* –¢–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞ */}
              <h3 className="font-medium text-white mb-3 flex items-start gap-2">
                <span className="flex-shrink-0">{questionIndex + 1}.</span>
                <span>{q.question}</span>
              </h3>
              
              {/* –í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤ */}
              <div className="space-y-2">
                {q.options.map((option, optionIndex) => {
                  let optionStyle = "block w-full text-left p-3 rounded-lg transition-colors duration-200 ";
                  if (submitted) {
                    if (optionIndex === q.correctAnswer) {
                      optionStyle += "bg-green-700 text-white"; // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
                    } else if (optionIndex === userAnswers[questionIndex] && optionIndex !== q.correctAnswer) {
                      optionStyle += "bg-red-700 text-white"; // –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
                    } else {
                      optionStyle += "bg-gray-800 text-gray-400 cursor-not-allowed"; // –î—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
                    }
                  } else {
                    // –°—Ç–∏–ª–∏ –¥–æ –æ—Ç–ø—Ä–∞–≤–∫–∏
                    if (userAnswers[questionIndex] === optionIndex) {
                      optionStyle += "bg-blue-600 text-white"; // –í—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
                    } else {
                      optionStyle += "bg-gray-800 hover:bg-gray-700 text-gray-300"; // –ù–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–π
                    }
                  }
                  return (
                    <button
                      key={optionIndex}
                      onClick={() => handleAnswerSelect(questionIndex, optionIndex)}
                      className={optionStyle}
                      disabled={submitted} // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
                    >
                      <div className="flex items-center">
                        <span className="mr-2 font-mono flex-shrink-0">{String.fromCharCode(65 + optionIndex)}.</span>
                        <span>{option}</span>
                        {submitted && optionIndex === q.correctAnswer && (
                          <CheckCircle className="ml-auto w-5 h-5 text-green-400 flex-shrink-0" />
                        )}
                        {submitted && optionIndex === userAnswers[questionIndex] && optionIndex !== q.correctAnswer && (
                          <XCircle className="ml-auto w-5 h-5 text-red-400 flex-shrink-0" />
                        )}
                        {!submitted && userAnswers[questionIndex] === optionIndex && (
                          <span className="ml-auto w-5 h-5 rounded-full bg-blue-400 flex-shrink-0"></span>
                        )}
                      </div>
                    </button>
                  );
                })}
              </div>
              
              {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –æ—Ç–≤–µ—Ç–∞ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ */}
              {submitted && isSelected && (
                <div className={`mt-3 text-sm p-2 rounded flex items-start gap-2 ${isCorrect ? 'bg-green-900/30 text-green-300' : 'bg-red-900/30 text-red-300'}`}>
                  {isCorrect ? (
                    <>
                      <CheckCircle className="w-5 h-5 flex-shrink-0 mt-0.5" />
                      <span>–í–µ—Ä–Ω–æ!</span>
                    </>
                  ) : (
                    <>
                      <XCircle className="w-5 h-5 flex-shrink-0 mt-0.5" />
                      <span>–ù–µ–≤–µ—Ä–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {String.fromCharCode(65 + q.correctAnswer)}. {q.options[q.correctAnswer]}</span>
                    </>
                  )}
                </div>
              )}
            </div>
          );
        })}
        
        {/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
        <div className="flex flex-wrap items-center justify-between gap-4 pt-4 mt-6 border-t border-gray-700">
          {!submitted ? (
            <button
              onClick={handleSubmit}
              disabled={!allAnswered}
              className={`px-6 py-3 rounded-lg font-medium flex items-center gap-2 transition-all duration-300 ${
                allAnswered
                  ? 'bg-gradient-to-r from-green-600 to-green-700 hover:from-green-700 hover:to-green-800 text-white shadow-lg hover:shadow-xl transform hover:scale-[1.02] cursor-pointer'
                  : 'bg-gray-700 text-gray-500 cursor-not-allowed'
              }`}
            >
              <CheckCircle className="w-5 h-5" />
              –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–≤–µ—Ç—ã
            </button>
          ) : (
            <div className="flex flex-wrap items-center gap-4">
              {/* –†–µ–∑—É–ª—å—Ç–∞—Ç */}
              <div className="flex items-center gap-2 bg-gray-900 px-4 py-3 rounded-lg">
                <Award className="w-5 h-5 text-yellow-400 flex-shrink-0" />
                <span className="font-bold text-white">–†–µ–∑—É–ª—å—Ç–∞—Ç: </span>
                <span className="font-bold text-xl text-yellow-400">{score}</span>
                <span className="text-gray-400">/ {quizData.length}</span>
              </div>
              
              {/* –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ */}
              <button
                onClick={handleReset}
                className="px-6 py-3 bg-gray-700 hover:bg-gray-600 text-white rounded-lg font-medium flex items-center gap-2 transition-colors duration-200 whitespace-nowrap"
              >
                <RotateCcw className="w-5 h-5" />
                –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
              </button>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default Part2;
