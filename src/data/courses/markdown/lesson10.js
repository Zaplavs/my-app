export default {
  id: 31,
  title: "Гиперссылки на внутренние разделы",
  contentBlocks: [
    {
      type: 'text',
      text: `
        <p>
          Иногда бывает удобно переходить к разным частям одного и того же документа — например, при создании оглавления или навигации по длинной статье.
        </p>
        <p>
          В Markdown это возможно благодаря <strong>якорным ссылкам</strong>, которые указывают на заголовки внутри документа.
        </p>
        <p>
          В этом уроке вы узнаете:
        </p>
      `
    },
    {
      type: 'text',
      text: `
        <ul class="list-disc pl-5 space-y-1 mb-4">
          <li>Что такое якорные ссылки и зачем они нужны.</li>
          <li>Как создавать ссылки на другие разделы документа.</li>
          <li>Как формируются автоматические идентификаторы заголовков.</li>
        </ul>
      `
    },
    {
      type: 'text',
      text: `
        <h3 class="font-bold mt-4 mb-2">Что такое якорная ссылка?</h3>
        <p>
          Якорная ссылка — это гиперссылка, которая указывает не на внешний ресурс, а на определённую часть текущего документа. Обычно она используется для навигации по длинным текстам.
        </p>
      `
    },
    {
      type: 'text',
      text: `
        <h3 class="font-bold mt-4 mb-2">Создание внутренней ссылки</h3>
        <p>
          Чтобы сделать ссылку на какой-либо заголовок внутри документа, используйте символ решётки <code>#</code> и имя раздела в нижнем регистре с дефисами вместо пробелов.
        </p>
      `
    },
    {
      type: 'code',
      code: "[Перейти к разделу](#введение)"
    },
    {
      type: 'text',
      text: `
        <p>
          Например, если у вас есть заголовок:
        </p>
      `
    },
    {
      type: 'code',
      code: "# Введение"
    },
    {
      type: 'text',
      text: `
        <p>
          То ссылка на него будет выглядеть так:
        </p>
      `
    },
    {
      type: 'code',
      code: "[Начать с введения](#введение)"
    },
    {
      type: 'text',
      text: `
        <h3 class="font-bold mt-4 mb-2">Как формируется ID заголовка</h3>
        <p>
          Браузеры и большинство редакторов Markdown автоматически превращают заголовки в якоря. Вот как это происходит:
        </p>
      `
    },
    {
      type: 'text',
      text: `
        <ul class="list-disc pl-5 space-y-1 mb-4">
          <li>Текст заголовка переводится в нижний регистр.</li>
          <li>Пробелы заменяются на дефисы <code>-</code>.</li>
          <li>Удаляются все специальные символы, кроме букв и цифр.</li>
        </ul>
      `
    },
    {
      type: 'text',
      text: `
        <table class="w-full border-collapse border border-gray-300 mb-4">
          <thead>
            <tr>
              <th class="border border-gray-300 px-4 py-2">Заголовок</th>
              <th class="border border-gray-300 px-4 py-2">Якорь</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td class="border border-gray-300 px-4 py-2"># Что такое Markdown?</td>
              <td class="border border-gray-300 px-4 py-2"><code>#что-такое-markdown</code></td>
            </tr>
            <tr>
              <td class="border border-gray-300 px-4 py-2"># Установка VS Code</td>
              <td class="border border-gray-300 px-4 py-2"><code>#установка-vs-code</code></td>
            </tr>
            <tr>
              <td class="border border-gray-300 px-4 py-2"># Пример с 2 числами!</td>
              <td class="border border-gray-300 px-4 py-2"><code>#пример-с-2-числами</code></td>
            </tr>
          </tbody>
        </table>
      `
    },
    {
      type: 'text',
      text: `
        <h3 class="font-bold mt-4 mb-2">Пример использования</h3>
        <p>
          Допустим, у нас есть такой документ:
        </p>
      `
    },
    {
      type: 'code',
      code: "# Руководство\n\n[Введение](#введение)\n[Установка](#установка)\n[Использование](#использование)\n\n## Введение\n\nОписание продукта...\n\n## Установка\n\nИнструкции по установке...\n\n## Использование\n\nКак пользоваться..."
    },
    {
      type: 'text',
      text: `
        <p>
          Это создаёт удобное оглавление в начале документа, по которому можно кликнуть и сразу перейти к нужному разделу.
        </p>
      `
    },
    {
      type: 'text',
      text: `
        <h3 class="font-bold mt-4 mb-2">Практические советы</h3>
        <p>
          Вот несколько рекомендаций:
        </p>
      `
    },
    {
      type: 'text',
      text: `
        <ul class="list-disc pl-5 space-y-1 mb-4">
          <li>Добавляйте оглавление в начале длинных документов для удобства навигации.</li>
          <li>Используйте понятные и уникальные названия заголовков, чтобы избежать путаницы в якорях.</li>
          <li>Проверяйте работу ссылок после преобразования Markdown в HTML.</li>
        </ul>
      `
    },
    {
      type: 'text',
      text: `
        <h3 class="font-bold mt-4 mb-2">Итог</h3>
        <p>
          Теперь вы знаете:
        </p>
      `
    },
    {
      type: 'text',
      text: `
        <ul class="list-disc pl-5 space-y-1 mb-4">
          <li>Что такое якорные ссылки и как они работают в Markdown.</li>
          <li>Как создавать ссылки на внутренние разделы документа.</li>
          <li>Как формируются автоматические идентификаторы заголовков.</li>
        </ul>
      `
    },
    {
      type: 'text',
      text: `
        <p>
          В следующем уроке мы рассмотрим продвинутые элементы Markdown: использование HTML-тегов, комментариев и специальных символов.
        </p>
      `
    }
  ],
  task: "Создайте документ с оглавлением в начале и несколькими разделами. Сделайте ссылки на каждый раздел, используя якорные ссылки.",
  exampleAnswer: "# Моё руководство по Markdown\n\n[Введение](#введение)\n[Заголовки](#заголовки)\n[Списки](#списки)\n[Таблицы](#таблицы)\n\n## Введение\n\nMarkdown — удобный язык разметки.\n\n## Заголовки\n\nЗаголовки создаются с помощью символа #.\n\n## Списки\n\nПоддерживаются маркированные и нумерованные списки.\n\n## Таблицы\n\nМожно создавать таблицы с выравниванием."
};