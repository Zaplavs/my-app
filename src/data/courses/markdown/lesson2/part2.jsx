// src/data/courses/markdown/lesson2/part2.jsx
import React, { useState } from 'react';
import { CheckCircle, XCircle, RotateCcw, Award, FileText, Code, File as FileIcon } from 'lucide-react'; // –ó–∞–º–µ–Ω–∏–ª–∏ FileWord –Ω–∞ FileIcon

const Part2 = () => {
  // –î–∞–Ω–Ω—ã–µ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã –ø–æ —Ç–µ–º–µ —É—Ä–æ–∫–∞
  const quizData = [
    {
      id: 1,
      question: "–ö–∞–∫–æ–µ –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π –ª—É—á—à–µ –≤—Å–µ–≥–æ –æ–ø–∏—Å—ã–≤–∞–µ—Ç –∫–ª—é—á–µ–≤–æ–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ Markdown?",
      options: [
        "–û–Ω –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–ª–æ–∂–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –Ω–∞ –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö",
        "–û–Ω –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –ø—Ä–æ—Å—Ç–æ—Ç—É, —á–∏—Ç–∞–µ–º–æ—Å—Ç—å –∏ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—é –Ω–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–∏ —Ç–µ–∫—Å—Ç–∞",
        "–û–Ω —è–≤–ª—è–µ—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–º –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—á–∞—Ç–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤",
        "–û–Ω —Ç—Ä–µ–±—É–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è"
      ],
      correctAnswer: 1 // –û–Ω –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –ø—Ä–æ—Å—Ç–æ—Ç—É, —á–∏—Ç–∞–µ–º–æ—Å—Ç—å –∏ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—é –Ω–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–∏ —Ç–µ–∫—Å—Ç–∞
    },
    {
      id: 2,
      question: "–ü–æ—á–µ–º—É Markdown —á–∞—Å—Ç–æ –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–µ–µ Microsoft Word –¥–ª—è –Ω–∞–ø–∏—Å–∞–Ω–∏—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏?",
      options: [
        "Markdown –∏–º–µ–µ—Ç –±–æ–ª–µ–µ –∫—Ä–∞—Å–∏–≤—ã–π –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å",
        "Markdown –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—Å—Ç–∞–≤–ª—è—Ç—å –≤–∏–¥–µ–æ –Ω–∞–ø—Ä—è–º—É—é –≤ –¥–æ–∫—É–º–µ–Ω—Ç",
        "Markdown —Ä–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –∏ –ª–µ–≥–∫–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç—Å—è —Å —Å–∏—Å—Ç–µ–º–∞–º–∏ –∫–æ–Ω—Ç—Ä–æ–ª—è –≤–µ—Ä—Å–∏–π",
        "Markdown –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—É–±–ª–∏–∫—É–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç—ã –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ"
      ],
      correctAnswer: 2 // Markdown —Ä–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –∏ –ª–µ–≥–∫–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç—Å—è —Å —Å–∏—Å—Ç–µ–º–∞–º–∏ –∫–æ–Ω—Ç—Ä–æ–ª—è –≤–µ—Ä—Å–∏–π
    },
    {
      id: 3,
      question: "–ö–∞–∫ Markdown —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç—Å—è —Å HTML –ø–æ —É—Ä–æ–≤–Ω—é —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞?",
      options: [
        "Markdown —Ç—Ä–µ–±—É–µ—Ç –±–æ–ª—å—à–µ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö —Ç–µ–≥–æ–≤, —á–µ–º HTML",
        "–°–∏–Ω—Ç–∞–∫—Å–∏—Å Markdown –±–æ–ª–µ–µ –≥—Ä–æ–º–æ–∑–¥–∫–∏–π –∏ —Å–ª–æ–∂–Ω—ã–π, —á–µ–º —É HTML",
        "Markdown –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å, –≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç –∏–∑–±—ã—Ç–æ—á–Ω–æ—Å—Ç–∏ HTML",
        "Markdown –∏ HTML –∏–º–µ—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤–æ —Å–ª–æ–∂–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å"
      ],
      correctAnswer: 2 // Markdown –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å, –≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç –∏–∑–±—ã—Ç–æ—á–Ω–æ—Å—Ç–∏ HTML
    },
    {
      id: 4,
      question: "–ö–∞–∫–æ–µ –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π –æ —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏ Markdown –∏ HTML –≤–µ—Ä–Ω–æ?",
      options: [
        "HTML-–∫–æ–¥ –≤—Å–µ–≥–¥–∞ –ª–µ–≥—á–µ —á–∏—Ç–∞—Ç—å, —á–µ–º Markdown",
        "Markdown —Ç—Ä—É–¥–Ω–æ —á–∏—Ç–∞—Ç—å –±–µ–∑ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞",
        "–î–∞–∂–µ –≤ \"—Å—ã—Ä–æ–º\" –≤–∏–¥–µ Markdown –ª–µ–≥—á–µ —á–∏—Ç–∞—Ç—å –∏ –ø–æ–Ω–∏–º–∞—Ç—å, —á–µ–º HTML —Å –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º —Ç–µ–≥–æ–≤",
        "–ß–∏—Ç–∞–µ–º–æ—Å—Ç—å Markdown –∏ HTML –æ–¥–∏–Ω–∞–∫–æ–≤–∞"
      ],
      correctAnswer: 2 // –î–∞–∂–µ –≤ "—Å—ã—Ä–æ–º" –≤–∏–¥–µ Markdown –ª–µ–≥—á–µ —á–∏—Ç–∞—Ç—å –∏ –ø–æ–Ω–∏–º–∞—Ç—å, —á–µ–º HTML —Å –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º —Ç–µ–≥–æ–≤
    },
    {
      id: 5,
      question: "–ö–∞–∫–æ–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ Markdown –æ—Å–æ–±–µ–Ω–Ω–æ —Ü–µ–Ω–Ω–æ –≤ —Å—Ä–µ–¥–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è?",
      options: [
        "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–∏—è 3D-–º–æ–¥–µ–ª–µ–π",
        "–û—Ç–ª–∏—á–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å–∏—Å—Ç–µ–º–∞–º–∏ –∫–æ–Ω—Ç—Ä–æ–ª—è –≤–µ—Ä—Å–∏–π (Git) –∏ CI/CD",
        "–í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏",
        "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –æ–±–ª–∞–∫–æ"
      ],
      correctAnswer: 1 // –û—Ç–ª–∏—á–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å–∏—Å—Ç–µ–º–∞–º–∏ –∫–æ–Ω—Ç—Ä–æ–ª—è –≤–µ—Ä—Å–∏–π (Git) –∏ CI/CD
    },
    {
      id: 6,
      question: "–ü–æ—á–µ–º—É Markdown –Ω–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞?",
      options: [
        "–ü–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ",
        "–ü–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω —è–≤–ª—è–µ—Ç—Å—è –æ–±—ã—á–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º –∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç–∫—Ä—ã—Ç –∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω –≤ –ª—é–±–æ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ",
        "–ü–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –≤ Word",
        "–ü–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω —Ç—Ä–µ–±—É–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –ø–ª–∞–≥–∏–Ω–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–≤"
      ],
      correctAnswer: 1 // –ü–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω —è–≤–ª—è–µ—Ç—Å—è –æ–±—ã—á–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º –∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç–∫—Ä—ã—Ç –∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω –≤ –ª—é–±–æ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ
    },
    {
      id: 7,
      question: "–ö–∞–∫–æ–µ –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π –æ —Å–∫–æ—Ä–æ—Å—Ç–∏ –Ω–∞–ø–∏—Å–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —è–≤–ª—è–µ—Ç—Å—è –≤–µ—Ä–Ω—ã–º?",
      options: [
        "–ù–∞–ø–∏—Å–∞–Ω–∏–µ –≤ HTML –≤—Å–µ–≥–¥–∞ –±—ã—Å—Ç—Ä–µ–µ, —á–µ–º –≤ Markdown",
        "Markdown —Ç—Ä–µ–±—É–µ—Ç –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è, —á–µ–º Word",
        "Markdown –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–∏—Ç—å—Å—è –Ω–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–∏, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –Ω–∞–ø–∏—Å–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –±—ã—Å—Ç—Ä–µ–µ, —á–µ–º –≤ HTML",
        "–°–∫–æ—Ä–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è –≤ Markdown –∏ HTML –æ–¥–∏–Ω–∞–∫–æ–≤–∞"
      ],
      correctAnswer: 2 // Markdown –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–∏—Ç—å—Å—è –Ω–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–∏, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –Ω–∞–ø–∏—Å–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –±—ã—Å—Ç—Ä–µ–µ, —á–µ–º –≤ HTML
    }
  ];

  // –°–æ—Å—Ç–æ—è–Ω–∏—è –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
  const [userAnswers, setUserAnswers] = useState(Array(quizData.length).fill(null));
  const [submitted, setSubmitted] = useState(false);
  const [score, setScore] = useState(0);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –æ—Ç–≤–µ—Ç–∞
  const handleAnswerSelect = (questionIndex, optionIndex) => {
    if (submitted) return; // –ë–ª–æ–∫–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
    const newAnswers = [...userAnswers];
    newAnswers[questionIndex] = optionIndex;
    setUserAnswers(newAnswers);
  };

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤
  const handleSubmit = () => {
    let newScore = 0;
    userAnswers.forEach((answer, index) => {
      if (answer === quizData[index].correctAnswer) {
        newScore++;
      }
    });
    setScore(newScore);
    setSubmitted(true);
  };

  // –°–±—Ä–æ—Å –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
  const handleReset = () => {
    setUserAnswers(Array(quizData.length).fill(null));
    setSubmitted(false);
    setScore(0);
  };

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, –≤—Å–µ –ª–∏ –≤–æ–ø—Ä–æ—Å—ã –æ—Ç–≤–µ—á–µ–Ω—ã
  const allAnswered = userAnswers.every(answer => answer !== null);

  return (
    <div className="space-y-6">
      {/* –®–∞–ø–∫–∞ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã */}
      <div className="bg-gradient-to-r from-blue-900/30 to-purple-900/30 backdrop-blur-sm border border-blue-700/30 rounded-2xl p-6 shadow-lg">
        <div className="flex items-start gap-4">
          <div className="bg-blue-500/20 p-3 rounded-lg">
            <FileText className="w-6 h-6 text-blue-400" />
          </div>
          <div>
            <h1 className="text-2xl md:text-3xl font-bold text-white mb-2">üß† –í–∏–∫—Ç–æ—Ä–∏–Ω–∞: –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ Markdown</h1>
            <p className="text-gray-300">
              –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è –ø–æ —Ç–µ–º–µ <span className="font-medium text-yellow-400">–ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤ Markdown –ø–µ—Ä–µ–¥ Word –∏ HTML</span>.
            </p>
            <p className="text-gray-400 text-sm mt-2">–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞.</p>
          </div>
        </div>
      </div>

      {/* –ö–∞—Ä—Ç–æ—á–∫–∞ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        {/* –°–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤ */}
        {quizData.map((q, questionIndex) => {
          const isSelected = userAnswers[questionIndex] !== null;
          const isCorrect = userAnswers[questionIndex] === q.correctAnswer;
          return (
            <div 
              key={q.id} 
              className={`mb-8 last:mb-0 p-4 rounded-lg ${
                submitted && isSelected && isCorrect 
                  ? 'bg-green-900/20 border border-green-700/30' 
                  : submitted && isSelected && !isCorrect 
                    ? 'bg-red-900/20 border border-red-700/30' 
                    : 'bg-gray-900/50'
              }`}
            >
              {/* –¢–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞ */}
              <h3 className="font-medium text-white mb-3 flex items-start gap-2">
                <span className="flex-shrink-0">{questionIndex + 1}.</span>
                <span>{q.question}</span>
              </h3>
              
              {/* –í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤ */}
              <div className="space-y-2">
                {q.options.map((option, optionIndex) => {
                  let optionStyle = "block w-full text-left p-3 rounded-lg transition-colors duration-200 ";
                  if (submitted) {
                    if (optionIndex === q.correctAnswer) {
                      optionStyle += "bg-green-700 text-white"; // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
                    } else if (optionIndex === userAnswers[questionIndex] && optionIndex !== q.correctAnswer) {
                      optionStyle += "bg-red-700 text-white"; // –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
                    } else {
                      optionStyle += "bg-gray-800 text-gray-400 cursor-not-allowed"; // –î—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
                    }
                  } else {
                    // –°—Ç–∏–ª–∏ –¥–æ –æ—Ç–ø—Ä–∞–≤–∫–∏
                    if (userAnswers[questionIndex] === optionIndex) {
                      optionStyle += "bg-blue-600 text-white"; // –í—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
                    } else {
                      optionStyle += "bg-gray-800 hover:bg-gray-700 text-gray-300"; // –ù–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–π
                    }
                  }
                  return (
                    <button
                      key={optionIndex}
                      onClick={() => handleAnswerSelect(questionIndex, optionIndex)}
                      className={optionStyle}
                      disabled={submitted} // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
                    >
                      <div className="flex items-center">
                        <span className="mr-2 font-mono flex-shrink-0">{String.fromCharCode(65 + optionIndex)}.</span>
                        <span>{option}</span>
                        {submitted && optionIndex === q.correctAnswer && (
                          <CheckCircle className="ml-auto w-5 h-5 text-green-400 flex-shrink-0" />
                        )}
                        {submitted && optionIndex === userAnswers[questionIndex] && optionIndex !== q.correctAnswer && (
                          <XCircle className="ml-auto w-5 h-5 text-red-400 flex-shrink-0" />
                        )}
                        {!submitted && userAnswers[questionIndex] === optionIndex && (
                          <span className="ml-auto w-5 h-5 rounded-full bg-blue-400 flex-shrink-0"></span>
                        )}
                      </div>
                    </button>
                  );
                })}
              </div>
              
              {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –æ—Ç–≤–µ—Ç–∞ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ */}
              {submitted && isSelected && (
                <div className={`mt-3 text-sm p-2 rounded flex items-start gap-2 ${isCorrect ? 'bg-green-900/30 text-green-300' : 'bg-red-900/30 text-red-300'}`}>
                  {isCorrect ? (
                    <>
                      <CheckCircle className="w-5 h-5 flex-shrink-0 mt-0.5" />
                      <span>–í–µ—Ä–Ω–æ!</span>
                    </>
                  ) : (
                    <>
                      <XCircle className="w-5 h-5 flex-shrink-0 mt-0.5" />
                      <span>–ù–µ–≤–µ—Ä–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {String.fromCharCode(65 + q.correctAnswer)}. {q.options[q.correctAnswer]}</span>
                    </>
                  )}
                </div>
              )}
            </div>
          );
        })}
        
        {/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
        <div className="flex flex-wrap items-center justify-between gap-4 pt-4 mt-6 border-t border-gray-700">
          {!submitted ? (
            <button
              onClick={handleSubmit}
              disabled={!allAnswered}
              className={`px-6 py-3 rounded-lg font-medium flex items-center gap-2 transition-all duration-300 ${
                allAnswered
                  ? 'bg-gradient-to-r from-green-600 to-green-700 hover:from-green-700 hover:to-green-800 text-white shadow-lg hover:shadow-xl transform hover:scale-[1.02] cursor-pointer'
                  : 'bg-gray-700 text-gray-500 cursor-not-allowed'
              }`}
            >
              <CheckCircle className="w-5 h-5" />
              –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–≤–µ—Ç—ã
            </button>
          ) : (
            <div className="flex flex-wrap items-center gap-4">
              {/* –†–µ–∑—É–ª—å—Ç–∞—Ç */}
              <div className="flex items-center gap-2 bg-gray-900 px-4 py-3 rounded-lg">
                <Award className="w-5 h-5 text-yellow-400 flex-shrink-0" />
                <span className="font-bold text-white">–†–µ–∑—É–ª—å—Ç–∞—Ç: </span>
                <span className="font-bold text-xl text-yellow-400">{score}</span>
                <span className="text-gray-400">/ {quizData.length}</span>
              </div>
              
              {/* –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ */}
              <button
                onClick={handleReset}
                className="px-6 py-3 bg-gray-700 hover:bg-gray-600 text-white rounded-lg font-medium flex items-center gap-2 transition-colors duration-200 whitespace-nowrap"
              >
                <RotateCcw className="w-5 h-5" />
                –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
              </button>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default Part2;
