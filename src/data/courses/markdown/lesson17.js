export default {
  id: 38,
  title: "Работа с Jupyter Notebook и Markdown",
  contentBlocks: [
    {
      type: 'text',
      text: `
        <p>
          <strong>Jupyter Notebook</strong> — это мощная среда для интерактивного программирования, особенно популярная среди дата-сайентистов, исследователей и преподавателей.
        </p>
        <p>
          Одной из ключевых особенностей Jupyter Notebook является поддержка Markdown для описания кода, добавления комментариев, формул и структуры документа.
        </p>
        <p>
          В этом уроке вы узнаете:
        </p>
      `
    },
    {
      type: 'text',
      text: `
        <ul class="list-disc pl-5 space-y-1 mb-4">
          <li>Как использовать Markdown в ячейках Jupyter Notebook.</li>
          <li>Как оформлять заголовки, списки, таблицы и формулы в блокнотах.</li>
          <li>Как сочетать текст и код для создания понятных и профессиональных документов.</li>
        </ul>
      `
    },
    {
      type: 'text',
      text: `
        <h3 class="font-bold mt-4 mb-2">Markdown в ячейках Jupyter Notebook</h3>
        <p>
          В Jupyter Notebook каждая ячейка может быть одного из двух типов:
        </p>
      `
    },
    {
      type: 'text',
      text: `
        <ul class="list-disc pl-5 space-y-1 mb-4">
          <li><strong>Code</strong> — для выполнения кода (обычно Python).</li>
          <li><strong>Markdown</strong> — для написания текстовых пояснений, заголовков, списков и других элементов документации.</li>
        </ul>
      `
    },
    {
      type: 'text',
      text: `
        <p>
          Чтобы изменить тип ячейки на Markdown, выберите её и нажмите <kbd>M</kbd> (в режиме просмотра) или выберите «Markdown» в выпадающем меню сверху.
        </p>
      `
    },
    {
      type: 'text',
      text: `
        <h3 class="font-bold mt-4 mb-2">Оформление заголовков</h3>
        <p>
          Заголовки помогают разбивать ваш блокнот на логические части. Используйте символ <code>#</code> для создания заголовков разных уровней:
        </p>
      `
    },
    {
      type: 'code',
      code: "# Основы анализа данных\n## Загрузка данных\n### Предварительная обработка"
    },
    {
      type: 'text',
      text: `
        <p>
          После выполнения Markdown-ячейки эти строки превратятся в красиво оформленные заголовки.
        </p>
      `
    },
    {
      type: 'text',
      text: `
        <h3 class="font-bold mt-4 mb-2">Создание списков и параграфов</h3>
        <p>
          Списки и абзацы делают ваши заметки более структурированными и читаемыми:
        </p>
      `
    },
    {
      type: 'code',
      code: "- Загрузка данных\n- Очистка\n- Анализ\n- Визуализация"
    },
    {
      type: 'text',
      text: `
        <p>
          Вы также можете создавать нумерованные списки:
        </p>
      `
    },
    {
      type: 'code',
      code: "1. Импортировать библиотеки\n2. Загрузить данные\n3. Обработать данные"
    },
    {
      type: 'text',
      text: `
        <p>
          Абзацы просто пишутся как обычный текст:
        </p>
      `
    },
    {
      type: 'code',
      code: "Этот блокнот демонстрирует основы работы с данными."
    },
    {
      type: 'text',
      text: `
        <h3 class="font-bold mt-4 mb-2">Добавление ссылок, изображений и таблиц</h3>
        <p>
          Markdown в Jupyter позволяет добавлять ссылки, изображения и таблицы, чтобы сделать блокнот информативнее.
        </p>
      `
    },
    {
      type: 'text',
      text: `
        <h4 class="font-semibold mt-3 mb-1">Ссылки:</h4>
      `
    },
    {
      type: 'code',
      code: "[Документация Pandas](https://pandas.pydata.org/ )"
    },
    {
      type: 'text',
      text: `
        <h4 class="font-semibold mt-3 mb-1">Изображения:</h4>
      `
    },
    {
      type: 'code',
      code: "![График распределения данных](distribution.png)"
    },
    {
      type: 'text',
      text: `
        <h4 class="font-semibold mt-3 mb-1">Таблицы:</h4>
      `
    },
    {
      type: 'code',
      code: "| Имя     | Возраст |\n|----------|---------|\n| Алексей   | 28      |\n| Мария     | 30      |"
    },
    {
      type: 'text',
      text: `
        <h3 class="font-bold mt-4 mb-2">Формулы и математика в Jupyter</h3>
        <p>
          Jupyter Notebook поддерживает LaTeX-формулы через MathJax. Это очень удобно для научных и технических записей.
        </p>
      `
    },
    {
      type: 'text',
      text: `
        <h4 class="font-semibold mt-3 mb-1">Пример формулы:</h4>
      `
    },
    {
      type: 'code',
      code: "$$y = mx + b$$"
    },
    {
      type: 'text',
      text: `
        <p>
          Такой синтаксис будет отображен как красивая центральная формула.
        </p>
      `
    },
    {
      type: 'text',
      text: `
        <h4 class="font-semibold mt-3 mb-1">Инлайновые формулы:</h4>
      `
    },
    {
      type: 'code',
      code: "Уравнение $E = mc^2$ — одно из самых известных."
    },
    {
      type: 'text',
      text: `
        <h3 class="font-bold mt-4 mb-2">Код и примеры</h3>
        <p>
          Хотя Markdown используется для текста, он отлично сочетается с кодом. Вот как можно оформить пример:
        </p>
      `
    },
    {
      type: 'code',
      code: "```python\nimport pandas as pd\ndf = pd.read_csv('data.csv')\nprint(df.head())\n```"
    },
    {
      type: 'text',
      text: `
        <p>
          Такие блоки кода не выполняются в Markdown, но прекрасно показывают, что будет происходить в соседних кодовых ячейках.
        </p>
      `
    },
    {
      type: 'text',
      text: `
        <h3 class="font-bold mt-4 mb-2">Практическое применение Markdown в Jupyter</h3>
        <p>
          Вот несколько распространённых сценариев использования Markdown в Jupyter Notebook:
        </p>
      `
    },
    {
      type: 'text',
      text: `
        <ul class="list-disc pl-5 space-y-1 mb-4">
          <li><strong>Описание проекта:</strong> в начале блокнота опишите цель исследования.</li>
          <li><strong>Объяснение кода:</strong> перед сложным участком кода добавьте пояснение.</li>
          <li><strong>Визуализация результатов:</strong> опишите график или диаграмму до её вывода.</li>
          <li><strong>Заметки и мысли:</strong> оставляйте комментарии для себя или коллег.</li>
        </ul>
      `
    },
    {
      type: 'text',
      text: `
        <h3 class="font-bold mt-4 mb-2">Советы по оформлению блокнотов</h3>
        <p>
          Вот несколько рекомендаций:
        </p>
      `
    },
    {
      type: 'text',
      text: `
        <ul class="list-disc pl-5 space-y-1 mb-4">
          <li>Не перегружайте одну ячейку Markdown — лучше разделите длинный текст на несколько частей.</li>
          <li>Используйте заголовки для структуры: каждый новый раздел должен начинаться с <code>#</code>.</li>
          <li>Добавляйте формулы там, где они нужны — особенно в учебных и научных материалах.</li>
          <li>Используйте изображения и таблицы для наглядности.</li>
          <li>Проверяйте внешний вид Markdown-ячеек после запуска, чтобы убедиться в корректном отображении.</li>
        </ul>
      `
    },
    {
      type: 'text',
      text: `
        <h3 class="font-bold mt-4 mb-2">Итог</h3>
        <p>
          Теперь вы знаете:
        </p>
      `
    },
    {
      type: 'text',
      text: `
        <ul class="list-disc pl-5 space-y-1 mb-4">
          <li>Как использовать Markdown в ячейках Jupyter Notebook.</li>
          <li>Как оформлять заголовки, списки, таблицы и изображения.</li>
          <li>Как добавлять формулы и объяснять код с помощью Markdown.</li>
          <li>Как правильно структурировать блокнот для лучшей читаемости и совместной работы.</li>
        </ul>
      `
    },
    {
      type: 'text',
      text: `
        <p>
          Этот урок завершает серию теоретических занятий. Далее вас ждёт финальное практическое задание — вы создадите полноценный блокнот Jupyter с текстовыми пояснениями и кодом.
        </p>
      `
    }
  ],
  task: "Создайте Jupyter Notebook (.ipynb) файл и добавьте в него несколько Markdown-ячеек. Напишите описание задачи, список шагов, таблицу с примером данных и одну математическую формулу.",
  exampleAnswer: "# Исследование данных\n\n## Цель\n\nАнализ набора данных о продажах.\n\n## Шаги\n\n- Загрузить данные\n- Проверить пропуски\n- Построить график\n\n## Пример данных\n\n| Товар | Продано | Цена |\n|--------|----------|-------|\n| Яблоки | 20       | 100   |\n| Груши  | 15       | 120   |\n\n## Формула\n\n$$\\text{Выручка} = \\text{Цена} \\times \\text{Количество}$$"
};