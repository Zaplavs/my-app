import React, { useState } from 'react';
import { Calculator, Check, X, Hash, CheckCircle, Award, RotateCcw, Code, HelpCircle } from 'lucide-react';

const Part3 = () => {
  // –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è –ø–æ —É—Ä–æ–∫—É
  const practicalTasks = [
    {
      id: 1,
      title: "–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π for ‚Äî —Å—á—ë—Ç –æ—Ç 1 –¥–æ 10",
      description: "–ù–∞—É—á–∏—Ç–µ—Å—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π for —Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π, —É—Å–ª–æ–≤–∏–µ–º –∏ —à–∞–≥–æ–º.",
      steps: [
        "–°–æ–∑–¥–∞–π—Ç–µ —Ü–∏–∫–ª for, –∫–æ—Ç–æ—Ä—ã–π —Å—á–∏—Ç–∞–µ—Ç –æ—Ç 1 –¥–æ 10",
        "–í—ã–≤–µ–¥–∏—Ç–µ –∫–∞–∂–¥–æ–µ —á–∏—Å–ª–æ —Å –ø–æ–º–æ—â—å—é fmt.Println()",
        "–ò–∑–º–µ–Ω–∏—Ç–µ —à–∞–≥: —Å—á–∏—Ç–∞–π—Ç–µ –æ—Ç 1 –¥–æ 20 —Å —à–∞–≥–æ–º 2 (1, 3, 5, ...)",
        "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å—á–∏—Ç–∞—Ç—å –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ: –æ—Ç 10 –¥–æ 1"
      ],
      verification: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —á–∏—Å–ª–∞ –≤—ã–≤–æ–¥—è—Ç—Å—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏",
      expectedOutput: "1, 2, 3, ..., 10 ‚Üí –∑–∞—Ç–µ–º 1, 3, 5, ..., 19 ‚Üí –∑–∞—Ç–µ–º 10, 9, 8, ..., 1",
      difficulty: "Ïâ¨Ïö¥"
    },
    {
      id: 2,
      title: "For —Å —É—Å–ª–æ–≤–∏–µ–º ‚Äî –∫–∞–∫ while",
      description: "–û—Å–≤–æ–π—Ç–µ —Ü–∏–∫–ª for —Å –æ–¥–Ω–∏–º —É—Å–ª–æ–≤–∏–µ–º ‚Äî –∞–Ω–∞–ª–æ–≥ while –≤ –¥—Ä—É–≥–∏—Ö —è–∑—ã–∫–∞—Ö.",
      steps: [
        "–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é temperature = 35",
        "–¶–∏–∫–ª: –ø–æ–∫–∞ temperature > 20, –≤—ã–≤–æ–¥–∏—Ç–µ '–°–ª–∏—à–∫–æ–º –∂–∞—Ä–∫–æ: X¬∞C' –∏ —É–º–µ–Ω—å—à–∞–π—Ç–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –Ω–∞ 1",
        "–ö–æ–≥–¥–∞ —Ü–∏–∫–ª –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è ‚Äî –≤—ã–≤–µ–¥–∏—Ç–µ '–¢–µ–ø–µ—Ä—å –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ! üòå'",
        "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ 25, 30, 15"
      ],
      verification: "–ü—Ä–∏ temperature=25 ‚Üí –≤—ã–≤–æ–¥–∏—Ç—Å—è 5 —Å—Ç—Ä–æ–∫, –∑–∞—Ç–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∫–æ–º—Ñ–æ—Ä—Ç–µ",
      expectedOutput: "–°–ª–∏—à–∫–æ–º –∂–∞—Ä–∫–æ: 25¬∞C, ..., –°–ª–∏—à–∫–æ–º –∂–∞—Ä–∫–æ: 21¬∞C, –¢–µ–ø–µ—Ä—å –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ!",
      difficulty: "Ïâ¨Ïö¥"
    },
    {
      id: 3,
      title: "–ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª + break",
      description: "–ü—Ä–∞–∫—Ç–∏–∫–∞ —Å –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–º —Ü–∏–∫–ª–æ–º –∏ –≤—ã—Ö–æ–¥–æ–º –ø–æ break.",
      steps: [
        "–°–æ–∑–¥–∞–π—Ç–µ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª: for { }",
        "–í–Ω—É—Ç—Ä–∏ –∑–∞–ø—Ä–æ—Å–∏—Ç–µ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–æ–¥ –∫–æ–º–∞–Ω–¥—ã (string)",
        "–ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ == \"—Å—Ç–æ–ø\" ‚Äî –≤—ã–≤–µ–¥–∏—Ç–µ '–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!' –∏ break",
        "–ò–Ω–∞—á–µ ‚Äî –≤—ã–≤–µ–¥–∏—Ç–µ '–í—ã —Å–∫–∞–∑–∞–ª–∏: [–∫–æ–º–∞–Ω–¥–∞]'",
        "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ: –≤–≤–µ–¥–∏—Ç–µ '–ø—Ä–∏–≤–µ—Ç', '–∫–∞–∫ –¥–µ–ª–∞', '—Å—Ç–æ–ø'"
      ],
      verification: "–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å, –ø–æ–∫–∞ –Ω–µ –≤–≤–µ–¥—ë—Ç–µ '—Å—Ç–æ–ø'. –ü–æ—Å–ª–µ '—Å—Ç–æ–ø' ‚Äî –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è.",
      expectedOutput: "–í—ã —Å–∫–∞–∑–∞–ª–∏: –ø—Ä–∏–≤–µ—Ç ‚Üí –í—ã —Å–∫–∞–∑–∞–ª–∏: –∫–∞–∫ –¥–µ–ª–∞ ‚Üí –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!",
      difficulty: "Ï§ëÍ∞Ñ"
    },
    {
      id: 4,
      title: "Continue ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —á–∏—Å–ª–∞",
      description: "–ù–∞—É—á–∏—Ç–µ—Å—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å continue –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞ –∏—Ç–µ—Ä–∞—Ü–∏–π.",
      steps: [
        "–°–æ–∑–¥–∞–π—Ç–µ —Ü–∏–∫–ª for –æ—Ç 1 –¥–æ 10",
        "–ï—Å–ª–∏ —á–∏—Å–ª–æ –¥–µ–ª–∏—Ç—Å—è –Ω–∞ 3 (i % 3 == 0) ‚Äî –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ –µ–≥–æ —Å –ø–æ–º–æ—â—å—é continue",
        "–í –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö ‚Äî –≤—ã–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ",
        "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ: –∫–∞–∫–∏–µ —á–∏—Å–ª–∞ –≤—ã–≤–æ–¥—è—Ç—Å—è? (–¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤—Å–µ, –∫—Ä–æ–º–µ 3, 6, 9)"
      ],
      verification: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —á–∏—Å–ª–∞ 3, 6, 9 –Ω–µ –≤—ã–≤–æ–¥—è—Ç—Å—è, –æ—Å—Ç–∞–ª—å–Ω—ã–µ ‚Äî –≤—ã–≤–æ–¥—è—Ç—Å—è",
      expectedOutput: "1, 2, 4, 5, 7, 8, 10",
      difficulty: "Ï§ëÍ∞Ñ"
    },
    {
      id: 5,
      title: "–í–ª–æ–∂–µ–Ω–Ω—ã–µ —Ü–∏–∫–ª—ã ‚Äî —Ç–∞–±–ª–∏—Ü–∞ —É–º–Ω–æ–∂–µ–Ω–∏—è",
      description: "–û—Å–≤–æ–π—Ç–µ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —Ü–∏–∫–ª—ã –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ —Ç–∞–±–ª–∏—Ü—ã —É–º–Ω–æ–∂–µ–Ω–∏—è.",
      steps: [
        "–í–Ω–µ—à–Ω–∏–π —Ü–∏–∫–ª: i –æ—Ç 1 –¥–æ 5",
        "–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Ü–∏–∫–ª: j –æ—Ç 1 –¥–æ 5",
        "–í—ã–≤–µ–¥–∏—Ç–µ: fmt.Printf(\"%d √ó %d = %d\\t\", i, j, i*j)",
        "–ü–æ—Å–ª–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ —Ü–∏–∫–ª–∞ ‚Äî fmt.Println() –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É",
        "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ: –ø–æ–ª—É—á–∏–ª–∞—Å—å –ª–∏ —Ç–∞–±–ª–∏—Ü–∞ 5x5?"
      ],
      verification: "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ –≤—ã–≤–µ–¥–µ–Ω–∞ –∞–∫–∫—É—Ä–∞—Ç–Ω–æ, –ø–æ—Å—Ç—Ä–æ—á–Ω–æ",
      expectedOutput: "1√ó1=1  1√ó2=2 ... 5√ó5=25",
      difficulty: "Ï§ëÍ∞Ñ"
    },
    {
      id: 6,
      title: "Range –¥–ª—è —Å—Ç—Ä–æ–∫ ‚Äî —Ä–∞–∑–±–∏—Ä–∞–µ–º —Å–ª–æ–≤–æ –ø–æ –±—É–∫–≤–∞–º",
      description: "–ü—Ä–∞–∫—Ç–∏–∫–∞ —Å range ‚Äî –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º —Å–∏–º–≤–æ–ª—ã —Å—Ç—Ä–æ–∫–∏ –∏ –≤—ã–≤–æ–¥–∏–º –∏—Ö —Å –∏–Ω–¥–µ–∫—Å–∞–º–∏.",
      steps: [
        "–°–æ–∑–¥–∞–π—Ç–µ —Å—Ç—Ä–æ–∫—É word := \"GOLANG\"",
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ for index, char := range word",
        "–í—ã–≤–µ–¥–∏—Ç–µ: \"–ë—É–∫–≤–∞ [–∏–Ω–¥–µ–∫—Å]: [—Å–∏–º–≤–æ–ª]\"",
        "–¢–µ–ø–µ—Ä—å —Å–¥–µ–ª–∞–π—Ç–µ —Ç–æ –∂–µ —Å–∞–º–æ–µ, –Ω–æ –±–µ–∑ –∏–Ω–¥–µ–∫—Å–∞: for _, char := range word",
        "–í—ã–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —Å–∏–º–≤–æ–ª—ã: \"[—Å–∏–º–≤–æ–ª] \"",
        "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å –¥—Ä—É–≥–∏–º–∏ —Å–ª–æ–≤–∞–º–∏: \"HELLO\", \"WORLD\""
      ],
      verification: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤—ã–≤–æ–¥—è—Ç—Å—è –≤—Å–µ –±—É–∫–≤—ã —Å –∏–Ω–¥–µ–∫—Å–∞–º–∏, –∞ –ø–æ—Ç–æ–º ‚Äî —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã",
      expectedOutput: "–ë—É–∫–≤–∞ 0: G, –ë—É–∫–≤–∞ 1: O, ... ‚Üí –∑–∞—Ç–µ–º: G O L A N G",
      difficulty: "Ï§ëÍ∞Ñ"
    },
    {
      id: 7,
      title: "–ö–æ–º–±–∏–Ω–∏—Ä—É–µ–º break –∏ continue",
      description: "–°–ª–æ–∂–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ break –∏ continue –≤ –æ–¥–Ω–æ–º —Ü–∏–∫–ª–µ.",
      steps: [
        "–°–æ–∑–¥–∞–π—Ç–µ —Ü–∏–∫–ª for i := 1; i <= 20; i++",
        "–ï—Å–ª–∏ i –¥–µ–ª–∏—Ç—Å—è –Ω–∞ 5 ‚Äî –≤—ã–≤–µ–¥–∏—Ç–µ '–ü—è—Ç—ë—Ä–∫–∞!' –∏ continue (–ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ –æ—Å—Ç–∞–ª—å–Ω–æ–µ)",
        "–ï—Å–ª–∏ i == 15 ‚Äî –≤—ã–≤–µ–¥–∏—Ç–µ '–°—Ç–æ–ø –Ω–∞ 15!' –∏ break",
        "–í –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö ‚Äî –≤—ã–≤–µ–¥–∏—Ç–µ —Å–∞–º–æ —á–∏—Å–ª–æ i",
        "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ: —á—Ç–æ –≤—ã–≤–æ–¥–∏—Ç—Å—è –ø—Ä–∏ i=5, 10, 15, 16?"
      ],
      verification: "–ü—Ä–∏ i=5 ‚Üí '–ü—è—Ç—ë—Ä–∫–∞!', –ø—Ä–∏ i=15 ‚Üí '–°—Ç–æ–ø –Ω–∞ 15!' –∏ —Ü–∏–∫–ª –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è",
      expectedOutput: "1,2,3,4,–ü—è—Ç—ë—Ä–∫–∞!,6,7,8,9,–ü—è—Ç—ë—Ä–∫–∞!,11,12,13,14,–°—Ç–æ–ø –Ω–∞ 15!",
      difficulty: "Ïñ¥Î†§Ïö¥"
    },
    {
      id: 8,
      title: "–ò—Ç–æ–≥–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç: –ò–≥—Ä–∞ '–ß–∏—Å–ª–æ–≤–æ–π –ª–∞–±–∏—Ä–∏–Ω—Ç'",
      description: "–°–æ–∑–¥–∞–π—Ç–µ –∏–≥—Ä—É —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –≤—Å–µ—Ö –≤–∏–¥–æ–≤ —Ü–∏–∫–ª–æ–≤, break, continue –∏ range.",
      steps: [
        "–ò–≥—Ä–æ–∫ –≤–≤–æ–¥–∏—Ç —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100",
        "–ü—Ä–æ–≥—Ä–∞–º–º–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ secret",
        "–ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª: –ø–æ–∫–∞ –∏–≥—Ä–æ–∫ –Ω–µ —É–≥–∞–¥–∞–µ—Ç ‚Äî –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å –≤–≤–æ–¥",
        "–ï—Å–ª–∏ –≤–≤–µ–¥—ë–Ω–Ω–æ–µ —á–∏—Å–ª–æ == secret ‚Üí –ø–æ–∑–¥—Ä–∞–≤–∏—Ç—å –∏ break",
        "–ï—Å–ª–∏ —á–∏—Å–ª–æ –¥–µ–ª–∏—Ç—Å—è –Ω–∞ 10 ‚Üí –≤—ã–≤–µ—Å—Ç–∏ '–ü–æ–¥—Å–∫–∞–∑–∫–∞: —á–∏—Å–ª–æ –∫—Ä—É–≥–ª–æ–µ!' –∏ continue (–Ω–µ —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å!)",
        "–ï—Å–ª–∏ —á–∏—Å–ª–æ < secret ‚Üí 'üìà –í—ã—à–µ!'",
        "–ï—Å–ª–∏ —á–∏—Å–ª–æ > secret ‚Üí 'üìâ –ù–∏–∂–µ!'",
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ range –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–ª–æ–≤–∞ '–ü–û–ë–ï–î–ê!' –ø–æ –±—É–∫–≤–∞–º –≤ –∫–æ–Ω—Ü–µ",
        "–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤—Å–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏!"
      ],
      verification: "–ò–≥—Ä–∞ –¥–æ–ª–∂–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å: –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å –∫—Ä—É–≥–ª—ã–µ —á–∏—Å–ª–∞, –¥–∞–≤–∞—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫–∏, –∑–∞–≤–µ—Ä—à–∞—Ç—å—Å—è –ø—Ä–∏ —É–≥–∞–¥—ã–≤–∞–Ω–∏–∏",
      expectedOutput: "–í–≤–æ–¥ 20 ‚Üí '–ü–æ–¥—Å–∫–∞–∑–∫–∞...', –í–≤–æ–¥ 45 ‚Üí 'üìà –í—ã—à–µ!', –í–≤–æ–¥ secret ‚Üí '–ü\n–û\n–ë\n–ï\n–î\n–ê\n!'",
      difficulty: "Ïñ¥Î†§Ïö¥"
    }
  ];

  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π
  const [completedTasks, setCompletedTasks] = useState(new Set());
  const [showResults, setShowResults] = useState({});

  // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è
  const toggleTaskCompletion = (taskId) => {
    const newCompletedTasks = new Set(completedTasks);
    if (newCompletedTasks.has(taskId)) {
      newCompletedTasks.delete(taskId);
    } else {
      newCompletedTasks.add(taskId);
    }
    setCompletedTasks(newCompletedTasks);
  };

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è
  const saveResult = (taskId, result) => {
    setShowResults(prev => ({
      ...prev,
      [taskId]: result
    }));
  };

  return (
    <div className="space-y-6">
      <div className="bg-gradient-to-r from-green-900/30 to-teal-900/30 backdrop-blur-sm border border-green-700/30 rounded-2xl p-6 shadow-lg">
        <div className="flex items-start gap-4">
          <div className="bg-green-500/20 p-3 rounded-lg">
            <RotateCcw className="w-6 h-6 text-green-400" />
          </div>
          <div>
            <h1 className="text-2xl md:text-3xl font-bold text-white mb-2">üõ†Ô∏è –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è: –¶–∏–∫–ª—ã –≤ Go</h1>
            <p className="text-gray-300">
              –ü—Ä–∏–º–µ–Ω–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∑–Ω–∞–Ω–∏—è –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ. –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º <code className="bg-gray-700 px-1.5 py-0.5 rounded text-green-300">for</code>, <code className="bg-gray-700 px-1.5 py-0.5 rounded text-yellow-300">break</code>, <code className="bg-gray-700 px-1.5 py-0.5 rounded text-cyan-300">continue</code>, –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ü–∏–∫–ª–æ–≤ –∏ <code className="bg-gray-700 px-1.5 py-0.5 rounded text-purple-300">range</code>.
            </p>
            <p className="text-gray-400 text-sm mt-2">
              –û—Ç–º–µ—á–∞–π—Ç–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞.
            </p>
          </div>
        </div>
      </div>

      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <div className="mb-6 p-4 bg-gray-900/50 rounded-lg border border-gray-700">
          <h3 className="font-bold text-white mb-2 flex items-center gap-2">
            <Code className="w-5 h-5 text-green-400" />
            –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é:
          </h3>
          <ul className="list-disc pl-5 space-y-2 text-gray-300 text-sm">
            <li>–°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π Go —Ñ–∞–π–ª –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, task1.go, task2.go)</li>
            <li>–í—ã–ø–æ–ª–Ω—è–π—Ç–µ –∑–∞–¥–∞–Ω–∏—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ, —Å–ª–µ–¥—É—è —É–∫–∞–∑–∞–Ω–Ω—ã–º —à–∞–≥–∞–º</li>
            <li>–ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ —á–µ–∫–±–æ–∫—Å, —á—Ç–æ–±—ã –æ—Ç–º–µ—Ç–∏—Ç—å –µ–≥–æ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ</li>
            <li>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã 'go run filename.go' –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º</li>
            <li>–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ ‚Äî –º–µ–Ω—è–π—Ç–µ —É—Å–ª–æ–≤–∏—è, —à–∞–≥–∏, –¥–æ–±–∞–≤–ª—è–π—Ç–µ —Å–≤–æ–∏ —Ñ–∏—à–∫–∏!</li>
          </ul>
        </div>

        {practicalTasks.map((task) => (
          <div 
            key={task.id} 
            className={`mb-6 last:mb-0 p-5 rounded-xl border ${
              completedTasks.has(task.id) 
                ? 'border-green-700/50 bg-green-900/10' 
                : 'border-gray-700/50 bg-gray-900/50'
            }`}
          >
            <div className="flex items-start justify-between mb-4">
              <div className="flex items-start gap-3">
                <div className={`p-2 rounded-lg ${
                  task.difficulty === 'Ïâ¨Ïö¥' 
                    ? 'bg-green-500/20 text-green-400' 
                    : task.difficulty === 'Ï§ëÍ∞Ñ' 
                      ? 'bg-yellow-500/20 text-yellow-400'
                      : 'bg-red-500/20 text-red-400'
                }`}>
                  {task.difficulty === 'Ïâ¨Ïö¥' && <Check className="w-5 h-5" />}
                  {task.difficulty === 'Ï§ëÍ∞Ñ' && <Hash className="w-5 h-5" />}
                  {task.difficulty === 'Ïñ¥Î†§Ïö¥' && <X className="w-5 h-5" />}
                </div>
                <div>
                  <h3 className="font-bold text-white text-lg">{task.title}</h3>
                  <p className="text-gray-400 text-sm">{task.description}</p>
                </div>
              </div>
              <button
                onClick={() => toggleTaskCompletion(task.id)}
                className={`p-2 rounded-lg transition-colors ${
                  completedTasks.has(task.id)
                    ? 'bg-green-500/20 text-green-400 hover:bg-green-500/30'
                    : 'bg-gray-700 text-gray-400 hover:bg-gray-600'
                }`}
              >
                <CheckCircle className={`w-6 h-6 ${completedTasks.has(task.id) ? 'fill-current' : ''}`} />
              </button>
            </div>

            <div className="space-y-4">
              <div>
                <h4 className="font-medium text-white mb-2">–®–∞–≥–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:</h4>
                <ol className="list-decimal pl-5 space-y-2 text-gray-300">
                  {task.steps.map((step, index) => (
                    <li key={index} className="pl-2">{step}</li>
                  ))}
                </ol>
              </div>

              <div className="bg-gray-800/50 p-4 rounded-lg">
                <h4 className="font-medium text-white mb-2 flex items-center gap-2">
                  <HelpCircle className="w-4 h-4 text-purple-400" />
                  –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:
                </h4>
                <p className="text-gray-300 text-sm mb-3">{task.verification}</p>
                <div className="text-gray-400 text-xs">
                  <span className="font-medium">–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:</span> {task.expectedOutput}
                </div>
              </div>

              <div className="flex flex-wrap items-center justify-between gap-3 pt-3 border-t border-gray-700">
                <div className="text-sm">
                  <span className={`px-2 py-1 rounded ${
                    task.difficulty === 'Ïâ¨Ïö¥' 
                      ? 'bg-green-900/30 text-green-300' 
                      : task.difficulty === 'Ï§ëÍ∞Ñ' 
                        ? 'bg-yellow-900/30 text-yellow-300'
                        : 'bg-red-900/30 text-red-300'
                  }`}>
                    {task.difficulty === 'Ïâ¨Ïö¥' && 'Ïâ¨Ïö¥'}
                    {task.difficulty === 'Ï§ëÍ∞Ñ' && 'Ï§ëÍ∞Ñ'}
                    {task.difficulty === 'Ïñ¥Î†§Ïö¥' && 'Ïñ¥Î†§Ïö¥'}
                  </span>
                </div>
                <div className="text-sm text-gray-400">
                  –ó–∞–¥–∞–Ω–∏–µ {task.id} –∏–∑ {practicalTasks.length}
                </div>
              </div>
            </div>
          </div>
        ))}

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è */}
        <div className="mt-8 pt-6 border-t border-gray-700">
          <div className="bg-gray-900/50 p-4 rounded-lg">
            <h3 className="font-bold text-white mb-3 flex items-center gap-2">
              <Award className="w-5 h-5 text-yellow-400" />
              –ü—Ä–æ–≥—Ä–µ—Å—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
            </h3>
            <div className="flex items-center justify-between">
              <div className="flex-1">
                <div className="w-full bg-gray-700 rounded-full h-2.5">
                  <div 
                    className="bg-green-600 h-2.5 rounded-full transition-all duration-500" 
                    style={{ width: `${(completedTasks.size / practicalTasks.length) * 100}%` }}
                  ></div>
                </div>
                <div className="flex justify-between text-sm text-gray-400 mt-2">
                  <span>–í—ã–ø–æ–ª–Ω–µ–Ω–æ: {completedTasks.size}</span>
                  <span>–í—Å–µ–≥–æ: {practicalTasks.length}</span>
                </div>
              </div>
              <div className={`ml-4 px-3 py-1 rounded-lg font-bold ${
                completedTasks.size === practicalTasks.length
                  ? 'bg-green-900/30 text-green-300'
                  : 'bg-gray-700 text-gray-300'
              }`}>
                {Math.round((completedTasks.size / practicalTasks.length) * 100)}%
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Part3;