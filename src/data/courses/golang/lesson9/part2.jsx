import React, { useState } from 'react';
import { CheckCircle, XCircle, RotateCcw, Award, RotateCcw as LoopIcon, Code, HelpCircle, Hash, ArrowRight, X } from 'lucide-react';

const Part2 = () => {
  // –î–∞–Ω–Ω—ã–µ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã –ø–æ —Ç–µ–º–µ —É—Ä–æ–∫–∞
  const quizData = [
    {
      id: 1,
      question: "–°–∫–æ–ª—å–∫–æ —Ü–∏–∫–ª–æ–≤ –µ—Å—Ç—å –≤ Go?",
      options: [
        "–¢—Ä–∏: for, while, do-while",
        "–î–≤–∞: for –∏ while",
        "–û–¥–∏–Ω: —Ç–æ–ª—å–∫–æ for",
        "–ß–µ—Ç—ã—Ä–µ: for, foreach, while, loop"
      ],
      correctAnswer: 2 // –û–¥–∏–Ω: —Ç–æ–ª—å–∫–æ for
    },
    {
      id: 2,
      question: "–ö–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª –≤ Go?",
      options: [
        "while true { }",
        "for ( ; ; ) { }",
        "for { }",
        "loop { }"
      ],
      correctAnswer: 2 // for { }
    },
    {
      id: 3,
      question: "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä break –≤ —Ü–∏–∫–ª–µ?",
      options: [
        "–ü—Ä–æ–ø—É—Å–∫–∞–µ—Ç —Ç–µ–∫—É—â—É—é –∏—Ç–µ—Ä–∞—Ü–∏—é",
        "–ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ —Ü–∏–∫–ª–∞",
        "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—Å—é –ø—Ä–æ–≥—Ä–∞–º–º—É",
        "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç —Ü–∏–∫–ª —Å–Ω–∞—á–∞–ª–∞"
      ],
      correctAnswer: 1 // –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ —Ü–∏–∫–ª–∞
    },
    {
      id: 4,
      question: "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä continue?",
      options: [
        "–í—ã—Ö–æ–¥–∏—Ç –∏–∑ —Ü–∏–∫–ª–∞",
        "–ü—Ä–æ–ø—É—Å–∫–∞–µ—Ç –æ—Å—Ç–∞–≤—à—É—é—Å—è —á–∞—Å—Ç—å —Ç–µ–∫—É—â–µ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ —Å–ª–µ–¥—É—é—â–µ–π",
        "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã",
        "–ü–æ–≤—Ç–æ—Ä—è–µ—Ç —Ç–µ–∫—É—â—É—é –∏—Ç–µ—Ä–∞—Ü–∏—é"
      ],
      correctAnswer: 1 // –ü—Ä–æ–ø—É—Å–∫–∞–µ—Ç —Ç–µ–∫—É—â—É—é –∏—Ç–µ—Ä–∞—Ü–∏—é
    },
    {
      id: 5,
      question: "–ö–∞–∫–æ–π —Ü–∏–∫–ª –∑–∞–º–µ–Ω—è–µ—Ç while –≤ Go?",
      options: [
        "for —Å –æ–¥–Ω–∏–º —É—Å–ª–æ–≤–∏–µ–º: for x < 10 { ... }",
        "while x < 10 { ... }",
        "do x < 10 { ... }",
        "loop x < 10 { ... }"
      ],
      correctAnswer: 0 // for —Å —É—Å–ª–æ–≤–∏–µ–º
    },
    {
      id: 6,
      question: "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\nfor i := 0; i < 3; i++ {\n    if i == 1 {\n        continue\n    }\n    fmt.Print(i)\n}",
      options: [
        "012",
        "02",
        "12",
        "01"
      ],
      correctAnswer: 1 // 02 ‚Äî 1 –ø—Ä–æ–ø—É—â–µ–Ω–æ
    },
    {
      id: 7,
      question: "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\nfor i := 0; i < 5; i++ {\n    if i == 3 {\n        break\n    }\n    fmt.Print(i)\n}",
      options: [
        "012",
        "0123",
        "01234",
        "0124"
      ],
      correctAnswer: 0 // 012 ‚Äî –≤—ã—Ö–æ–¥–∏—Ç –ø—Ä–∏ i=3
    },
    {
      id: 8,
      question: "–ö–∞–∫ –ø–µ—Ä–µ–±—Ä–∞—Ç—å –≤—Å–µ —Å–∏–º–≤–æ–ª—ã —Å—Ç—Ä–æ–∫–∏ word?",
      options: [
        "for char in word { ... }",
        "for i=0; i<len(word); i++ { char := word[i] }",
        "for _, char := range word { ... }",
        "foreach char of word { ... }"
      ],
      correctAnswer: 2 // for _, char := range word
    },
    {
      id: 9,
      question: "–ß—Ç–æ —Ç–∞–∫–æ–µ –≤–ª–æ–∂–µ–Ω–Ω—ã–π —Ü–∏–∫–ª?",
      options: [
        "–¶–∏–∫–ª, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é",
        "–¶–∏–∫–ª –≤–Ω—É—Ç—Ä–∏ –¥—Ä—É–≥–æ–≥–æ —Ü–∏–∫–ª–∞",
        "–¶–∏–∫–ª, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ",
        "–¶–∏–∫–ª —Å break –∏ continue"
      ],
      correctAnswer: 1 // –¶–∏–∫–ª –≤–Ω—É—Ç—Ä–∏ –¥—Ä—É–≥–æ–≥–æ —Ü–∏–∫–ª–∞
    },
    {
      id: 10,
      question: "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\nfor i := 1; i <= 2; i++ {\n    for j := 1; j <= 2; j++ {\n        fmt.Print(i*j, \" \")\n    }\n}",
      options: [
        "1 2 2 4",
        "1 2 3 4",
        "2 4 6 8",
        "1 1 2 2"
      ],
      correctAnswer: 0 // 1 2 2 4 ‚Üí (1*1, 1*2, 2*1, 2*2)
    },
    {
      id: 11,
      question: "–ö–∞–∫–æ–π –∏–Ω–¥–µ–∫—Å —É –ø–µ—Ä–≤–æ–≥–æ —Å–∏–º–≤–æ–ª–∞ –≤ —Å—Ç—Ä–æ–∫–µ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ range?",
      options: [
        "1",
        "0",
        "-1",
        "–ó–∞–≤–∏—Å–∏—Ç –æ—Ç –¥–ª–∏–Ω—ã —Å—Ç—Ä–æ–∫–∏"
      ],
      correctAnswer: 1 // 0 ‚Äî –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è —Å –Ω—É–ª—è
    },
    {
      id: 12,
      question: "–ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç, –µ—Å–ª–∏ –∑–∞–±—ã—Ç—å break –≤ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–º —Ü–∏–∫–ª–µ?",
      options: [
        "–ü—Ä–æ–≥—Ä–∞–º–º–∞ —Å–∞–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥",
        "–¶–∏–∫–ª –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è 100 —Ä–∞–∑ –∏ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è",
        "–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–∏—Å–Ω–µ—Ç –∏–ª–∏ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ",
        "Go –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–∏—Ç break"
      ],
      correctAnswer: 2 // –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–∏—Å–Ω–µ—Ç –∏–ª–∏ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ
    },
    {
      id: 13,
      question: "–ö–∞–∫ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∏–Ω–¥–µ–∫—Å, –µ—Å–ª–∏ –æ–Ω –Ω–µ –Ω—É–∂–µ–Ω –≤ range?",
      options: [
        "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å null: for null, char := range word",
        "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å _: for _, char := range word",
        "–ü—Ä–æ—Å—Ç–æ –Ω–µ –ø–∏—Å–∞—Ç—å: for char := range word",
        "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å 0: for 0, char := range word"
      ],
      correctAnswer: 1 // for _, char := range word
    },
    {
      id: 14,
      question: "–°–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è —ç—Ç–æ—Ç —Ü–∏–∫–ª?\n\ni := 5\nfor i > 0 {\n    i--\n}",
      options: [
        "0 —Ä–∞–∑",
        "5 —Ä–∞–∑",
        "–ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ",
        "1 —Ä–∞–∑"
      ],
      correctAnswer: 1 // 5 —Ä–∞–∑ ‚Äî i —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è –æ—Ç 5 –¥–æ 0
    }
  ];

  // –°–æ—Å—Ç–æ—è–Ω–∏—è –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
  const [userAnswers, setUserAnswers] = useState(Array(quizData.length).fill(null));
  const [submitted, setSubmitted] = useState(false);
  const [score, setScore] = useState(0);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –æ—Ç–≤–µ—Ç–∞
  const handleAnswerSelect = (questionIndex, optionIndex) => {
    if (submitted) return; // –ë–ª–æ–∫–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
    const newAnswers = [...userAnswers];
    newAnswers[questionIndex] = optionIndex;
    setUserAnswers(newAnswers);
  };

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤
  const handleSubmit = () => {
    let newScore = 0;
    userAnswers.forEach((answer, index) => {
      if (answer === quizData[index].correctAnswer) {
        newScore++;
      }
    });
    setScore(newScore);
    setSubmitted(true);
  };

  // –°–±—Ä–æ—Å –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
  const handleReset = () => {
    setUserAnswers(Array(quizData.length).fill(null));
    setSubmitted(false);
    setScore(0);
  };

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, –≤—Å–µ –ª–∏ –≤–æ–ø—Ä–æ—Å—ã –æ—Ç–≤–µ—á–µ–Ω—ã
  const allAnswered = userAnswers.every(answer => answer !== null);

  return (
    <div className="space-y-6">
      <div className="bg-gradient-to-r from-green-900/30 to-teal-900/30 backdrop-blur-sm border border-green-700/30 rounded-2xl p-6 shadow-lg">
        <div className="flex items-start gap-4">
          <div className="bg-green-500/20 p-3 rounded-lg">
            <LoopIcon className="w-6 h-6 text-green-400" />
          </div>
          <div>
            <h1 className="text-2xl md:text-3xl font-bold text-white mb-2">üß† –í–∏–∫—Ç–æ—Ä–∏–Ω–∞: –¶–∏–∫–ª—ã –≤ Go</h1>
            <p className="text-gray-300">
              –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è –ø–æ —Ç–µ–º–µ <span className="font-medium text-yellow-400">—Ü–∏–∫–ª–æ–≤ –≤ Go</span>.
            </p>
            <p className="text-gray-400 text-sm mt-2">–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞.</p>
          </div>
        </div>
      </div>

      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        {quizData.map((q, questionIndex) => {
          const isSelected = userAnswers[questionIndex] !== null;
          const isCorrect = userAnswers[questionIndex] === q.correctAnswer;
          
          return (
            <div 
              key={q.id} 
              className={`mb-8 last:mb-0 p-4 rounded-lg ${
                submitted && isSelected && isCorrect 
                  ? 'bg-green-900/20 border border-green-700/30' 
                  : submitted && isSelected && !isCorrect 
                    ? 'bg-red-900/20 border border-red-700/30' 
                    : 'bg-gray-900/50'
              }`}
            >
              <h3 className="font-medium text-white mb-3 flex items-start gap-2">
                <span className="flex-shrink-0">{questionIndex + 1}.</span>
                <span>{q.question}</span>
              </h3>
              <div className="space-y-2">
                {q.options.map((option, optionIndex) => {
                  let optionStyle = "block w-full text-left p-3 rounded-lg transition-colors duration-200 ";
                  if (submitted) {
                    if (optionIndex === q.correctAnswer) {
                      optionStyle += "bg-green-700 text-white"; // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
                    } else if (optionIndex === userAnswers[questionIndex] && optionIndex !== q.correctAnswer) {
                      optionStyle += "bg-red-700 text-white"; // –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
                    } else {
                      optionStyle += "bg-gray-800 text-gray-400 cursor-not-allowed"; // –î—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
                    }
                  } else {
                    // –°—Ç–∏–ª–∏ –¥–æ –æ—Ç–ø—Ä–∞–≤–∫–∏
                    if (userAnswers[questionIndex] === optionIndex) {
                      optionStyle += "bg-blue-600 text-white"; // –í—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
                    } else {
                      optionStyle += "bg-gray-800 hover:bg-gray-700 text-gray-300"; // –ù–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–π
                    }
                  }

                  return (
                    <button
                      key={optionIndex}
                      onClick={() => handleAnswerSelect(questionIndex, optionIndex)}
                      className={optionStyle}
                      disabled={submitted} // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
                    >
                      <div className="flex items-center">
                        <span className="mr-2 font-mono flex-shrink-0">{String.fromCharCode(65 + optionIndex)}.</span>
                        <span>{option}</span>
                        {submitted && optionIndex === q.correctAnswer && (
                          <CheckCircle className="ml-auto w-5 h-5 text-green-400 flex-shrink-0" />
                        )}
                        {submitted && optionIndex === userAnswers[questionIndex] && optionIndex !== q.correctAnswer && (
                          <XCircle className="ml-auto w-5 h-5 text-red-400 flex-shrink-0" />
                        )}
                        {!submitted && userAnswers[questionIndex] === optionIndex && (
                          <span className="ml-auto w-5 h-5 rounded-full bg-blue-400 flex-shrink-0"></span>
                        )}
                      </div>
                    </button>
                  );
                })}
              </div>
              {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –æ—Ç–≤–µ—Ç–∞ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ */}
              {submitted && isSelected && (
                <div className={`mt-3 text-sm p-2 rounded flex items-start gap-2 ${isCorrect ? 'bg-green-900/30 text-green-300' : 'bg-red-900/30 text-red-300'}`}>
                  {isCorrect ? (
                    <>
                      <CheckCircle className="w-5 h-5 flex-shrink-0 mt-0.5" />
                      <span>–í–µ—Ä–Ω–æ!</span>
                    </>
                  ) : (
                    <>
                      <XCircle className="w-5 h-5 flex-shrink-0 mt-0.5" />
                      <span>–ù–µ–≤–µ—Ä–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {String.fromCharCode(65 + q.correctAnswer)}.</span>
                    </>
                  )}
                </div>
              )}
            </div>
          );
        })}

        {/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
        <div className="flex flex-wrap items-center justify-between gap-4 pt-4 mt-6 border-t border-gray-700">
          {!submitted ? (
            <button
              onClick={handleSubmit}
              disabled={!allAnswered}
              className={`px-6 py-3 rounded-lg font-medium flex items-center gap-2 transition-all duration-300 ${
                allAnswered
                  ? 'bg-gradient-to-r from-green-600 to-green-700 hover:from-green-700 hover:to-green-800 text-white shadow-lg hover:shadow-xl transform hover:scale-[1.02] cursor-pointer'
                  : 'bg-gray-700 text-gray-500 cursor-not-allowed'
              }`}
            >
              <CheckCircle className="w-5 h-5" />
              –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–≤–µ—Ç—ã
            </button>
          ) : (
            <div className="flex flex-wrap items-center gap-4">
              <div className="flex items-center gap-2 bg-gray-900 px-4 py-3 rounded-lg">
                <Award className="w-5 h-5 text-yellow-400 flex-shrink-0" />
                <span className="font-bold text-white">–†–µ–∑—É–ª—å—Ç–∞—Ç: </span>
                <span className="font-bold text-xl text-yellow-400">{score}</span>
                <span className="text-gray-400">/ {quizData.length}</span>
              </div>
              <button
                onClick={handleReset}
                className="px-6 py-3 bg-gray-700 hover:bg-gray-600 text-white rounded-lg font-medium flex items-center gap-2 transition-colors duration-200 whitespace-nowrap"
              >
                <RotateCcw className="w-5 h-5" />
                –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
              </button>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default Part2;