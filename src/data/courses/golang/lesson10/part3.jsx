import React, { useState } from 'react';
import { Calculator, Check, X, Hash, CheckCircle, Award, RotateCcw, Code, HelpCircle } from 'lucide-react';

const Part3 = () => {
  // –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è –ø–æ —Ç–µ–º–µ —É—Ä–æ–∫–∞ "–§—É–Ω–∫—Ü–∏–∏ –≤ Go"
  const practicalTasks = [
    {
      id: 1,
      title: "–ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π",
      description: "–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ—Å—Ç–æ –≤—ã–≤–æ–¥–∏—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ.",
      steps: [
        "–û–±—ä—è–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é sayHello() –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏ –±–µ–∑ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π",
        "–í–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –≤—ã–≤–µ–¥–∏—Ç–µ '–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä! üëã'",
        "–í—ã–∑–æ–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –≤ main()",
        "–°–æ–∑–¥–∞–π—Ç–µ –≤—Ç–æ—Ä—É—é —Ñ—É–Ω–∫—Ü–∏—é sayGoodbye() –∏ –≤—ã–∑–æ–≤–∏—Ç–µ –µ—ë –ø–æ—Å–ª–µ sayHello()"
      ],
      verification: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –æ–±–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤—ã–≤–æ–¥—è—Ç —Å–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª—å",
      expectedOutput: "–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä! üëã\n–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! üëã",
      difficulty: "Ïâ¨Ïö¥"
    },
    {
      id: 2,
      title: "–§—É–Ω–∫—Ü–∏—è —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ ‚Äî –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ",
      description: "–ù–∞—É—á–∏—Ç–µ—Å—å –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –≥–∏–±–∫–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è.",
      steps: [
        "–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é greet(name string)",
        "–í–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –≤—ã–≤–µ–¥–∏—Ç–µ '–ü—Ä–∏–≤–µ—Ç, [name]! üòä'",
        "–í—ã–∑–æ–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é —Å —Ä–∞–∑–Ω—ã–º–∏ –∏–º–µ–Ω–∞–º–∏: '–ê–Ω–Ω–∞', '–ò–≤–∞–Ω', 'Go-–ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç'",
        "–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é greetWithAge(name string, age int) –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç –≤–º–µ—Å—Ç–µ —Å –∏–º–µ–Ω–µ–º",
        "–í—ã–∑–æ–≤–∏—Ç–µ –µ—ë —Å —Ä–∞–∑–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏"
      ],
      verification: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø—Ä–∏–Ω–∏–º–∞—é—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –≤—ã–≤–æ–¥—è—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è",
      expectedOutput: "–ü—Ä–∏–≤–µ—Ç, –ê–Ω–Ω–∞! üòä\n–ü—Ä–∏–≤–µ—Ç, –ò–≤–∞–Ω, —Ç–µ–±–µ 25 –ª–µ—Ç! üòä",
      difficulty: "Ïâ¨Ïö¥"
    },
    {
      id: 3,
      title: "–§—É–Ω–∫—Ü–∏—è —Å –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º ‚Äî –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä",
      description: "–û—Å–≤–æ–π—Ç–µ –≤–æ–∑–≤—Ä–∞—Ç –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π.",
      steps: [
        "–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é add(a, b int) int, –≤–æ–∑–≤—Ä–∞—â–∞—é—â—É—é —Å—É–º–º—É",
        "–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ sub, mul, div –¥–ª—è –≤—ã—á–∏—Ç–∞–Ω–∏—è, —É–º–Ω–æ–∂–µ–Ω–∏—è –∏ –¥–µ–ª–µ–Ω–∏—è",
        "–í—ã–∑–æ–≤–∏—Ç–µ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å —Ä–∞–∑–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏ –∏ –≤—ã–≤–µ–¥–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã",
        "–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é isEven(n int) bool, –≤–æ–∑–≤—Ä–∞—â–∞—é—â—É—é true, –µ—Å–ª–∏ —á–∏—Å–ª–æ —á—ë—Ç–Ω–æ–µ",
        "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –µ—ë —Å —á–∏—Å–ª–∞–º–∏ 4, 7, 10"
      ],
      verification: "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤—ã–≤–æ–¥—è—Ç—Å—è",
      expectedOutput: "5 + 3 = 8\n10 - 4 = 6\n–ß—ë—Ç–Ω–æ–µ: true\n–ß—ë—Ç–Ω–æ–µ: false",
      difficulty: "Ï§ëÍ∞Ñ"
    },
    {
      id: 4,
      title: "–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è ‚Äî –¥–µ–ª–µ–Ω–∏–µ —Å –æ—Å—Ç–∞—Ç–∫–æ–º",
      description: "–ü—Ä–∞–∫—Ç–∏–∫–∞ —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–º–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏–π –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ.",
      steps: [
        "–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é divideWithRemainder(a, b int) (int, int)",
        "–ü–µ—Ä–≤–æ–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ ‚Äî —á–∞—Å—Ç–Ω–æ–µ (a / b), –≤—Ç–æ—Ä–æ–µ ‚Äî –æ—Å—Ç–∞—Ç–æ–∫ (a % b)",
        "–í—ã–∑–æ–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é —Å —á–∏—Å–ª–∞–º–∏ 17 –∏ 5, —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ quotient –∏ remainder",
        "–í—ã–≤–µ–¥–∏—Ç–µ: '17 √∑ 5 = 3 —Å –æ—Å—Ç–∞—Ç–∫–æ–º 2'",
        "–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é minMax(a, b int) (int, int), –≤–æ–∑–≤—Ä–∞—â–∞—é—â—É—é –º–∏–Ω–∏–º—É–º –∏ –º–∞–∫—Å–∏–º—É–º",
        "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å –ø–∞—Ä–∞–º–∏ —á–∏—Å–µ–ª: (10, 5), (-3, 7)"
      ],
      verification: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –æ–±–∞ –∑–Ω–∞—á–µ–Ω–∏—è –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∏ –≤—ã–≤–æ–¥—è—Ç—Å—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ",
      expectedOutput: "17 √∑ 5 = 3 —Å –æ—Å—Ç–∞—Ç–∫–æ–º 2\n–ú–∏–Ω: 5, –ú–∞–∫—Å: 10",
      difficulty: "Ï§ëÍ∞Ñ"
    },
    {
      id: 5,
      title: "–ò–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è ‚Äî —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
      description: "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏ –∫–æ–¥–∞.",
      steps: [
        "–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é stats(a, b, c int) (sum, avg float64)",
        "–í—ã—á–∏—Å–ª–∏—Ç–µ —Å—É–º–º—É –∏ —Å—Ä–µ–¥–Ω–µ–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–µ —Ç—Ä—ë—Ö —á–∏—Å–µ–ª",
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ ¬´–≥–æ–ª—ã–π return¬ª –≤ –∫–æ–Ω—Ü–µ —Ñ—É–Ω–∫—Ü–∏–∏",
        "–í—ã–∑–æ–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é —Å —á–∏—Å–ª–∞–º–∏ 10, 20, 30 –∏ –≤—ã–≤–µ–¥–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã",
        "–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é describeNumber(n int) (isPositive, isEven, isZero bool)",
        "–†–µ–∞–ª–∏–∑—É–π—Ç–µ –ª–æ–≥–∏–∫—É –∏ –≤–µ—Ä–Ω–∏—Ç–µ –≤—Å–µ —Ç—Ä–∏ —Ñ–ª–∞–≥–∞ –æ–¥–Ω–∏–º return"
      ],
      verification: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤—ã—á–∏—Å–ª—è—é—Ç—Å—è –∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è",
      expectedOutput: "–°—É–º–º–∞: 60.0, –°—Ä–µ–¥–Ω–µ–µ: 20.0\n–ß–∏—Å–ª–æ 5: –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ=true, —á—ë—Ç–Ω–æ–µ=false, –Ω–æ–ª—å=false",
      difficulty: "Ï§ëÍ∞Ñ"
    },
    {
      id: 6,
      title: "–í–ª–æ–∂–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ‚Äî –∑–∞–º—ã–∫–∞–Ω–∏—è –∏ —Å—á—ë—Ç—á–∏–∫–∏",
      description: "–û—Å–≤–æ–π—Ç–µ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –∑–∞–º—ã–∫–∞–Ω–∏—è –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ —Å—á—ë—Ç—á–∏–∫–æ–≤.",
      steps: [
        "–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é makeCounter() func() int",
        "–í–Ω—É—Ç—Ä–∏ –æ–±—ä—è–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é count := 0",
        "–í–µ—Ä–Ω–∏—Ç–µ –∞–Ω–æ–Ω–∏–º–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç count –Ω–∞ 1 –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ",
        "–í main() —Å–æ–∑–¥–∞–π—Ç–µ –¥–≤–∞ —Å—á—ë—Ç—á–∏–∫–∞: counter1 –∏ counter2",
        "–í—ã–∑–æ–≤–∏—Ç–µ –∫–∞–∂–¥—ã–π —Å—á—ë—Ç—á–∏–∫ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –∏ –≤—ã–≤–µ–¥–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã",
        "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å—á—ë—Ç—á–∏–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ"
      ],
      verification: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –∫–∞–∂–¥—ã–π —Å—á—ë—Ç—á–∏–∫ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–≤–æ—ë —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –≤—ã–∑–æ–≤–∞–º–∏",
      expectedOutput: "–°—á—ë—Ç—á–∏–∫1: 1, 2, 3\n–°—á—ë—Ç—á–∏–∫2: 1, 2",
      difficulty: "Ïñ¥Î†§Ïö¥"
    },
    {
      id: 7,
      title: "–ö–æ–º–±–∏–Ω–∏—Ä—É–µ–º –≤—Å—ë ‚Äî —Ñ—É–Ω–∫—Ü–∏—è-–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫",
      description: "–°–ª–æ–∂–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ: —Å–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∏—Å–ø–æ–ª—å–∑—É—é—â—É—é –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫.",
      steps: [
        "–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é calculate(a, b float64, op string) (float64, error)",
        "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏–∏: '+', '-', '*', '/'",
        "–ü—Ä–∏ –¥–µ–ª–µ–Ω–∏–∏ –Ω–∞ 0 ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ –æ—à–∏–±–∫—É —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º '–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å'",
        "–ü—Ä–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ –æ—à–∏–±–∫—É '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è'",
        "–í main() –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏, –≤–∫–ª—é—á–∞—è –æ—à–∏–±–æ—á–Ω—ã–µ —Å–ª—É—á–∞–∏",
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ if err != nil –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫"
      ],
      verification: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤—ã—á–∏—Å–ª–µ–Ω–∏–π –∏ –æ–±—Ä–∞–±–æ—Ç–∫—É –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –æ—à–∏–±–æ–∫",
      expectedOutput: "10 + 5 = 15.0\n10 / 0 = –æ—à–∏–±–∫–∞: –¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å\n10 % 5 = –æ—à–∏–±–∫–∞: –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è",
      difficulty: "Ïñ¥Î†§Ïö¥"
    },
    {
      id: 8,
      title: "–ò—Ç–æ–≥–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç: –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–∞–ª—é—Ç —Å –≤–ª–æ–∂–µ–Ω–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏",
      description: "–°–æ–∑–¥–∞–π—Ç–µ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –≤—Å–µ—Ö –∏–∑—É—á–µ–Ω–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π —Ñ—É–Ω–∫—Ü–∏–π.",
      steps: [
        "–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é makeCurrencyConverter(rate float64) func(amount float64) float64",
        "–í–Ω—É—Ç—Ä–∏ –≤–µ—Ä–Ω–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, —É–º–Ω–æ–∂–∞—é—â—É—é amount –Ω–∞ rate",
        "–°–æ–∑–¥–∞–π—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä—ã: usdToEur (–∫—É—Ä—Å 0.85), eurToUsd (–∫—É—Ä—Å 1.18)",
        "–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é printConversion(amount float64, from, to string, converter func(float64) float64)",
        "–í–Ω—É—Ç—Ä–∏ printConversion –≤—ã–∑–æ–≤–∏—Ç–µ converter –∏ –≤—ã–≤–µ–¥–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É",
        "–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é 100 USD –≤ EUR –∏ 50 EUR –≤ USD",
        "–î–æ–±–∞–≤—å—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é compareConversions(amount float64), –∏—Å–ø–æ–ª—å–∑—É—é—â—É—é –æ–±–∞ –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–∞ –∏ –≤—ã–≤–æ–¥—è—â—É—é —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ"
      ],
      verification: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ, –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç, –≤—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–µ–Ω",
      expectedOutput: "100.00 USD = 85.00 EUR\n50.00 EUR = 59.00 USD\n–°—Ä–∞–≤–Ω–µ–Ω–∏–µ: 100 USD ‚Üí 85 EUR ‚Üí 100.30 USD (–ø–æ—á—Ç–∏ –æ–±—Ä–∞—Ç–Ω–æ!)",
      difficulty: "Ïñ¥Î†§Ïö¥"
    }
  ];

  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π
  const [completedTasks, setCompletedTasks] = useState(new Set());
  const [showResults, setShowResults] = useState({});

  // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è
  const toggleTaskCompletion = (taskId) => {
    const newCompletedTasks = new Set(completedTasks);
    if (newCompletedTasks.has(taskId)) {
      newCompletedTasks.delete(taskId);
    } else {
      newCompletedTasks.add(taskId);
    }
    setCompletedTasks(newCompletedTasks);
  };

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è
  const saveResult = (taskId, result) => {
    setShowResults(prev => ({
      ...prev,
      [taskId]: result
    }));
  };

  return (
    <div className="space-y-6">
      <div className="bg-gradient-to-r from-green-900/30 to-teal-900/30 backdrop-blur-sm border border-green-700/30 rounded-2xl p-6 shadow-lg">
        <div className="flex items-start gap-4">
          <div className="bg-green-500/20 p-3 rounded-lg">
            <RotateCcw className="w-6 h-6 text-green-400" />
          </div>
          <div>
            <h1 className="text-2xl md:text-3xl font-bold text-white mb-2">üõ†Ô∏è –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è: –§—É–Ω–∫—Ü–∏–∏ –≤ Go</h1>
            <p className="text-gray-300">
              –ü—Ä–∏–º–µ–Ω–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∑–Ω–∞–Ω–∏—è –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ. –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º <code className="bg-gray-700 px-1.5 py-0.5 rounded text-green-300">func</code>, –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, <code className="bg-gray-700 px-1.5 py-0.5 rounded text-yellow-300">–≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π</code>, <code className="bg-gray-700 px-1.5 py-0.5 rounded text-cyan-300">–º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö</code> –∏ <code className="bg-gray-700 px-1.5 py-0.5 rounded text-purple-300">–∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã—Ö –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π</code>, –∞ —Ç–∞–∫–∂–µ <code className="bg-gray-700 px-1.5 py-0.5 rounded text-pink-300">–≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π</code>.
            </p>
            <p className="text-gray-400 text-sm mt-2">
              –û—Ç–º–µ—á–∞–π—Ç–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞.
            </p>
          </div>
        </div>
      </div>

      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <div className="mb-6 p-4 bg-gray-900/50 rounded-lg border border-gray-700">
          <h3 className="font-bold text-white mb-2 flex items-center gap-2">
            <Code className="w-5 h-5 text-green-400" />
            –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é:
          </h3>
          <ul className="list-disc pl-5 space-y-2 text-gray-300 text-sm">
            <li>–°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π Go —Ñ–∞–π–ª –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, functions_task1.go)</li>
            <li>–í—ã–ø–æ–ª–Ω—è–π—Ç–µ –∑–∞–¥–∞–Ω–∏—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ, —Å–ª–µ–¥—É—è —É–∫–∞–∑–∞–Ω–Ω—ã–º —à–∞–≥–∞–º</li>
            <li>–ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ —á–µ–∫–±–æ–∫—Å, —á—Ç–æ–±—ã –æ—Ç–º–µ—Ç–∏—Ç—å –µ–≥–æ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ</li>
            <li>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã 'go run filename.go' –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º</li>
            <li>–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ ‚Äî —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ —Å–≤–æ–∏ —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ–º–±–∏–Ω–∏—Ä—É–π—Ç–µ –ø–æ–¥—Ö–æ–¥—ã!</li>
          </ul>
        </div>

        {practicalTasks.map((task) => (
          <div 
            key={task.id} 
            className={`mb-6 last:mb-0 p-5 rounded-xl border ${
              completedTasks.has(task.id) 
                ? 'border-green-700/50 bg-green-900/10' 
                : 'border-gray-700/50 bg-gray-900/50'
            }`}
          >
            <div className="flex items-start justify-between mb-4">
              <div className="flex items-start gap-3">
                <div className={`p-2 rounded-lg ${
                  task.difficulty === 'Ïâ¨Ïö¥' 
                    ? 'bg-green-500/20 text-green-400' 
                    : task.difficulty === 'Ï§ëÍ∞Ñ' 
                      ? 'bg-yellow-500/20 text-yellow-400'
                      : 'bg-red-500/20 text-red-400'
                }`}>
                  {task.difficulty === 'Ïâ¨Ïö¥' && <Check className="w-5 h-5" />}
                  {task.difficulty === 'Ï§ëÍ∞Ñ' && <Hash className="w-5 h-5" />}
                  {task.difficulty === 'Ïñ¥Î†§Ïö¥' && <X className="w-5 h-5" />}
                </div>
                <div>
                  <h3 className="font-bold text-white text-lg">{task.title}</h3>
                  <p className="text-gray-400 text-sm">{task.description}</p>
                </div>
              </div>
              <button
                onClick={() => toggleTaskCompletion(task.id)}
                className={`p-2 rounded-lg transition-colors ${
                  completedTasks.has(task.id)
                    ? 'bg-green-500/20 text-green-400 hover:bg-green-500/30'
                    : 'bg-gray-700 text-gray-400 hover:bg-gray-600'
                }`}
              >
                <CheckCircle className={`w-6 h-6 ${completedTasks.has(task.id) ? 'fill-current' : ''}`} />
              </button>
            </div>

            <div className="space-y-4">
              <div>
                <h4 className="font-medium text-white mb-2">–®–∞–≥–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:</h4>
                <ol className="list-decimal pl-5 space-y-2 text-gray-300">
                  {task.steps.map((step, index) => (
                    <li key={index} className="pl-2">{step}</li>
                  ))}
                </ol>
              </div>

              <div className="bg-gray-800/50 p-4 rounded-lg">
                <h4 className="font-medium text-white mb-2 flex items-center gap-2">
                  <HelpCircle className="w-4 h-4 text-purple-400" />
                  –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:
                </h4>
                <p className="text-gray-300 text-sm mb-3">{task.verification}</p>
                <div className="text-gray-400 text-xs">
                  <span className="font-medium">–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:</span> {task.expectedOutput}
                </div>
              </div>

              <div className="flex flex-wrap items-center justify-between gap-3 pt-3 border-t border-gray-700">
                <div className="text-sm">
                  <span className={`px-2 py-1 rounded ${
                    task.difficulty === 'Ïâ¨Ïö¥' 
                      ? 'bg-green-900/30 text-green-300' 
                      : task.difficulty === 'Ï§ëÍ∞Ñ' 
                        ? 'bg-yellow-900/30 text-yellow-300'
                        : 'bg-red-900/30 text-red-300'
                  }`}>
                    {task.difficulty === 'Ïâ¨Ïö¥' && 'Ïâ¨Ïö¥'}
                    {task.difficulty === 'Ï§ëÍ∞Ñ' && 'Ï§ëÍ∞Ñ'}
                    {task.difficulty === 'Ïñ¥Î†§Ïö¥' && 'Ïñ¥Î†§Ïö¥'}
                  </span>
                </div>
                <div className="text-sm text-gray-400">
                  –ó–∞–¥–∞–Ω–∏–µ {task.id} –∏–∑ {practicalTasks.length}
                </div>
              </div>
            </div>
          </div>
        ))}

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è */}
        <div className="mt-8 pt-6 border-t border-gray-700">
          <div className="bg-gray-900/50 p-4 rounded-lg">
            <h3 className="font-bold text-white mb-3 flex items-center gap-2">
              <Award className="w-5 h-5 text-yellow-400" />
              –ü—Ä–æ–≥—Ä–µ—Å—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
            </h3>
            <div className="flex items-center justify-between">
              <div className="flex-1">
                <div className="w-full bg-gray-700 rounded-full h-2.5">
                  <div 
                    className="bg-green-600 h-2.5 rounded-full transition-all duration-500" 
                    style={{ width: `${(completedTasks.size / practicalTasks.length) * 100}%` }}
                  ></div>
                </div>
                <div className="flex justify-between text-sm text-gray-400 mt-2">
                  <span>–í—ã–ø–æ–ª–Ω–µ–Ω–æ: {completedTasks.size}</span>
                  <span>–í—Å–µ–≥–æ: {practicalTasks.length}</span>
                </div>
              </div>
              <div className={`ml-4 px-3 py-1 rounded-lg font-bold ${
                completedTasks.size === practicalTasks.length
                  ? 'bg-green-900/30 text-green-300'
                  : 'bg-gray-700 text-gray-300'
              }`}>
                {Math.round((completedTasks.size / practicalTasks.length) * 100)}%
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Part3;