import React, { useState } from 'react';
import { CheckCircle, XCircle, RotateCcw, Award, RotateCcw as LoopIcon, Code, HelpCircle, Hash, ArrowRight, X } from 'lucide-react';

const Part2 = () => {
  // –î–∞–Ω–Ω—ã–µ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã –ø–æ —Ç–µ–º–µ —É—Ä–æ–∫–∞
  const quizData = [
    {
      id: 1,
      question: "–ö–∞–∫–æ–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –≤ Go?",
      options: [
        "function",
        "def",
        "func",
        "method"
      ],
      correctAnswer: 2 // func
    },
    {
      id: 2,
      question: "–ö–∞–∫ –æ–±—ä—è–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏ –±–µ–∑ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è?",
      options: [
        "func hello() {}",
        "function hello(): void {}",
        "def hello():",
        "func hello -> {}"
      ],
      correctAnswer: 0 // func hello() {}
    },
    {
      id: 3,
      question: "–ö–∞–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ —Ü–µ–ª—ã—Ö —á–∏—Å–ª–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ö —Å—É–º–º—É?",
      options: [
        "func add(a int, b int) int { return a + b }",
        "function add(a: int, b: int): int { return a + b }",
        "def add(a, b): return a + b",
        "func add(a, b) -> int { a + b }"
      ],
      correctAnswer: 0 // func add(a int, b int) int { return a + b }
    },
    {
      id: 4,
      question: "–ö–∞–∫ –≤–µ—Ä–Ω—É—Ç—å –¥–≤–∞ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ Go?",
      options: [
        "return value1 and value2",
        "return (value1, value2)",
        "return value1, value2",
        "yield value1, value2"
      ],
      correctAnswer: 2 // return value1, value2
    },
    {
      id: 5,
      question: "–ß—Ç–æ —Ç–∞–∫–æ–µ –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è?",
      options: [
        "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –æ–±—ä—è–≤–ª–µ–Ω–Ω—ã–µ –≤ —Å–∏–≥–Ω–∞—Ç—É—Ä–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞",
        "–§—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç —Å–≤–æ—ë –∏–º—è",
        "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º 'return_'",
        "–ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞"
      ],
      correctAnswer: 0 // –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –æ–±—ä—è–≤–ª–µ–Ω–Ω—ã–µ –≤ —Å–∏–≥–Ω–∞—Ç—É—Ä–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞
    },
    {
      id: 6,
      question: "–ö–∞–∫ –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é divide, –≤–æ–∑–≤—Ä–∞—â–∞—é—â—É—é —á–∞—Å—Ç–Ω–æ–µ –∏ –æ—Å—Ç–∞—Ç–æ–∫?\n\nfunc divide(a, b int) (int, int) { ... }",
      options: [
        "q = divide(10, 3)",
        "q, r := divide(10, 3)",
        "divide(10, 3) -> q, r",
        "var q, r = divide.call(10, 3)"
      ],
      correctAnswer: 1 // q, r := divide(10, 3)
    },
    {
      id: 7,
      question: "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç ¬´–≥–æ–ª—ã–π return¬ª (naked return) –≤ —Ñ—É–Ω–∫—Ü–∏–∏ —Å –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–º–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏?",
      options: [
        "–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ",
        "–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö",
        "–í—ã–∑—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É –∫–æ–º–ø–∏–ª—è—Ü–∏–∏",
        "–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç nil"
      ],
      correctAnswer: 1 // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    },
    {
      id: 8,
      question: "–ú–æ–∂–Ω–æ –ª–∏ –æ–±—ä—è–≤–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ –≤–Ω—É—Ç—Ä–∏ –¥—Ä—É–≥–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π –≤ Go?",
      options: [
        "–ù–µ—Ç, —ç—Ç–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ",
        "–î–∞, –∏ –æ–Ω–∏ –Ω–∞–∑—ã–≤–∞—é—Ç—Å—è –≤–ª–æ–∂–µ–Ω–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏",
        "–¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤–Ω–µ—à–Ω—è—è —Ñ—É–Ω–∫—Ü–∏—è ‚Äî –∞–Ω–æ–Ω–∏–º–Ω–∞—è",
        "–¢–æ–ª—å–∫–æ –≤ –º–µ—Ç–æ–¥–∞—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä"
      ],
      correctAnswer: 1 // –î–∞, –∏ –æ–Ω–∏ –Ω–∞–∑—ã–≤–∞—é—Ç—Å—è –≤–ª–æ–∂–µ–Ω–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏
    },
    {
      id: 9,
      question: "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\nfunc getValues() (x, y int) {\n    x = 5\n    y = 10\n    return\n}\n\nfunc main() {\n    a, b := getValues()\n    fmt.Println(a, b)\n}",
      options: [
        "0 0",
        "5 10",
        "–û—à–∏–±–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏",
        "nil nil"
      ],
      correctAnswer: 1 // 5 10
    },
    {
      id: 10,
      question: "–ö–∞–∫ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ–¥–Ω–æ –∏–∑ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π —Ñ—É–Ω–∫—Ü–∏–∏?",
      options: [
        "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å null: a, null = func()",
        "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å _: a, _ = func()",
        "–ü—Ä–æ—Å—Ç–æ –Ω–µ —É–∫–∞–∑—ã–≤–∞—Ç—å: a = func()",
        "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å 0: a, 0 = func()"
      ],
      correctAnswer: 1 // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å _: a, _ = func()
    },
    {
      id: 11,
      question: "–ß—Ç–æ —Ç–∞–∫–æ–µ –∑–∞–º—ã–∫–∞–Ω–∏–µ (closure) –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π?",
      options: [
        "–§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–∫—Ä—ã–≤–∞–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö",
        "–§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º –≤–Ω–µ—à–Ω–µ–π —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ—Å–ª–µ –µ—ë –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è",
        "–§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–∑—ã–≤–∞–µ—Ç —Å–∞–º—É —Å–µ–±—è",
        "–§—É–Ω–∫—Ü–∏—è –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤"
      ],
      correctAnswer: 1 // –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º –≤–Ω–µ—à–Ω–µ–π —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ—Å–ª–µ –µ—ë –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    },
    {
      id: 12,
      question: "–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—ä—è–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é —Å –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–º–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏?",
      options: [
        "func calc() -> (sum int, diff int) { ... }",
        "func calc() (sum: int, diff: int) { ... }",
        "func calc() (sum int, diff int) { ... }",
        "func calc() returns sum int, diff int { ... }"
      ],
      correctAnswer: 2 // func calc() (sum int, diff int) { ... }
    },
    {
      id: 13,
      question: "–ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç, –µ—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è —Å –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–º–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –Ω–µ –∏–º–µ–µ—Ç return?",
      options: [
        "–í–µ—Ä–Ω—É—Ç—Å—è –Ω—É–ª–µ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è",
        "–û—à–∏–±–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏",
        "–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–∏—Å–Ω–µ—Ç",
        "–í–µ—Ä–Ω—ë—Ç—Å—è –ø–æ—Å–ª–µ–¥–Ω–µ–µ –ø—Ä–∏—Å–≤–æ–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ"
      ],
      correctAnswer: 0 // –í–µ—Ä–Ω—É—Ç—Å—è –Ω—É–ª–µ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (—Ç.–∫. –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Ç—Å—è –Ω—É–ª—è–º–∏)
    },
    {
      id: 14,
      question: "–ö–∞–∫–æ–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è —Ç–∏–ø–∞ —É –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –æ–¥–Ω–æ–≥–æ —Ç–∏–ø–∞?\n\nfunc add(a int, b int) int",
      options: [
        "func add(a b int) int",
        "func add(a, b int) int",
        "func add(int a, b) int",
        "func add(a:int, b:int) int"
      ],
      correctAnswer: 1 // func add(a, b int) int
    }
  ];

  // –°–æ—Å—Ç–æ—è–Ω–∏—è –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
  const [userAnswers, setUserAnswers] = useState(Array(quizData.length).fill(null));
  const [submitted, setSubmitted] = useState(false);
  const [score, setScore] = useState(0);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –æ—Ç–≤–µ—Ç–∞
  const handleAnswerSelect = (questionIndex, optionIndex) => {
    if (submitted) return; // –ë–ª–æ–∫–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
    const newAnswers = [...userAnswers];
    newAnswers[questionIndex] = optionIndex;
    setUserAnswers(newAnswers);
  };

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤
  const handleSubmit = () => {
    let newScore = 0;
    userAnswers.forEach((answer, index) => {
      if (answer === quizData[index].correctAnswer) {
        newScore++;
      }
    });
    setScore(newScore);
    setSubmitted(true);
  };

  // –°–±—Ä–æ—Å –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
  const handleReset = () => {
    setUserAnswers(Array(quizData.length).fill(null));
    setSubmitted(false);
    setScore(0);
  };

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, –≤—Å–µ –ª–∏ –≤–æ–ø—Ä–æ—Å—ã –æ—Ç–≤–µ—á–µ–Ω—ã
  const allAnswered = userAnswers.every(answer => answer !== null);

  return (
    <div className="space-y-6">
      <div className="bg-gradient-to-r from-green-900/30 to-teal-900/30 backdrop-blur-sm border border-green-700/30 rounded-2xl p-6 shadow-lg">
        <div className="flex items-start gap-4">
          <div className="bg-green-500/20 p-3 rounded-lg">
            <LoopIcon className="w-6 h-6 text-green-400" />
          </div>
          <div>
            <h1 className="text-2xl md:text-3xl font-bold text-white mb-2">üß† –í–∏–∫—Ç–æ—Ä–∏–Ω–∞: –§—É–Ω–∫—Ü–∏–∏ –≤ Go</h1>
            <p className="text-gray-300">
              –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è –ø–æ —Ç–µ–º–µ <span className="font-medium text-yellow-400">—Ñ—É–Ω–∫—Ü–∏–π –≤ Go</span>.
            </p>
            <p className="text-gray-400 text-sm mt-2">–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞.</p>
          </div>
        </div>
      </div>

      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        {quizData.map((q, questionIndex) => {
          const isSelected = userAnswers[questionIndex] !== null;
          const isCorrect = userAnswers[questionIndex] === q.correctAnswer;
          
          return (
            <div 
              key={q.id} 
              className={`mb-8 last:mb-0 p-4 rounded-lg ${
                submitted && isSelected && isCorrect 
                  ? 'bg-green-900/20 border border-green-700/30' 
                  : submitted && isSelected && !isCorrect 
                    ? 'bg-red-900/20 border border-red-700/30' 
                    : 'bg-gray-900/50'
              }`}
            >
              <h3 className="font-medium text-white mb-3 flex items-start gap-2">
                <span className="flex-shrink-0">{questionIndex + 1}.</span>
                <span>{q.question}</span>
              </h3>
              <div className="space-y-2">
                {q.options.map((option, optionIndex) => {
                  let optionStyle = "block w-full text-left p-3 rounded-lg transition-colors duration-200 ";
                  if (submitted) {
                    if (optionIndex === q.correctAnswer) {
                      optionStyle += "bg-green-700 text-white"; // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
                    } else if (optionIndex === userAnswers[questionIndex] && optionIndex !== q.correctAnswer) {
                      optionStyle += "bg-red-700 text-white"; // –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
                    } else {
                      optionStyle += "bg-gray-800 text-gray-400 cursor-not-allowed"; // –î—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
                    }
                  } else {
                    // –°—Ç–∏–ª–∏ –¥–æ –æ—Ç–ø—Ä–∞–≤–∫–∏
                    if (userAnswers[questionIndex] === optionIndex) {
                      optionStyle += "bg-blue-600 text-white"; // –í—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
                    } else {
                      optionStyle += "bg-gray-800 hover:bg-gray-700 text-gray-300"; // –ù–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–π
                    }
                  }

                  return (
                    <button
                      key={optionIndex}
                      onClick={() => handleAnswerSelect(questionIndex, optionIndex)}
                      className={optionStyle}
                      disabled={submitted} // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
                    >
                      <div className="flex items-center">
                        <span className="mr-2 font-mono flex-shrink-0">{String.fromCharCode(65 + optionIndex)}.</span>
                        <span>{option}</span>
                        {submitted && optionIndex === q.correctAnswer && (
                          <CheckCircle className="ml-auto w-5 h-5 text-green-400 flex-shrink-0" />
                        )}
                        {submitted && optionIndex === userAnswers[questionIndex] && optionIndex !== q.correctAnswer && (
                          <XCircle className="ml-auto w-5 h-5 text-red-400 flex-shrink-0" />
                        )}
                        {!submitted && userAnswers[questionIndex] === optionIndex && (
                          <span className="ml-auto w-5 h-5 rounded-full bg-blue-400 flex-shrink-0"></span>
                        )}
                      </div>
                    </button>
                  );
                })}
              </div>
              {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –æ—Ç–≤–µ—Ç–∞ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ */}
              {submitted && isSelected && (
                <div className={`mt-3 text-sm p-2 rounded flex items-start gap-2 ${isCorrect ? 'bg-green-900/30 text-green-300' : 'bg-red-900/30 text-red-300'}`}>
                  {isCorrect ? (
                    <>
                      <CheckCircle className="w-5 h-5 flex-shrink-0 mt-0.5" />
                      <span>–í–µ—Ä–Ω–æ!</span>
                    </>
                  ) : (
                    <>
                      <XCircle className="w-5 h-5 flex-shrink-0 mt-0.5" />
                      <span>–ù–µ–≤–µ—Ä–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {String.fromCharCode(65 + q.correctAnswer)}.</span>
                    </>
                  )}
                </div>
              )}
            </div>
          );
        })}

        {/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
        <div className="flex flex-wrap items-center justify-between gap-4 pt-4 mt-6 border-t border-gray-700">
          {!submitted ? (
            <button
              onClick={handleSubmit}
              disabled={!allAnswered}
              className={`px-6 py-3 rounded-lg font-medium flex items-center gap-2 transition-all duration-300 ${
                allAnswered
                  ? 'bg-gradient-to-r from-green-600 to-green-700 hover:from-green-700 hover:to-green-800 text-white shadow-lg hover:shadow-xl transform hover:scale-[1.02] cursor-pointer'
                  : 'bg-gray-700 text-gray-500 cursor-not-allowed'
              }`}
            >
              <CheckCircle className="w-5 h-5" />
              –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–≤–µ—Ç—ã
            </button>
          ) : (
            <div className="flex flex-wrap items-center gap-4">
              <div className="flex items-center gap-2 bg-gray-900 px-4 py-3 rounded-lg">
                <Award className="w-5 h-5 text-yellow-400 flex-shrink-0" />
                <span className="font-bold text-white">–†–µ–∑—É–ª—å—Ç–∞—Ç: </span>
                <span className="font-bold text-xl text-yellow-400">{score}</span>
                <span className="text-gray-400">/ {quizData.length}</span>
              </div>
              <button
                onClick={handleReset}
                className="px-6 py-3 bg-gray-700 hover:bg-gray-600 text-white rounded-lg font-medium flex items-center gap-2 transition-colors duration-200 whitespace-nowrap"
              >
                <RotateCcw className="w-5 h-5" />
                –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
              </button>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default Part2;