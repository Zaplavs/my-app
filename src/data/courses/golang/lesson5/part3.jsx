// src/data/courses/go/lesson5/part3.jsx
import React, { useState } from 'react';
import { Calculator, Divide, Percent, Hash, CheckCircle, Award } from 'lucide-react';

const Part3 = () => {
  // –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è –ø–æ —É—Ä–æ–∫—É
  const practicalTasks = [
    {
      id: 1,
      title: "–ë–∞–∑–æ–≤—ã–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏",
      description: "–°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É—é—â—É—é –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏.",
      steps: [
        "–°–æ–∑–¥–∞–π—Ç–µ –¥–≤–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–∏–ø–∞ int —Å –ª—é–±—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏",
        "–í—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–æ–∂–µ–Ω–∏–µ, –≤—ã—á–∏—Ç–∞–Ω–∏–µ, —É–º–Ω–æ–∂–µ–Ω–∏–µ –∏ –¥–µ–ª–µ–Ω–∏–µ —ç—Ç–∏—Ö —á–∏—Å–µ–ª",
        "–í—ã–≤–µ–¥–∏—Ç–µ –≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å –ø–æ–º–æ—â—å—é fmt.Println()",
        "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ç–µ –∂–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å —á–∏—Å–ª–∞–º–∏ —Ç–∏–ø–∞ float64"
      ],
      verification: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏ –≤—ã–≤–æ–¥—è—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ",
      expectedOutput: "–í—Å–µ —á–µ—Ç—ã—Ä–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç —Å —Ü–µ–ª—ã–º–∏ –∏ –¥—Ä–æ–±–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏",
      difficulty: "Ïâ¨Ïö¥"
    },
    {
      id: 2,
      title: "–†–∞–±–æ—Ç–∞ —Å –æ—Å—Ç–∞—Ç–∫–æ–º –æ—Ç –¥–µ–ª–µ–Ω–∏—è",
      description: "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä % –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á.",
      steps: [
        "–°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —á–∏—Å–ª–æ —á–µ—Ç–Ω—ã–º",
        "–°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∫—Ä–∞—Ç–Ω–æ—Å—Ç—å —á–∏—Å–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–µ–ª–∏—Ç—Å—è –ª–∏ –Ω–∞ 3, 5, 7)",
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ—Å—Ç–∞—Ç–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ —Ç–æ–≤–∞—Ä–æ–≤"
      ],
      verification: "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —á–∏—Å–µ–ª",
      expectedOutput: "–ü—Ä–æ–≥—Ä–∞–º–º—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç —á–µ—Ç–Ω–æ—Å—Ç—å –∏ –∫—Ä–∞—Ç–Ω–æ—Å—Ç—å —á–∏—Å–µ–ª",
      difficulty: "Ïâ¨Ïö¥"
    },
    {
      id: 3,
      title: "–£–Ω–∞—Ä–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏",
      description: "–ü–æ–ø—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ—Å—å –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ —É–Ω–∞—Ä–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π + –∏ -.",
      steps: [
        "–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º",
        "–ü—Ä–∏–º–µ–Ω–∏—Ç–µ –∫ –Ω–µ–π —É–Ω–∞—Ä–Ω—ã–π –ø–ª—é—Å –∏ –≤—ã–≤–µ–¥–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç",
        "–ü—Ä–∏–º–µ–Ω–∏—Ç–µ –∫ –Ω–µ–π —É–Ω–∞—Ä–Ω—ã–π –º–∏–Ω—É—Å –∏ –≤—ã–≤–µ–¥–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç",
        "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–Ω–∞—Ä–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏"
      ],
      verification: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —É–Ω–∞—Ä–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ",
      expectedOutput: "–£–Ω–∞—Ä–Ω—ã–π –ø–ª—é—Å –Ω–µ –∏–∑–º–µ–Ω—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ, —É–Ω–∞—Ä–Ω—ã–π –º–∏–Ω—É—Å –º–µ–Ω—è–µ—Ç –∑–Ω–∞–∫",
      difficulty: "Ïâ¨Ïö¥"
    },
    {
      id: 4,
      title: "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏–π",
      description: "–ò–∑—É—á–∏—Ç–µ –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π.",
      steps: [
        "–°–æ–∑–¥–∞–π—Ç–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –±–µ–∑ —Å–∫–æ–±–æ–∫ —Å —Ä–∞–∑–Ω—ã–º–∏ –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏",
        "–°–æ–∑–¥–∞–π—Ç–µ —Ç–µ –∂–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è —Å–æ —Å–∫–æ–±–∫–∞–º–∏, –º–µ–Ω—è—é—â–∏–º–∏ –ø–æ—Ä—è–¥–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è",
        "–°—Ä–∞–≤–Ω–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –æ–±—ä—è—Å–Ω–∏—Ç–µ —Ä–∞–∑–Ω–∏—Ü—É",
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ fmt.Printf() –¥–ª—è –≤—ã–≤–æ–¥–∞ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π"
      ],
      verification: "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ–Ω–∏–º–∞–µ—Ç–µ –ø–æ—Ä—è–¥–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π",
      expectedOutput: "–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏–π –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–∫–æ–±–æ–∫",
      difficulty: "Ï§ëÍ∞Ñ"
    },
    {
      id: 5,
      title: "–¶–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω–æ–µ vs –¥—Ä–æ–±–Ω–æ–µ –¥–µ–ª–µ–Ω–∏–µ",
      description: "–°—Ä–∞–≤–Ω–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–µ–ª–µ–Ω–∏—è —Ü–µ–ª—ã—Ö –∏ –¥—Ä–æ–±–Ω—ã—Ö —á–∏—Å–µ–ª.",
      steps: [
        "–í—ã–ø–æ–ª–Ω–∏—Ç–µ –¥–µ–ª–µ–Ω–∏–µ –¥–≤—É—Ö —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä, 10 / 3)",
        "–í—ã–ø–æ–ª–Ω–∏—Ç–µ –¥–µ–ª–µ–Ω–∏–µ –¥–≤—É—Ö —á–∏—Å–µ–ª —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π (10.0 / 3.0)",
        "–°—Ä–∞–≤–Ω–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –æ–±—ä—è—Å–Ω–∏—Ç–µ —Ä–∞–∑–Ω–∏—Ü—É",
        "–ü—Ä–µ–æ–±—Ä–∞–∑—É–π—Ç–µ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞ –≤ float64 –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –¥–µ–ª–µ–Ω–∏–µ"
      ],
      verification: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã–º –∏ –¥—Ä–æ–±–Ω—ã–º –¥–µ–ª–µ–Ω–∏–µ–º",
      expectedOutput: "–ü–æ–Ω–∏–º–∞–Ω–∏–µ —Ä–∞–∑–ª–∏—á–∏–π –º–µ–∂–¥—É —Ç–∏–ø–∞–º–∏ –¥–µ–ª–µ–Ω–∏—è",
      difficulty: "Ï§ëÍ∞Ñ"
    },
    {
      id: 6,
      title: "–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä",
      description: "–°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ—Å—Ç—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É-–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –≤—Å–µ—Ö –∏–∑—É—á–µ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π.",
      steps: [
        "–ó–∞–ø—Ä–æ—Å–∏—Ç–µ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–≤–∞ —á–∏—Å–ª–∞",
        "–í—ã–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å —ç—Ç–∏–º–∏ —á–∏—Å–ª–∞–º–∏",
        "–í—ã–≤–µ–¥–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –∫—Ä–∞—Å–∏–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ",
        "–î–æ–±–∞–≤—å—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É –¥–µ–ª–µ–Ω–∏—è –Ω–∞ –Ω–æ–ª—å",
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç–Ω—ã–µ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –¥–ª—è –≤—ã–≤–æ–¥–∞"
      ],
      verification: "–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å —Å–æ –≤—Å–µ–º–∏ –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏",
      expectedOutput: "–†–∞–±–æ—Ç–∞—é—â–∏–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫ –¥–µ–ª–µ–Ω–∏—è –Ω–∞ –Ω–æ–ª—å",
      difficulty: "Ï§ëÍ∞Ñ"
    }
  ];

  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π
  const [completedTasks, setCompletedTasks] = useState(new Set());
  const [showResults, setShowResults] = useState({});

  // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è
  const toggleTaskCompletion = (taskId) => {
    const newCompletedTasks = new Set(completedTasks);
    if (newCompletedTasks.has(taskId)) {
      newCompletedTasks.delete(taskId);
    } else {
      newCompletedTasks.add(taskId);
    }
    setCompletedTasks(newCompletedTasks);
  };

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è
  const saveResult = (taskId, result) => {
    setShowResults(prev => ({
      ...prev,
      [taskId]: result
    }));
  };

  return (
    <div className="space-y-6">
      <div className="bg-gradient-to-r from-blue-900/30 to-purple-900/30 backdrop-blur-sm border border-blue-700/30 rounded-2xl p-6 shadow-lg">
        <div className="flex items-start gap-4">
          <div className="bg-blue-500/20 p-3 rounded-lg">
            <Calculator className="w-6 h-6 text-blue-400" />
          </div>
          <div>
            <h1 className="text-2xl md:text-3xl font-bold text-white mb-2">üõ†Ô∏è –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è: –ê—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏</h1>
            <p className="text-gray-300">
              –ü—Ä–∏–º–µ–Ω–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∑–Ω–∞–Ω–∏—è –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏—è –ø–æ —Ä–∞–±–æ—Ç–µ —Å –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–º–∏ –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏ –≤ Go.
            </p>
            <p className="text-gray-400 text-sm mt-2">
              –û—Ç–º–µ—á–∞–π—Ç–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞.
            </p>
          </div>
        </div>
      </div>

      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <div className="mb-6 p-4 bg-gray-900/50 rounded-lg border border-gray-700">
          <h3 className="font-bold text-white mb-2 flex items-center gap-2">
            <Calculator className="w-5 h-5 text-green-400" />
            –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é:
          </h3>
          <ul className="list-disc pl-5 space-y-2 text-gray-300 text-sm">
            <li>–°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π Go —Ñ–∞–π–ª –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, task1.go)</li>
            <li>–í—ã–ø–æ–ª–Ω—è–π—Ç–µ –∑–∞–¥–∞–Ω–∏—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ, —Å–ª–µ–¥—É—è —É–∫–∞–∑–∞–Ω–Ω—ã–º —à–∞–≥–∞–º</li>
            <li>–ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ —á–µ–∫–±–æ–∫—Å, —á—Ç–æ–±—ã –æ—Ç–º–µ—Ç–∏—Ç—å –µ–≥–æ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ</li>
            <li>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã 'go run filename.go' –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º</li>
            <li>–û–±—Ä–∞—â–∞–π—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–π</li>
          </ul>
        </div>

        {practicalTasks.map((task) => (
          <div 
            key={task.id} 
            className={`mb-6 last:mb-0 p-5 rounded-xl border ${
              completedTasks.has(task.id) 
                ? 'border-green-700/50 bg-green-900/10' 
                : 'border-gray-700/50 bg-gray-900/50'
            }`}
          >
            <div className="flex items-start justify-between mb-4">
              <div className="flex items-start gap-3">
                <div className={`p-2 rounded-lg ${
                  task.difficulty === 'Ïâ¨Ïö¥' 
                    ? 'bg-green-500/20 text-green-400' 
                    : task.difficulty === 'Ï§ëÍ∞Ñ' 
                      ? 'bg-yellow-500/20 text-yellow-400'
                      : 'bg-red-500/20 text-red-400'
                }`}>
                  {task.difficulty === 'Ïâ¨Ïö¥' && <Calculator className="w-5 h-5" />}
                  {task.difficulty === 'Ï§ëÍ∞Ñ' && <Hash className="w-5 h-5" />}
                  {task.difficulty === 'Ïñ¥Î†§Ïö¥' && <Percent className="w-5 h-5" />}
                </div>
                <div>
                  <h3 className="font-bold text-white text-lg">{task.title}</h3>
                  <p className="text-gray-400 text-sm">{task.description}</p>
                </div>
              </div>
              <button
                onClick={() => toggleTaskCompletion(task.id)}
                className={`p-2 rounded-lg transition-colors ${
                  completedTasks.has(task.id)
                    ? 'bg-green-500/20 text-green-400 hover:bg-green-500/30'
                    : 'bg-gray-700 text-gray-400 hover:bg-gray-600'
                }`}
              >
                <CheckCircle className={`w-6 h-6 ${completedTasks.has(task.id) ? 'fill-current' : ''}`} />
              </button>
            </div>

            <div className="space-y-4">
              <div>
                <h4 className="font-medium text-white mb-2">–®–∞–≥–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:</h4>
                <ol className="list-decimal pl-5 space-y-2 text-gray-300">
                  {task.steps.map((step, index) => (
                    <li key={index} className="pl-2">{step}</li>
                  ))}
                </ol>
              </div>

              <div className="bg-gray-800/50 p-4 rounded-lg">
                <h4 className="font-medium text-white mb-2 flex items-center gap-2">
                  <Calculator className="w-4 h-4 text-purple-400" />
                  –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:
                </h4>
                <p className="text-gray-300 text-sm mb-3">{task.verification}</p>
                <div className="text-gray-400 text-xs">
                  <span className="font-medium">–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:</span> {task.expectedOutput}
                </div>
              </div>

              <div className="flex flex-wrap items-center justify-between gap-3 pt-3 border-t border-gray-700">
                <div className="text-sm">
                  <span className={`px-2 py-1 rounded ${
                    task.difficulty === 'Ïâ¨Ïö¥' 
                      ? 'bg-green-900/30 text-green-300' 
                      : task.difficulty === 'Ï§ëÍ∞Ñ' 
                        ? 'bg-yellow-900/30 text-yellow-300'
                        : 'bg-red-900/30 text-red-300'
                  }`}>
                    {task.difficulty === 'Ïâ¨Ïö¥' && 'Ïâ¨Ïö¥'}
                    {task.difficulty === 'Ï§ëÍ∞Ñ' && 'Ï§ëÍ∞Ñ'}
                    {task.difficulty === 'Ïñ¥Î†§Ïö¥' && 'Ïñ¥Î†§Ïö¥'}
                  </span>
                </div>
                <div className="text-sm text-gray-400">
                  –ó–∞–¥–∞–Ω–∏–µ {task.id} –∏–∑ {practicalTasks.length}
                </div>
              </div>
            </div>
          </div>
        ))}

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è */}
        <div className="mt-8 pt-6 border-t border-gray-700">
          <div className="bg-gray-900/50 p-4 rounded-lg">
            <h3 className="font-bold text-white mb-3 flex items-center gap-2">
              <Award className="w-5 h-5 text-yellow-400" />
              –ü—Ä–æ–≥—Ä–µ—Å—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
            </h3>
            <div className="flex items-center justify-between">
              <div className="flex-1">
                <div className="w-full bg-gray-700 rounded-full h-2.5">
                  <div 
                    className="bg-green-600 h-2.5 rounded-full transition-all duration-500" 
                    style={{ width: `${(completedTasks.size / practicalTasks.length) * 100}%` }}
                  ></div>
                </div>
                <div className="flex justify-between text-sm text-gray-400 mt-2">
                  <span>–í—ã–ø–æ–ª–Ω–µ–Ω–æ: {completedTasks.size}</span>
                  <span>–í—Å–µ–≥–æ: {practicalTasks.length}</span>
                </div>
              </div>
              <div className={`ml-4 px-3 py-1 rounded-lg font-bold ${
                completedTasks.size === practicalTasks.length
                  ? 'bg-green-900/30 text-green-300'
                  : 'bg-gray-700 text-gray-300'
              }`}>
                {Math.round((completedTasks.size / practicalTasks.length) * 100)}%
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Part3;