// src/data/courses/go/lesson4/part3.jsx
import React, { useState } from 'react';
import { Terminal, ArrowRight, ArrowLeft, Code, CheckCircle, Award } from 'lucide-react';

const Part3 = () => {
  // –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è –ø–æ —É—Ä–æ–∫—É
  const practicalTasks = [
    {
      id: 1,
      title: "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –≤—ã–≤–æ–¥–∞",
      description: "–ü–æ–ø—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ—Å—å –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –≤—ã–≤–æ–¥–∞ –∏–∑ –ø–∞–∫–µ—Ç–∞ fmt.",
      steps: [
        "–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤: —Å—Ç—Ä–æ–∫—É, —á–∏—Å–ª–æ, –±—É–ª–µ–≤–æ –∑–Ω–∞—á–µ–Ω–∏–µ",
        "–í—ã–≤–µ–¥–∏—Ç–µ –∏—Ö —Å –ø–æ–º–æ—â—å—é fmt.Print() –±–µ–∑ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏",
        "–í—ã–≤–µ–¥–∏—Ç–µ –∏—Ö —Å –ø–æ–º–æ—â—å—é fmt.Println() —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–æ–π",
        "–í—ã–≤–µ–¥–∏—Ç–µ –∏—Ö —Å –ø–æ–º–æ—â—å—é fmt.Printf() —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º"
      ],
      verification: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤—ã–≤–æ–¥ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤ –∫–∞–∂–¥–æ–º —Å–ª—É—á–∞–µ",
      expectedOutput: "–†–∞–∑–ª–∏—á–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –≤—ã–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ",
      difficulty: "Ïâ¨Ïö¥"
    },
    {
      id: 2,
      title: "–†–∞–±–æ—Ç–∞ —Å —Ñ–æ—Ä–º–∞—Ç–Ω—ã–º–∏ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞–º–∏",
      description: "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç–Ω—ã–µ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –¥–ª—è –≤—ã–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö.",
      steps: [
        "–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ, —Å—Ç—Ä–æ–∫—É, —á–∏—Å–ª–æ —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π",
        "–í—ã–≤–µ–¥–∏—Ç–µ –∏—Ö —Å –ø–æ–º–æ—â—å—é %v (–∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)",
        "–í—ã–≤–µ–¥–∏—Ç–µ —Ç–∏–ø—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å –ø–æ–º–æ—â—å—é %T",
        "–í—ã–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞ —Å –ø–æ–º–æ—â—å—é %d –∏ %f",
        "–í—ã–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É —Å –ø–æ–º–æ—â—å—é %s"
      ],
      verification: "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∫–∞–∂–¥—ã–π —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ",
      expectedOutput: "–í—Å–µ —Ñ–æ—Ä–º–∞—Ç–Ω—ã–µ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –≤—ã–≤–æ–¥—è—Ç –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ",
      difficulty: "Ïâ¨Ïö¥"
    },
    {
      id: 3,
      title: "–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–µ–ª —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π",
      description: "–ù–∞—É—á–∏—Ç–µ—Å—å —É–ø—Ä–∞–≤–ª—è—Ç—å —Ç–æ—á–Ω–æ—Å—Ç—å—é –≤—ã–≤–æ–¥–∞ —á–∏—Å–µ–ª —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π.",
      steps: [
        "–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Ç–∏–ø–∞ float64 —Å –∑–Ω–∞—á–µ–Ω–∏–µ–º 3.14159265359",
        "–í—ã–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ —Å –ø–æ–º–æ—â—å—é %f (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)",
        "–í—ã–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ —Å 2 –∑–Ω–∞–∫–∞–º–∏ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π —Å –ø–æ–º–æ—â—å—é %.2f",
        "–í—ã–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ —Å 4 –∑–Ω–∞–∫–∞–º–∏ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π —Å –ø–æ–º–æ—â—å—é %.4f"
      ],
      verification: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–∑–Ω—É—é —Ç–æ—á–Ω–æ—Å—Ç—å –≤—ã–≤–æ–¥–∞ —á–∏—Å–µ–ª",
      expectedOutput: "–ß–∏—Å–ª–∞ –≤—ã–≤–æ–¥—è—Ç—Å—è —Å —Ä–∞–∑–Ω–æ–π —Å—Ç–µ–ø–µ–Ω—å—é —Ç–æ—á–Ω–æ—Å—Ç–∏",
      difficulty: "Ï§ëÍ∞Ñ"
    },
    {
      id: 4,
      title: "–ü—Ä–æ—Å—Ç–æ–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö",
      description: "–ü–æ–ø—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ—Å—å –≤ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.",
      steps: [
        "–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Ç–∏–ø–∞ string –¥–ª—è –∏–º–µ–Ω–∏",
        "–ó–∞–ø—Ä–æ—Å–∏—Ç–µ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–º—è —Å –ø–æ–º–æ—â—å—é fmt.Print()",
        "–°—á–∏—Ç–∞–π—Ç–µ –∏–º—è —Å –ø–æ–º–æ—â—å—é fmt.Scan()",
        "–í—ã–≤–µ–¥–∏—Ç–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å –≤–≤–µ–¥–µ–Ω–Ω—ã–º –∏–º–µ–Ω–µ–º"
      ],
      verification: "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–≤–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –≤—ã–≤–æ–¥–∏—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ",
      expectedOutput: "–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∏–º—è –∏ –≤—ã–≤–æ–¥–∏—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ",
      difficulty: "Ïâ¨Ïö¥"
    },
    {
      id: 5,
      title: "–í–≤–æ–¥ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π",
      description: "–ù–∞—É—á–∏—Ç–µ—Å—å –≤–≤–æ–¥–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏–π –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ.",
      steps: [
        "–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∏–º–µ–Ω–∏ (string) –∏ –≤–æ–∑—Ä–∞—Å—Ç–∞ (int)",
        "–ó–∞–ø—Ä–æ—Å–∏—Ç–µ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–º—è –∏ –≤–æ–∑—Ä–∞—Å—Ç",
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ fmt.Scanf() —Å —Ñ–æ—Ä–º–∞—Ç–æ–º '%s %d' –¥–ª—è –≤–≤–æ–¥–∞ –æ–±–æ–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π",
        "–í—ã–≤–µ–¥–∏—Ç–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –ø–æ–º–æ—â—å—é fmt.Printf()"
      ],
      verification: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –æ–±–∞ –∑–Ω–∞—á–µ–Ω–∏—è –≤–≤–æ–¥—è—Ç—Å—è –∏ –≤—ã–≤–æ–¥—è—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ",
      expectedOutput: "–ò–º—è –∏ –≤–æ–∑—Ä–∞—Å—Ç –≤–≤–æ–¥—è—Ç—Å—è –∏ –≤—ã–≤–æ–¥—è—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ",
      difficulty: "Ï§ëÍ∞Ñ"
    },
    {
      id: 6,
      title: "–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–π –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã",
      description: "–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–µ—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.",
      steps: [
        "–ó–∞–ø—Ä–æ—Å–∏—Ç–µ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ–≥–æ –∏–º—è, –ª—é–±–∏–º–æ–µ —á–∏—Å–ª–æ –∏ —Ä–æ—Å—Ç",
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–≤–æ–¥–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö",
        "–í—ã–≤–µ–¥–∏—Ç–µ –≤—Å—é —Å–æ–±—Ä–∞–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∫—Ä–∞—Å–∏–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ",
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç–Ω—ã–µ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –¥–ª—è –≤—ã–≤–æ–¥–∞"
      ],
      verification: "–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å –∏ –≤—ã–≤–æ–¥–∏—Ç—å –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é",
      expectedOutput: "–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Å –≤–≤–æ–¥–æ–º –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –≤—ã–≤–æ–¥–æ–º",
      difficulty: "Ï§ëÍ∞Ñ"
    }
  ];

  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π
  const [completedTasks, setCompletedTasks] = useState(new Set());
  const [showResults, setShowResults] = useState({});

  // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è
  const toggleTaskCompletion = (taskId) => {
    const newCompletedTasks = new Set(completedTasks);
    if (newCompletedTasks.has(taskId)) {
      newCompletedTasks.delete(taskId);
    } else {
      newCompletedTasks.add(taskId);
    }
    setCompletedTasks(newCompletedTasks);
  };

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è
  const saveResult = (taskId, result) => {
    setShowResults(prev => ({
      ...prev,
      [taskId]: result
    }));
  };

  return (
    <div className="space-y-6">
      <div className="bg-gradient-to-r from-blue-900/30 to-purple-900/30 backdrop-blur-sm border border-blue-700/30 rounded-2xl p-6 shadow-lg">
        <div className="flex items-start gap-4">
          <div className="bg-blue-500/20 p-3 rounded-lg">
            <Terminal className="w-6 h-6 text-blue-400" />
          </div>
          <div>
            <h1 className="text-2xl md:text-3xl font-bold text-white mb-2">üõ†Ô∏è –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è: –í–≤–æ–¥ –∏ –≤—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö</h1>
            <p className="text-gray-300">
              –ü—Ä–∏–º–µ–Ω–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∑–Ω–∞–Ω–∏—è –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏—è –ø–æ —Ä–∞–±–æ—Ç–µ —Å –≤–≤–æ–¥–æ–º –∏ –≤—ã–≤–æ–¥–æ–º –¥–∞–Ω–Ω—ã—Ö –≤ Go.
            </p>
            <p className="text-gray-400 text-sm mt-2">
              –û—Ç–º–µ—á–∞–π—Ç–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞.
            </p>
          </div>
        </div>
      </div>

      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <div className="mb-6 p-4 bg-gray-900/50 rounded-lg border border-gray-700">
          <h3 className="font-bold text-white mb-2 flex items-center gap-2">
            <Code className="w-5 h-5 text-green-400" />
            –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é:
          </h3>
          <ul className="list-disc pl-5 space-y-2 text-gray-300 text-sm">
            <li>–°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π Go —Ñ–∞–π–ª –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, task1.go)</li>
            <li>–í—ã–ø–æ–ª–Ω—è–π—Ç–µ –∑–∞–¥–∞–Ω–∏—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ, —Å–ª–µ–¥—É—è —É–∫–∞–∑–∞–Ω–Ω—ã–º —à–∞–≥–∞–º</li>
            <li>–ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ —á–µ–∫–±–æ–∫—Å, —á—Ç–æ–±—ã –æ—Ç–º–µ—Ç–∏—Ç—å –µ–≥–æ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ</li>
            <li>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã 'go run filename.go' –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º</li>
            <li>–ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ —Å—Ç–∞–≤–∏—Ç—å —Å–∏–º–≤–æ–ª & –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –≤ —Ñ—É–Ω–∫—Ü–∏—è—Ö –≤–≤–æ–¥–∞!</li>
          </ul>
        </div>

        {practicalTasks.map((task) => (
          <div 
            key={task.id} 
            className={`mb-6 last:mb-0 p-5 rounded-xl border ${
              completedTasks.has(task.id) 
                ? 'border-green-700/50 bg-green-900/10' 
                : 'border-gray-700/50 bg-gray-900/50'
            }`}
          >
            <div className="flex items-start justify-between mb-4">
              <div className="flex items-start gap-3">
                <div className={`p-2 rounded-lg ${
                  task.difficulty === 'Ïâ¨Ïö¥' 
                    ? 'bg-green-500/20 text-green-400' 
                    : task.difficulty === 'Ï§ëÍ∞Ñ' 
                      ? 'bg-yellow-500/20 text-yellow-400'
                      : 'bg-red-500/20 text-red-400'
                }`}>
                  {task.difficulty === 'Ïâ¨Ïö¥' && <ArrowRight className="w-5 h-5" />}
                  {task.difficulty === 'Ï§ëÍ∞Ñ' && <ArrowLeft className="w-5 h-5" />}
                  {task.difficulty === 'Ïñ¥Î†§Ïö¥' && <Terminal className="w-5 h-5" />}
                </div>
                <div>
                  <h3 className="font-bold text-white text-lg">{task.title}</h3>
                  <p className="text-gray-400 text-sm">{task.description}</p>
                </div>
              </div>
              <button
                onClick={() => toggleTaskCompletion(task.id)}
                className={`p-2 rounded-lg transition-colors ${
                  completedTasks.has(task.id)
                    ? 'bg-green-500/20 text-green-400 hover:bg-green-500/30'
                    : 'bg-gray-700 text-gray-400 hover:bg-gray-600'
                }`}
              >
                <CheckCircle className={`w-6 h-6 ${completedTasks.has(task.id) ? 'fill-current' : ''}`} />
              </button>
            </div>

            <div className="space-y-4">
              <div>
                <h4 className="font-medium text-white mb-2">–®–∞–≥–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:</h4>
                <ol className="list-decimal pl-5 space-y-2 text-gray-300">
                  {task.steps.map((step, index) => (
                    <li key={index} className="pl-2">{step}</li>
                  ))}
                </ol>
              </div>

              <div className="bg-gray-800/50 p-4 rounded-lg">
                <h4 className="font-medium text-white mb-2 flex items-center gap-2">
                  <Terminal className="w-4 h-4 text-purple-400" />
                  –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:
                </h4>
                <p className="text-gray-300 text-sm mb-3">{task.verification}</p>
                <div className="text-gray-400 text-xs">
                  <span className="font-medium">–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:</span> {task.expectedOutput}
                </div>
              </div>

              <div className="flex flex-wrap items-center justify-between gap-3 pt-3 border-t border-gray-700">
                <div className="text-sm">
                  <span className={`px-2 py-1 rounded ${
                    task.difficulty === 'Ïâ¨Ïö¥' 
                      ? 'bg-green-900/30 text-green-300' 
                      : task.difficulty === 'Ï§ëÍ∞Ñ' 
                        ? 'bg-yellow-900/30 text-yellow-300'
                        : 'bg-red-900/30 text-red-300'
                  }`}>
                    {task.difficulty === 'Ïâ¨Ïö¥' && 'Ïâ¨Ïö¥'}
                    {task.difficulty === 'Ï§ëÍ∞Ñ' && 'Ï§ëÍ∞Ñ'}
                    {task.difficulty === 'Ïñ¥Î†§Ïö¥' && 'Ïñ¥Î†§Ïö¥'}
                  </span>
                </div>
                <div className="text-sm text-gray-400">
                  –ó–∞–¥–∞–Ω–∏–µ {task.id} –∏–∑ {practicalTasks.length}
                </div>
              </div>
            </div>
          </div>
        ))}

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è */}
        <div className="mt-8 pt-6 border-t border-gray-700">
          <div className="bg-gray-900/50 p-4 rounded-lg">
            <h3 className="font-bold text-white mb-3 flex items-center gap-2">
              <Award className="w-5 h-5 text-yellow-400" />
              –ü—Ä–æ–≥—Ä–µ—Å—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
            </h3>
            <div className="flex items-center justify-between">
              <div className="flex-1">
                <div className="w-full bg-gray-700 rounded-full h-2.5">
                  <div 
                    className="bg-green-600 h-2.5 rounded-full transition-all duration-500" 
                    style={{ width: `${(completedTasks.size / practicalTasks.length) * 100}%` }}
                  ></div>
                </div>
                <div className="flex justify-between text-sm text-gray-400 mt-2">
                  <span>–í—ã–ø–æ–ª–Ω–µ–Ω–æ: {completedTasks.size}</span>
                  <span>–í—Å–µ–≥–æ: {practicalTasks.length}</span>
                </div>
              </div>
              <div className={`ml-4 px-3 py-1 rounded-lg font-bold ${
                completedTasks.size === practicalTasks.length
                  ? 'bg-green-900/30 text-green-300'
                  : 'bg-gray-700 text-gray-300'
              }`}>
                {Math.round((completedTasks.size / practicalTasks.length) * 100)}%
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Part3;