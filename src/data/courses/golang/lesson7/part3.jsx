import React, { useState } from 'react';
import { Calculator, Check, X, Hash, CheckCircle, Award, Code, HelpCircle } from 'lucide-react';

const Part3 = () => {
  // –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è –ø–æ —É—Ä–æ–∫—É
  const practicalTasks = [
    {
      id: 1,
      title: "–ü—Ä–æ—Å—Ç–æ–µ —É—Å–ª–æ–≤–∏–µ if",
      description: "–ù–∞—É—á–∏—Ç–µ—Å—å –ø–∏—Å–∞—Ç—å –±–∞–∑–æ–≤—ã–µ —É—Å–ª–æ–≤–∏—è –±–µ–∑ else.",
      steps: [
        "–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é age —Å –ª—é–±—ã–º —á–∏—Å–ª–æ–º",
        "–ù–∞–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏–µ if, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç: age >= 18",
        "–í–Ω—É—Ç—Ä–∏ if –≤—ã–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: \"–î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à—ë–Ω\"",
        "–ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É —Å —Ä–∞–∑–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ age"
      ],
      verification: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—ã–≤–æ–¥–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ age >= 18",
      expectedOutput: "–ü—Ä–∏ age=20 ‚Üí –≤—ã–≤–æ–¥–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü—Ä–∏ age=15 ‚Üí –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–≤–æ–¥–∏—Ç—Å—è",
      difficulty: "Ïâ¨Ïö¥"
    },
    {
      id: 2,
      title: "if + else ‚Äî –¥–≤–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞",
      description: "–ù–∞—É—á–∏—Ç–µ—Å—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å else –¥–ª—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è.",
      steps: [
        "–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é temperature (—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞)",
        "–ï—Å–ª–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤—ã—à–µ 25 ‚Äî –≤—ã–≤–µ–¥–∏—Ç–µ \"–ñ–∞—Ä–∫–æ!\"",
        "–ò–Ω–∞—á–µ ‚Äî –≤—ã–≤–µ–¥–∏—Ç–µ \"–ü—Ä–æ—Ö–ª–∞–¥–Ω–æ\"",
        "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É —Å —Ä–∞–∑–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏: 30, 20, 25"
      ],
      verification: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –ø—Ä–∏ 25 –∏ –Ω–∏–∂–µ –≤—ã–≤–æ–¥–∏—Ç—Å—è \"–ü—Ä–æ—Ö–ª–∞–¥–Ω–æ\", –ø—Ä–∏ 26 –∏ –≤—ã—à–µ ‚Äî \"–ñ–∞—Ä–∫–æ!\"",
      expectedOutput: "temperature=30 ‚Üí \"–ñ–∞—Ä–∫–æ!\"; temperature=20 ‚Üí \"–ü—Ä–æ—Ö–ª–∞–¥–Ω–æ\"",
      difficulty: "Ïâ¨Ïö¥"
    },
    {
      id: 3,
      title: "else if ‚Äî –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –≤—ã–±–æ—Ä",
      description: "–û—Å–≤–æ–π—Ç–µ —Ü–µ–ø–æ—á–∫—É —É—Å–ª–æ–≤–∏–π —Å else if.",
      steps: [
        "–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é score (–æ—Ü–µ–Ω–∫–∞ –æ—Ç 0 –¥–æ 100)",
        "–ï—Å–ª–∏ score >= 90 ‚Üí –≤—ã–≤–µ–¥–∏—Ç–µ \"–û—Ç–ª–∏—á–Ω–æ\"",
        "–ò–Ω–∞—á–µ –µ—Å–ª–∏ score >= 75 ‚Üí –≤—ã–≤–µ–¥–∏—Ç–µ \"–•–æ—Ä–æ—à–æ\"",
        "–ò–Ω–∞—á–µ –µ—Å–ª–∏ score >= 50 ‚Üí –≤—ã–≤–µ–¥–∏—Ç–µ \"–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ\"",
        "–ò–Ω–∞—á–µ ‚Üí –≤—ã–≤–µ–¥–∏—Ç–µ \"–ù–µ—É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ\"",
        "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏: 95, 80, 60, 40"
      ],
      verification: "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–æ–µ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ —É—Å–ª–æ–≤–∏–µ",
      expectedOutput: "95 ‚Üí –û—Ç–ª–∏—á–Ω–æ, 80 ‚Üí –•–æ—Ä–æ—à–æ, 60 ‚Üí –£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ, 40 ‚Üí –ù–µ—É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ",
      difficulty: "Ï§ëÍ∞Ñ"
    },
    {
      id: 4,
      title: "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –≤ —É—Å–ª–æ–≤–∏–∏ ‚Äî —Ñ–∏—à–∫–∞ Go!",
      description: "–ü—Ä–∞–∫—Ç–∏–∫–∞ —Å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –ø—Ä—è–º–æ –≤ if.",
      steps: [
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å: if x := –∑–Ω–∞—á–µ–Ω–∏–µ; —É—Å–ª–æ–≤–∏–µ { ... }",
        "–û–±—ä—è–≤–∏—Ç–µ —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ: if num := rand.Intn(10); num > 5 { ... }",
        "–í –±–ª–æ–∫–µ if –≤—ã–≤–µ–¥–∏—Ç–µ: \"–ß–∏—Å–ª–æ num –±–æ–ª—å—à–µ 5\"",
        "–í –±–ª–æ–∫–µ else –≤—ã–≤–µ–¥–∏—Ç–µ: \"–ß–∏—Å–ª–æ num –Ω–µ –±–æ–ª—å—à–µ 5\"",
        "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å num –ø–æ—Å–ª–µ if ‚Äî —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ"
      ],
      verification: "–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è num –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ if –∏ else, –Ω–æ –Ω–µ —Å–Ω–∞—Ä—É–∂–∏",
      expectedOutput: "–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∫–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç—Å—è –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç. –ü–æ–ø—ã—Ç–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å num —Å–Ω–∞—Ä—É–∂–∏ ‚Äî –æ—à–∏–±–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏",
      difficulty: "Ï§ëÍ∞Ñ"
    },
    {
      id: 5,
      title: "–õ–æ–≥–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã –≤ —É—Å–ª–æ–≤–∏—è—Ö (&&, ||, !)",
      description: "–ö–æ–º–±–∏–Ω–∏—Ä—É–π—Ç–µ —É—Å–ª–æ–≤–∏—è —Å –ª–æ–≥–∏—á–µ—Å–∫–∏–º–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞–º–∏.",
      steps: [
        "–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: age, hasTicket, isVIP",
        "–î–æ–ø—É—Å–∫ –Ω–∞ –∫–æ–Ω—Ü–µ—Ä—Ç: age >= 16 –ò hasTicket == true",
        "–ò–ª–∏: isVIP == true (–¥–∞–∂–µ –±–µ–∑ –±–∏–ª–µ—Ç–∞ –∏ –≤–æ–∑—Ä–∞—Å—Ç–∞)",
        "–ù–∞–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏–µ: if (age >= 16 && hasTicket) || isVIP { ... }",
        "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Å–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏: (18, true, false), (15, false, true), (15, false, false)"
      ],
      verification: "–ü—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –¥–æ–ø—É—Å–∫ –≤–æ –≤—Å–µ—Ö —Å–ª—É—á–∞—è—Ö?",
      expectedOutput: "(18,true,false) ‚Üí –¥–æ–ø—É—Å–∫; (15,false,true) ‚Üí –¥–æ–ø—É—Å–∫; (15,false,false) ‚Üí –æ—Ç–∫–∞–∑",
      difficulty: "Ï§ëÍ∞Ñ"
    },
    {
      id: 6,
      title: "–í–ª–æ–∂–µ–Ω–Ω—ã–µ —É—Å–ª–æ–≤–∏—è",
      description: "–û—Å–≤–æ–π—Ç–µ if –≤–Ω—É—Ç—Ä–∏ if ‚Äî –≤–ª–æ–∂–µ–Ω–Ω—É—é –ª–æ–≥–∏–∫—É.",
      steps: [
        "–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: isLoggedIn, hasPermission, isAdmin",
        "–°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ: if isLoggedIn { ... }",
        "–í–Ω—É—Ç—Ä–∏: if hasPermission { ... }",
        "–í–Ω—É—Ç—Ä–∏ –≤—Ç–æ—Ä–æ–≥–æ if: if isAdmin { –≤—ã–≤–µ–¥–∏—Ç–µ \"–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø\" } else { –≤—ã–≤–µ–¥–∏—Ç–µ \"–û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø\" }",
        "–ï—Å–ª–∏ –Ω–µ hasPermission ‚Äî –≤—ã–≤–µ–¥–∏—Ç–µ \"–ù–µ—Ç –ø—Ä–∞–≤\"",
        "–ï—Å–ª–∏ –Ω–µ isLoggedIn ‚Äî –≤—ã–≤–µ–¥–∏—Ç–µ \"–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω\"",
        "–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤—Å–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏"
      ],
      verification: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—ã–≤–æ–¥—è—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—Å–µ—Ö —É—Å–ª–æ–≤–∏–π",
      expectedOutput: "isLoggedIn=true, hasPermission=true, isAdmin=false ‚Üí \"–û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø\"",
      difficulty: "Ïñ¥Î†§Ïö¥"
    },
    {
      id: 7,
      title: "–û–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –≤ —É—Å–ª–æ–≤–∏—è—Ö",
      description: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –≥–¥–µ –¥–æ—Å—Ç—É–ø–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –æ–±—ä—è–≤–ª–µ–Ω–Ω—ã–µ –≤ if/else.",
      steps: [
        "–û–±—ä—è–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é x := 10 –¥–æ if",
        "–í–Ω—É—Ç—Ä–∏ if y := 20; x + y > 25 { ... } –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ y",
        "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ y –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã–≤–∞—é—â–µ–π —Å–∫–æ–±–∫–∏ if ‚Äî –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ",
        "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ x ‚Äî –¥–æ–ª–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å",
        "–û–±—ä—è—Å–Ω–∏—Ç–µ, –ø–æ—á–µ–º—É —Ç–∞–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç"
      ],
      verification: "–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞—Ç—å—Å—è, –µ—Å–ª–∏ y –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ if. –ü—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å y —Å–Ω–∞—Ä—É–∂–∏ ‚Äî –æ—à–∏–±–∫–∞.",
      expectedOutput: "–ö–æ–º–ø–∏–ª—è—Ç–æ—Ä –≤—ã–¥–∞—ë—Ç –æ—à–∏–±–∫—É: undefined: y ‚Äî –µ—Å–ª–∏ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å y –≤–Ω–µ –±–ª–æ–∫–∞",
      difficulty: "Ï§ëÍ∞Ñ"
    },
    {
      id: 8,
      title: "–ò—Ç–æ–≥–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç: –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã",
      description: "–°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø–æ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º.",
      steps: [
        "–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: cpuLoad (0-100), memoryFree (–≤ MB), diskSpace (–≤ GB), isOnline (bool)",
        "–ï—Å–ª–∏ —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –æ–Ω–ª–∞–π–Ω (isOnline == false) ‚Üí \"–°–∏—Å—Ç–µ–º–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞\"",
        "–ò–Ω–∞—á–µ, –µ—Å–ª–∏ cpuLoad > 90 –ò–õ–ò memoryFree < 100 –ò–õ–ò diskSpace < 5 ‚Üí \"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞!\"",
        "–ò–Ω–∞—á–µ, –µ—Å–ª–∏ cpuLoad > 70 –ò–õ–ò memoryFree < 500 ‚Üí \"–í—ã—Å–æ–∫–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞\"",
        "–ò–Ω–∞—á–µ ‚Üí \"–°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ\"",
        "–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤—Å–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏"
      ],
      verification: "–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ —É—Å–ª–æ–≤–∏–π",
      expectedOutput: "cpuLoad=95, memoryFree=200, diskSpace=10, isOnline=true ‚Üí \"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞!\"",
      difficulty: "Ïñ¥Î†§Ïö¥"
    }
  ];

  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π
  const [completedTasks, setCompletedTasks] = useState(new Set());
  const [showResults, setShowResults] = useState({});

  // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è
  const toggleTaskCompletion = (taskId) => {
    const newCompletedTasks = new Set(completedTasks);
    if (newCompletedTasks.has(taskId)) {
      newCompletedTasks.delete(taskId);
    } else {
      newCompletedTasks.add(taskId);
    }
    setCompletedTasks(newCompletedTasks);
  };

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è
  const saveResult = (taskId, result) => {
    setShowResults(prev => ({
      ...prev,
      [taskId]: result
    }));
  };

  return (
    <div className="space-y-6">
      <div className="bg-gradient-to-r from-blue-900/30 to-purple-900/30 backdrop-blur-sm border border-blue-700/30 rounded-2xl p-6 shadow-lg">
        <div className="flex items-start gap-4">
          <div className="bg-blue-500/20 p-3 rounded-lg">
            <Code className="w-6 h-6 text-blue-400" />
          </div>
          <div>
            <h1 className="text-2xl md:text-3xl font-bold text-white mb-2">üõ†Ô∏è –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è: –£—Å–ª–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã if/else –≤ Go</h1>
            <p className="text-gray-300">
              –ü—Ä–∏–º–µ–Ω–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∑–Ω–∞–Ω–∏—è –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏—è –ø–æ —Ä–∞–±–æ—Ç–µ —Å —É—Å–ª–æ–≤–Ω—ã–º–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞–º–∏ –≤ Go.
            </p>
            <p className="text-gray-400 text-sm mt-2">
              –û—Ç–º–µ—á–∞–π—Ç–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞.
            </p>
          </div>
        </div>
      </div>

      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <div className="mb-6 p-4 bg-gray-900/50 rounded-lg border border-gray-700">
          <h3 className="font-bold text-white mb-2 flex items-center gap-2">
            <Code className="w-5 h-5 text-green-400" />
            –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é:
          </h3>
          <ul className="list-disc pl-5 space-y-2 text-gray-300 text-sm">
            <li>–°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π Go —Ñ–∞–π–ª –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, task1.go)</li>
            <li>–í—ã–ø–æ–ª–Ω—è–π—Ç–µ –∑–∞–¥–∞–Ω–∏—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ, —Å–ª–µ–¥—É—è —É–∫–∞–∑–∞–Ω–Ω—ã–º —à–∞–≥–∞–º</li>
            <li>–ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ —á–µ–∫–±–æ–∫—Å, —á—Ç–æ–±—ã –æ—Ç–º–µ—Ç–∏—Ç—å –µ–≥–æ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ</li>
            <li>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã 'go run filename.go' –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º</li>
            <li>–û–±—Ä–∞—â–∞–π—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å Go: –Ω–µ—Ç —Å–∫–æ–±–æ–∫ –≤–æ–∫—Ä—É–≥ —É—Å–ª–æ–≤–∏—è, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã —Ñ–∏–≥—É—Ä–Ω—ã–µ —Å–∫–æ–±–∫–∏</li>
          </ul>
        </div>

        {practicalTasks.map((task) => (
          <div 
            key={task.id} 
            className={`mb-6 last:mb-0 p-5 rounded-xl border ${
              completedTasks.has(task.id) 
                ? 'border-green-700/50 bg-green-900/10' 
                : 'border-gray-700/50 bg-gray-900/50'
            }`}
          >
            <div className="flex items-start justify-between mb-4">
              <div className="flex items-start gap-3">
                <div className={`p-2 rounded-lg ${
                  task.difficulty === 'Ïâ¨Ïö¥' 
                    ? 'bg-green-500/20 text-green-400' 
                    : task.difficulty === 'Ï§ëÍ∞Ñ' 
                      ? 'bg-yellow-500/20 text-yellow-400'
                      : 'bg-red-500/20 text-red-400'
                }`}>
                  {task.difficulty === 'Ïâ¨Ïö¥' && <Check className="w-5 h-5" />}
                  {task.difficulty === 'Ï§ëÍ∞Ñ' && <Hash className="w-5 h-5" />}
                  {task.difficulty === 'Ïñ¥Î†§Ïö¥' && <X className="w-5 h-5" />}
                </div>
                <div>
                  <h3 className="font-bold text-white text-lg">{task.title}</h3>
                  <p className="text-gray-400 text-sm">{task.description}</p>
                </div>
              </div>
              <button
                onClick={() => toggleTaskCompletion(task.id)}
                className={`p-2 rounded-lg transition-colors ${
                  completedTasks.has(task.id)
                    ? 'bg-green-500/20 text-green-400 hover:bg-green-500/30'
                    : 'bg-gray-700 text-gray-400 hover:bg-gray-600'
                }`}
              >
                <CheckCircle className={`w-6 h-6 ${completedTasks.has(task.id) ? 'fill-current' : ''}`} />
              </button>
            </div>

            <div className="space-y-4">
              <div>
                <h4 className="font-medium text-white mb-2">–®–∞–≥–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:</h4>
                <ol className="list-decimal pl-5 space-y-2 text-gray-300">
                  {task.steps.map((step, index) => (
                    <li key={index} className="pl-2">{step}</li>
                  ))}
                </ol>
              </div>

              <div className="bg-gray-800/50 p-4 rounded-lg">
                <h4 className="font-medium text-white mb-2 flex items-center gap-2">
                  <HelpCircle className="w-4 h-4 text-purple-400" />
                  –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:
                </h4>
                <p className="text-gray-300 text-sm mb-3">{task.verification}</p>
                <div className="text-gray-400 text-xs">
                  <span className="font-medium">–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:</span> {task.expectedOutput}
                </div>
              </div>

              <div className="flex flex-wrap items-center justify-between gap-3 pt-3 border-t border-gray-700">
                <div className="text-sm">
                  <span className={`px-2 py-1 rounded ${
                    task.difficulty === 'Ïâ¨Ïö¥' 
                      ? 'bg-green-900/30 text-green-300' 
                      : task.difficulty === 'Ï§ëÍ∞Ñ' 
                        ? 'bg-yellow-900/30 text-yellow-300'
                        : 'bg-red-900/30 text-red-300'
                  }`}>
                    {task.difficulty === 'Ïâ¨Ïö¥' && 'Ïâ¨Ïö¥'}
                    {task.difficulty === 'Ï§ëÍ∞Ñ' && 'Ï§ëÍ∞Ñ'}
                    {task.difficulty === 'Ïñ¥Î†§Ïö¥' && 'Ïñ¥Î†§Ïö¥'}
                  </span>
                </div>
                <div className="text-sm text-gray-400">
                  –ó–∞–¥–∞–Ω–∏–µ {task.id} –∏–∑ {practicalTasks.length}
                </div>
              </div>
            </div>
          </div>
        ))}

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è */}
        <div className="mt-8 pt-6 border-t border-gray-700">
          <div className="bg-gray-900/50 p-4 rounded-lg">
            <h3 className="font-bold text-white mb-3 flex items-center gap-2">
              <Award className="w-5 h-5 text-yellow-400" />
              –ü—Ä–æ–≥—Ä–µ—Å—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
            </h3>
            <div className="flex items-center justify-between">
              <div className="flex-1">
                <div className="w-full bg-gray-700 rounded-full h-2.5">
                  <div 
                    className="bg-green-600 h-2.5 rounded-full transition-all duration-500" 
                    style={{ width: `${(completedTasks.size / practicalTasks.length) * 100}%` }}
                  ></div>
                </div>
                <div className="flex justify-between text-sm text-gray-400 mt-2">
                  <span>–í—ã–ø–æ–ª–Ω–µ–Ω–æ: {completedTasks.size}</span>
                  <span>–í—Å–µ–≥–æ: {practicalTasks.length}</span>
                </div>
              </div>
              <div className={`ml-4 px-3 py-1 rounded-lg font-bold ${
                completedTasks.size === practicalTasks.length
                  ? 'bg-green-900/30 text-green-300'
                  : 'bg-gray-700 text-gray-300'
              }`}>
                {Math.round((completedTasks.size / practicalTasks.length) * 100)}%
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Part3;