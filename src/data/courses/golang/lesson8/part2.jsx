import React, { useState } from 'react';
import { CheckCircle, XCircle, RotateCcw, Award, Code, HelpCircle, Hash, ArrowRight } from 'lucide-react';

const Part2 = () => {
  // –î–∞–Ω–Ω—ã–µ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã –ø–æ —Ç–µ–º–µ —É—Ä–æ–∫–∞
  const quizData = [
    {
      id: 1,
      question: "–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞—á–∞—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä switch –≤ Go?",
      options: [
        "switch (x) {",
        "switch x {",
        "switch [x] {",
        "switch x:"
      ],
      correctAnswer: 1 // switch x { ‚Äî –±–µ–∑ —Å–∫–æ–±–æ–∫!
    },
    {
      id: 2,
      question: "–ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç, –µ—Å–ª–∏ –Ω–∏ –æ–¥–∏–Ω case –Ω–µ —Å–æ–≤–ø–∞–ª –∏ –Ω–µ—Ç default?",
      options: [
        "–ü—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ—à–∏–±–∫–∞",
        "–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–µ—Ä–≤—ã–π case",
        "–ù–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç ‚Äî –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Ä–∞–±–æ—Ç—É",
        "–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–∏—Å–∞–µ—Ç"
      ],
      correctAnswer: 2 // –ù–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç
    },
    {
      id: 3,
      question: "–ö–∞–∫–æ–π –±–ª–æ–∫ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è, –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–æ–≤–ø–∞–ª–æ —Å case, –∏ –≤ –Ω—ë–º –µ—Å—Ç—å fallthrough?",
      options: [
        "–¢–æ–ª—å–∫–æ —Ç–µ–∫—É—â–∏–π case",
        "–¢–µ–∫—É—â–∏–π case –∏ —Å–ª–µ–¥—É—é—â–∏–π case (–¥–∞–∂–µ –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç!)",
        "–¢–µ–∫—É—â–∏–π case –∏ default",
        "–ü—Ä–æ–≥—Ä–∞–º–º–∞ –≤—ã–¥–∞—Å—Ç –æ—à–∏–±–∫—É"
      ],
      correctAnswer: 1 // –¢–µ–∫—É—â–∏–π + —Å–ª–µ–¥—É—é—â–∏–π case
    },
    {
      id: 4,
      question: "–ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å switch –±–µ–∑ –≤—ã—Ä–∞–∂–µ–Ω–∏—è?",
      options: [
        "–ù–µ—Ç, —ç—Ç–æ –æ—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞",
        "–î–∞, —Ç–æ–≥–¥–∞ –≤ case –ø–∏—à—É—Ç—Å—è —É—Å–ª–æ–≤–∏—è",
        "–¢–æ–ª—å–∫–æ –≤ —Ñ—É–Ω–∫—Ü–∏—è—Ö",
        "–¢–æ–ª—å–∫–æ —Å —á–∏—Å–ª–∞–º–∏"
      ],
      correctAnswer: 1 // –î–∞ ‚Äî —Ñ–∏—à–∫–∞ Go!
    },
    {
      id: 5,
      question: "–ì–¥–µ –º–æ–∂–Ω–æ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –±–ª–æ–∫ default?",
      options: [
        "–¢–æ–ª—å–∫–æ –≤ —Å–∞–º–æ–º –∫–æ–Ω—Ü–µ",
        "–¢–æ–ª—å–∫–æ –≤ –Ω–∞—á–∞–ª–µ",
        "–í –ª—é–±–æ–º –º–µ—Å—Ç–µ ‚Äî Go —Ä–∞–∑—Ä–µ—à–∞–µ—Ç",
        "–¢–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ case"
      ],
      correctAnswer: 2 // –í –ª—é–±–æ–º –º–µ—Å—Ç–µ
    },
    {
      id: 6,
      question: "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\nx := 2\nswitch x {\ncase 1:\n    fmt.Println(\"A\")\ncase 2:\n    fmt.Println(\"B\")\ndefault:\n    fmt.Println(\"C\")\n}",
      options: [
        "A",
        "B",
        "C",
        "A B C"
      ],
      correctAnswer: 1 // B
    },
    {
      id: 7,
      question: "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\nx := 5\nswitch {\ncase x < 3:\n    fmt.Println(\"–ú–∞–ª–æ\")\ncase x < 7:\n    fmt.Println(\"–°—Ä–µ–¥–Ω–µ\")\ndefault:\n    fmt.Println(\"–ú–Ω–æ–≥–æ\")\n}",
      options: [
        "–ú–∞–ª–æ",
        "–°—Ä–µ–¥–Ω–µ",
        "–ú–Ω–æ–≥–æ",
        "–ù–∏—á–µ–≥–æ"
      ],
      correctAnswer: 1 // –°—Ä–µ–¥–Ω–µ ‚Äî –ø–µ—Ä–≤—ã–π –ø–æ–¥—Ö–æ–¥—è—â–∏–π case
    },
    {
      id: 8,
      question: "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\nx := 1\nswitch x {\ncase 1:\n    fmt.Println(\"–û–¥–∏–Ω\")\n    fallthrough\ncase 2:\n    fmt.Println(\"–î–≤–∞\")\ndefault:\n    fmt.Println(\"–î—Ä—É–≥–æ–µ\")\n}",
      options: [
        "–û–¥–∏–Ω",
        "–û–¥–∏–Ω, –î–≤–∞",
        "–û–¥–∏–Ω, –î–≤–∞, –î—Ä—É–≥–æ–µ",
        "–û—à–∏–±–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏"
      ],
      correctAnswer: 1 // –û–¥–∏–Ω, –î–≤–∞ ‚Äî fallthrough –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ —Å–ª–µ–¥—É—é—â–µ–º—É case
    },
    {
      id: 9,
      question: "–ö–æ–≥–¥–∞ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å switch –≤–º–µ—Å—Ç–æ if/else?",
      options: [
        "–ö–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–ª–æ–∂–Ω–æ–µ –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ",
        "–ö–æ–≥–¥–∞ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –æ–¥–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏",
        "–ö–æ–≥–¥–∞ —É—Å–ª–æ–≤–∏–π –≤—Å–µ–≥–æ –¥–≤–∞",
        "–ö–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ü–∏–∫–ª—ã"
      ],
      correctAnswer: 1 // –ö–æ–≥–¥–∞ –æ–¥–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ vs –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
    },
    {
      id: 10,
      question: "–ú–æ–∂–Ω–æ –ª–∏ –≤ –æ–¥–Ω–æ–º case –ø–µ—Ä–µ—á–∏—Å–ª–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏–π?",
      options: [
        "–ù–µ—Ç, —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ",
        "–î–∞, —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é: case 1, 2, 3:",
        "–î–∞, —á–µ—Ä–µ–∑ ||: case 1 || 2 || 3:",
        "–î–∞, —á–µ—Ä–µ–∑ &&"
      ],
      correctAnswer: 1 // –î–∞, —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é
    },
    {
      id: 11,
      question: "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\nx := \"hi\"\nswitch x {\ncase \"hello\":\n    fmt.Println(\"–ü—Ä–∏–≤–µ—Ç\")\ncase \"hi\":\n    fmt.Println(\"–ü—Ä–∏–≤–µ—Ç–∏–∫\")\ndefault:\n    fmt.Println(\"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ\")\n}",
      options: [
        "–ü—Ä–∏–≤–µ—Ç",
        "–ü—Ä–∏–≤–µ—Ç–∏–∫",
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ",
        "–ù–∏—á–µ–≥–æ"
      ],
      correctAnswer: 1 // –ü—Ä–∏–≤–µ—Ç–∏–∫
    },
    {
      id: 12,
      question: "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç fallthrough?",
      options: [
        "–ü—Ä–µ—Ä—ã–≤–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ switch",
        "–ü–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ —Å–ª–µ–¥—É—é—â–µ–º—É case, –∏–≥–Ω–æ—Ä–∏—Ä—É—è –µ–≥–æ —É—Å–ª–æ–≤–∏–µ",
        "–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É case",
        "–í—ã–∑—ã–≤–∞–µ—Ç default"
      ],
      correctAnswer: 1 // –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ —Å–ª–µ–¥—É—é—â–µ–º—É case
    },
    {
      id: 13,
      question: "–ö–∞–∫–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –ù–ï –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ Go switch?",
      options: [
        "case —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é",
        "switch –±–µ–∑ –≤—ã—Ä–∞–∂–µ–Ω–∏—è",
        "case —Å –¥–∏–∞–ø–∞–∑–æ–Ω–∞–º–∏: case 1..5:",
        "fallthrough"
      ],
      correctAnswer: 2 // –î–∏–∞–ø–∞–∑–æ–Ω—ã ‚Äî –ù–ï –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è (–≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –¥—Ä—É–≥–∏—Ö —è–∑—ã–∫–æ–≤)
    },
    {
      id: 14,
      question: "–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?\n\nx := 10\nswitch x {\ndefault:\n    fmt.Println(\"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ\")\ncase 5:\n    fmt.Println(\"–ü—è—Ç—å\")\ncase 10:\n    fmt.Println(\"–î–µ—Å—è—Ç—å\")\n}",
      options: [
        "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
        "–ü—è—Ç—å",
        "–î–µ—Å—è—Ç—å",
        "–û—à–∏–±–∫–∞ ‚Äî default –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –∫–æ–Ω—Ü–µ"
      ],
      correctAnswer: 2 // –î–µ—Å—è—Ç—å ‚Äî default –º–æ–∂–µ—Ç –±—ã—Ç—å –≥–¥–µ —É–≥–æ–¥–Ω–æ, –Ω–æ case 10 —Å–æ–≤–ø–∞–ª –ø–µ—Ä–≤—ã–º!
    }
  ];

  // –°–æ—Å—Ç–æ—è–Ω–∏—è –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
  const [userAnswers, setUserAnswers] = useState(Array(quizData.length).fill(null));
  const [submitted, setSubmitted] = useState(false);
  const [score, setScore] = useState(0);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –æ—Ç–≤–µ—Ç–∞
  const handleAnswerSelect = (questionIndex, optionIndex) => {
    if (submitted) return; // –ë–ª–æ–∫–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
    const newAnswers = [...userAnswers];
    newAnswers[questionIndex] = optionIndex;
    setUserAnswers(newAnswers);
  };

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤
  const handleSubmit = () => {
    let newScore = 0;
    userAnswers.forEach((answer, index) => {
      if (answer === quizData[index].correctAnswer) {
        newScore++;
      }
    });
    setScore(newScore);
    setSubmitted(true);
  };

  // –°–±—Ä–æ—Å –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
  const handleReset = () => {
    setUserAnswers(Array(quizData.length).fill(null));
    setSubmitted(false);
    setScore(0);
  };

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, –≤—Å–µ –ª–∏ –≤–æ–ø—Ä–æ—Å—ã –æ—Ç–≤–µ—á–µ–Ω—ã
  const allAnswered = userAnswers.every(answer => answer !== null);

  return (
    <div className="space-y-6">
      <div className="bg-gradient-to-r from-purple-900/30 to-pink-900/30 backdrop-blur-sm border border-purple-700/30 rounded-2xl p-6 shadow-lg">
        <div className="flex items-start gap-4">
          <div className="bg-purple-500/20 p-3 rounded-lg">
            <Code className="w-6 h-6 text-purple-400" />
          </div>
          <div>
            <h1 className="text-2xl md:text-3xl font-bold text-white mb-2">üß† –í–∏–∫—Ç–æ—Ä–∏–Ω–∞: –û–ø–µ—Ä–∞—Ç–æ—Ä switch –≤ Go</h1>
            <p className="text-gray-300">
              –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è –ø–æ —Ç–µ–º–µ <span className="font-medium text-yellow-400">–æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ switch</span>.
            </p>
            <p className="text-gray-400 text-sm mt-2">–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞.</p>
          </div>
        </div>
      </div>

      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        {quizData.map((q, questionIndex) => {
          const isSelected = userAnswers[questionIndex] !== null;
          const isCorrect = userAnswers[questionIndex] === q.correctAnswer;
          
          return (
            <div 
              key={q.id} 
              className={`mb-8 last:mb-0 p-4 rounded-lg ${
                submitted && isSelected && isCorrect 
                  ? 'bg-green-900/20 border border-green-700/30' 
                  : submitted && isSelected && !isCorrect 
                    ? 'bg-red-900/20 border border-red-700/30' 
                    : 'bg-gray-900/50'
              }`}
            >
              <h3 className="font-medium text-white mb-3 flex items-start gap-2">
                <span className="flex-shrink-0">{questionIndex + 1}.</span>
                <span>{q.question}</span>
              </h3>
              <div className="space-y-2">
                {q.options.map((option, optionIndex) => {
                  let optionStyle = "block w-full text-left p-3 rounded-lg transition-colors duration-200 ";
                  if (submitted) {
                    if (optionIndex === q.correctAnswer) {
                      optionStyle += "bg-green-700 text-white"; // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
                    } else if (optionIndex === userAnswers[questionIndex] && optionIndex !== q.correctAnswer) {
                      optionStyle += "bg-red-700 text-white"; // –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
                    } else {
                      optionStyle += "bg-gray-800 text-gray-400 cursor-not-allowed"; // –î—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
                    }
                  } else {
                    // –°—Ç–∏–ª–∏ –¥–æ –æ—Ç–ø—Ä–∞–≤–∫–∏
                    if (userAnswers[questionIndex] === optionIndex) {
                      optionStyle += "bg-blue-600 text-white"; // –í—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
                    } else {
                      optionStyle += "bg-gray-800 hover:bg-gray-700 text-gray-300"; // –ù–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–π
                    }
                  }

                  return (
                    <button
                      key={optionIndex}
                      onClick={() => handleAnswerSelect(questionIndex, optionIndex)}
                      className={optionStyle}
                      disabled={submitted} // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
                    >
                      <div className="flex items-center">
                        <span className="mr-2 font-mono flex-shrink-0">{String.fromCharCode(65 + optionIndex)}.</span>
                        <span>{option}</span>
                        {submitted && optionIndex === q.correctAnswer && (
                          <CheckCircle className="ml-auto w-5 h-5 text-green-400 flex-shrink-0" />
                        )}
                        {submitted && optionIndex === userAnswers[questionIndex] && optionIndex !== q.correctAnswer && (
                          <XCircle className="ml-auto w-5 h-5 text-red-400 flex-shrink-0" />
                        )}
                        {!submitted && userAnswers[questionIndex] === optionIndex && (
                          <span className="ml-auto w-5 h-5 rounded-full bg-blue-400 flex-shrink-0"></span>
                        )}
                      </div>
                    </button>
                  );
                })}
              </div>
              {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –æ—Ç–≤–µ—Ç–∞ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ */}
              {submitted && isSelected && (
                <div className={`mt-3 text-sm p-2 rounded flex items-start gap-2 ${isCorrect ? 'bg-green-900/30 text-green-300' : 'bg-red-900/30 text-red-300'}`}>
                  {isCorrect ? (
                    <>
                      <CheckCircle className="w-5 h-5 flex-shrink-0 mt-0.5" />
                      <span>–í–µ—Ä–Ω–æ!</span>
                    </>
                  ) : (
                    <>
                      <XCircle className="w-5 h-5 flex-shrink-0 mt-0.5" />
                      <span>–ù–µ–≤–µ—Ä–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {String.fromCharCode(65 + q.correctAnswer)}.</span>
                    </>
                  )}
                </div>
              )}
            </div>
          );
        })}

        {/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
        <div className="flex flex-wrap items-center justify-between gap-4 pt-4 mt-6 border-t border-gray-700">
          {!submitted ? (
            <button
              onClick={handleSubmit}
              disabled={!allAnswered}
              className={`px-6 py-3 rounded-lg font-medium flex items-center gap-2 transition-all duration-300 ${
                allAnswered
                  ? 'bg-gradient-to-r from-green-600 to-green-700 hover:from-green-700 hover:to-green-800 text-white shadow-lg hover:shadow-xl transform hover:scale-[1.02] cursor-pointer'
                  : 'bg-gray-700 text-gray-500 cursor-not-allowed'
              }`}
            >
              <CheckCircle className="w-5 h-5" />
              –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–≤–µ—Ç—ã
            </button>
          ) : (
            <div className="flex flex-wrap items-center gap-4">
              <div className="flex items-center gap-2 bg-gray-900 px-4 py-3 rounded-lg">
                <Award className="w-5 h-5 text-yellow-400 flex-shrink-0" />
                <span className="font-bold text-white">–†–µ–∑—É–ª—å—Ç–∞—Ç: </span>
                <span className="font-bold text-xl text-yellow-400">{score}</span>
                <span className="text-gray-400">/ {quizData.length}</span>
              </div>
              <button
                onClick={handleReset}
                className="px-6 py-3 bg-gray-700 hover:bg-gray-600 text-white rounded-lg font-medium flex items-center gap-2 transition-colors duration-200 whitespace-nowrap"
              >
                <RotateCcw className="w-5 h-5" />
                –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
              </button>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default Part2;