// src/data/courses/go/lesson2/part3.jsx
import React, { useState } from 'react';
import { Play, Download, Terminal, Settings, Code, CheckCircle, XCircle, Award } from 'lucide-react';

const Part3 = () => {
  // –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è –ø–æ —É—Ä–æ–∫—É
  const practicalTasks = [
    {
      id: 1,
      title: "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Go",
      description: "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Go –Ω–∞ –≤–∞—à—É –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É —Å–æ–≥–ª–∞—Å–Ω–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏–∑ —É—Ä–æ–∫–∞.",
      steps: [
        "–ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç golang.org/dl/",
        "–°–∫–∞—á–∞–π—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â—É—é –≤–µ—Ä—Å–∏—é Go –¥–ª—è –≤–∞—à–µ–π –û–°",
        "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Go, —Å–ª–µ–¥—É—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞",
        "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª/–∫–æ–º–∞–Ω–¥–Ω—É—é —Å—Ç—Ä–æ–∫—É"
      ],
      verification: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É, –≤—ã–ø–æ–ª–Ω–∏–≤ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ –∫–æ–º–∞–Ω–¥—É: go version",
      expectedOutput: "go version go1.XX.X [–æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è_—Å–∏—Å—Ç–µ–º–∞]/[–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞]",
      difficulty: "Ïâ¨Ïö¥"
    },
    {
      id: 2,
      title: "–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è Go",
      description: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è Go –∏ –Ω–∞–π–¥–∏—Ç–µ –∫–ª—é—á–µ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ.",
      steps: [
        "–û—Ç–∫—Ä–æ–π—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª –∏–ª–∏ –∫–æ–º–∞–Ω–¥–Ω—É—é —Å—Ç—Ä–æ–∫—É",
        "–í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: go env",
        "–ù–∞–π–¥–∏—Ç–µ –≤ –≤—ã–≤–æ–¥–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ GOROOT –∏ GOPATH",
        "–ó–∞–ø–∏—à–∏—Ç–µ –∏—Ö –∑–Ω–∞—á–µ–Ω–∏—è"
      ],
      verification: "–ö–∞–∫–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–º–µ—é—Ç GOROOT –∏ GOPATH –Ω–∞ –≤–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ?",
      expectedOutput: "GOROOT: –ø—É—Ç—å –∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–º—É Go, GOPATH: —Ä–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è (–æ–±—ã—á–Ω–æ $HOME/go)",
      difficulty: "Ïâ¨Ïö¥"
    },
    {
      id: 3,
      title: "–°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã",
      description: "–°–æ–∑–¥–∞–π—Ç–µ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ—Å—Ç—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É 'Hello, World!' –∫–∞–∫ –ø–æ–∫–∞–∑–∞–Ω–æ –≤ —É—Ä–æ–∫–µ.",
      steps: [
        "–°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞: mkdir myfirstproject",
        "–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —ç—Ç—É –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: cd myfirstproject",
        "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ Go –º–æ–¥—É–ª—å: go mod init myfirstproject",
        "–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª main.go —Å –∫–æ–¥–æ–º –ø—Ä–æ–≥—Ä–∞–º–º—ã –∏–∑ —É—Ä–æ–∫–∞",
        "–ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –∫–æ–º–∞–Ω–¥–æ–π: go run main.go"
      ],
      verification: "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –≤—ã–≤–æ–¥–∏—Ç 'Hello, World!' –≤ –∫–æ–Ω—Å–æ–ª—å",
      expectedOutput: "Hello, World!",
      difficulty: "Ïâ¨Ïö¥"
    },
    {
      id: 4,
      title: "–ö–æ–º–ø–∏–ª—è—Ü–∏—è –≤ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª",
      description: "–°–∫–æ–º–ø–∏–ª–∏—Ä—É–π—Ç–µ –≤–∞—à—É –ø—Ä–æ–≥—Ä–∞–º–º—É –≤ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –µ–≥–æ.",
      steps: [
        "–í –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å —Ñ–∞–π–ª–æ–º main.go –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: go build main.go",
        "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø–æ—è–≤–∏–ª—Å—è –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª",
        "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–π –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª"
      ],
      verification: "–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —Ç–æ—Ç –∂–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, —á—Ç–æ –∏ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ go run",
      expectedOutput: "Hello, World!",
      difficulty: "Ï§ëÍ∞Ñ"
    },
    {
      id: 5,
      title: "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã",
      description: "–ò–∑–º–µ–Ω–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, —á—Ç–æ–±—ã –æ–Ω–∞ –≤—ã–≤–æ–¥–∏–ª–∞ –≤–∞—à–µ –∏–º—è –∏ –∏–∑—É—á–∞–µ–º—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.",
      steps: [
        "–û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª main.go –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ",
        "–ò–∑–º–µ–Ω–∏—Ç–µ —Å—Ç—Ä–æ–∫—É fmt.Println –Ω–∞ –≤—ã–≤–æ–¥ –≤–∞—à–µ–≥–æ –∏–º–µ–Ω–∏ –∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è Go",
        "–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è",
        "–ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É —Å –ø–æ–º–æ—â—å—é go run"
      ],
      verification: "–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–æ–¥–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ",
      expectedOutput: "–ù–∞–ø—Ä–∏–º–µ—Ä: '–ü—Ä–∏–≤–µ—Ç, –º–µ–Ω—è –∑–æ–≤—É—Ç –ê–ª–µ–∫—Å–µ–π, –∏ —è –∏–∑—É—á–∞—é Go!'",
      difficulty: "Ïâ¨Ïö¥"
    },
    {
      id: 6,
      title: "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞",
      description: "–ò–∑—É—á–∏—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ GOPATH –∏ —Å–æ–∑–¥–∞–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –≤ –Ω–µ–π.",
      steps: [
        "–ù–∞–π–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ GOPATH —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã: go env GOPATH",
        "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ –ø–æ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π src, bin, pkg –≤ GOPATH",
        "–°–æ–∑–¥–∞–π—Ç–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –≤–Ω—É—Ç—Ä–∏ src",
        "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –≤ –Ω–µ–π –º–æ–¥—É–ª—å –∏ —Å–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ—Å—Ç—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É"
      ],
      verification: "–ö–∞–∫–∏–µ –ø–æ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –≤–∞—à–µ–π GOPATH?",
      expectedOutput: "src, bin, pkg",
      difficulty: "Ï§ëÍ∞Ñ"
    }
  ];

  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π
  const [completedTasks, setCompletedTasks] = useState(new Set());
  const [showResults, setShowResults] = useState({});

  // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è
  const toggleTaskCompletion = (taskId) => {
    const newCompletedTasks = new Set(completedTasks);
    if (newCompletedTasks.has(taskId)) {
      newCompletedTasks.delete(taskId);
    } else {
      newCompletedTasks.add(taskId);
    }
    setCompletedTasks(newCompletedTasks);
  };

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è
  const saveResult = (taskId, result) => {
    setShowResults(prev => ({
      ...prev,
      [taskId]: result
    }));
  };

  return (
    <div className="space-y-6">
      <div className="bg-gradient-to-r from-blue-900/30 to-purple-900/30 backdrop-blur-sm border border-blue-700/30 rounded-2xl p-6 shadow-lg">
        <div className="flex items-start gap-4">
          <div className="bg-blue-500/20 p-3 rounded-lg">
            <Code className="w-6 h-6 text-blue-400" />
          </div>
          <div>
            <h1 className="text-2xl md:text-3xl font-bold text-white mb-2">üõ†Ô∏è –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Go –∏ –ø–µ—Ä–≤–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</h1>
            <p className="text-gray-300">
              –ü—Ä–∏–º–µ–Ω–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∑–Ω–∞–Ω–∏—è –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ Go –∏ —Å–æ–∑–¥–∞–Ω–∏—é –ø–µ—Ä–≤–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã.
            </p>
            <p className="text-gray-400 text-sm mt-2">
              –û—Ç–º–µ—á–∞–π—Ç–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è –∏ —Å–æ—Ö—Ä–∞–Ω—è–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è —Å–∞–º–æ–ø—Ä–æ–≤–µ—Ä–∫–∏.
            </p>
          </div>
        </div>
      </div>

      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <div className="mb-6 p-4 bg-gray-900/50 rounded-lg border border-gray-700">
          <h3 className="font-bold text-white mb-2 flex items-center gap-2">
            <Play className="w-5 h-5 text-green-400" />
            –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é:
          </h3>
          <ul className="list-disc pl-5 space-y-2 text-gray-300 text-sm">
            <li>–í—ã–ø–æ–ª–Ω—è–π—Ç–µ –∑–∞–¥–∞–Ω–∏—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ, —Å–ª–µ–¥—É—è —É–∫–∞–∑–∞–Ω–Ω—ã–º —à–∞–≥–∞–º</li>
            <li>–ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ —á–µ–∫–±–æ–∫—Å, —á—Ç–æ–±—ã –æ—Ç–º–µ—Ç–∏—Ç—å –µ–≥–æ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ</li>
            <li>–ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Å–æ—Ö—Ä–∞–Ω—è–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π</li>
            <li>–ï—Å–ª–∏ –∑–∞–¥–∞–Ω–∏–µ –≤—ã–∑—ã–≤–∞–µ—Ç –∑–∞—Ç—Ä—É–¥–Ω–µ–Ω–∏—è, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –∫ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–º—É –º–∞—Ç–µ—Ä–∏–∞–ª—É</li>
          </ul>
        </div>

        {practicalTasks.map((task) => (
          <div 
            key={task.id} 
            className={`mb-6 last:mb-0 p-5 rounded-xl border ${
              completedTasks.has(task.id) 
                ? 'border-green-700/50 bg-green-900/10' 
                : 'border-gray-700/50 bg-gray-900/50'
            }`}
          >
            <div className="flex items-start justify-between mb-4">
              <div className="flex items-start gap-3">
                <div className={`p-2 rounded-lg ${
                  task.difficulty === 'Ïâ¨Ïö¥' 
                    ? 'bg-green-500/20 text-green-400' 
                    : task.difficulty === 'Ï§ëÍ∞Ñ' 
                      ? 'bg-yellow-500/20 text-yellow-400'
                      : 'bg-red-500/20 text-red-400'
                }`}>
                  {task.difficulty === 'Ïâ¨Ïö¥' && <Play className="w-5 h-5" />}
                  {task.difficulty === 'Ï§ëÍ∞Ñ' && <Settings className="w-5 h-5" />}
                  {task.difficulty === 'Ïñ¥Î†§Ïö¥' && <Terminal className="w-5 h-5" />}
                </div>
                <div>
                  <h3 className="font-bold text-white text-lg">{task.title}</h3>
                  <p className="text-gray-400 text-sm">{task.description}</p>
                </div>
              </div>
              <button
                onClick={() => toggleTaskCompletion(task.id)}
                className={`p-2 rounded-lg transition-colors ${
                  completedTasks.has(task.id)
                    ? 'bg-green-500/20 text-green-400 hover:bg-green-500/30'
                    : 'bg-gray-700 text-gray-400 hover:bg-gray-600'
                }`}
              >
                <CheckCircle className={`w-6 h-6 ${completedTasks.has(task.id) ? 'fill-current' : ''}`} />
              </button>
            </div>

            <div className="space-y-4">
              <div>
                <h4 className="font-medium text-white mb-2">–®–∞–≥–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:</h4>
                <ol className="list-decimal pl-5 space-y-2 text-gray-300">
                  {task.steps.map((step, index) => (
                    <li key={index} className="pl-2">{step}</li>
                  ))}
                </ol>
              </div>

              <div className="bg-gray-800/50 p-4 rounded-lg">
                <h4 className="font-medium text-white mb-2 flex items-center gap-2">
                  <Terminal className="w-4 h-4 text-purple-400" />
                  –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:
                </h4>
                <p className="text-gray-300 text-sm mb-3">{task.verification}</p>
                <div className="text-gray-400 text-xs">
                  <span className="font-medium">–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:</span> {task.expectedOutput}
                </div>
              </div>

              <div className="flex flex-wrap items-center justify-between gap-3 pt-3 border-t border-gray-700">
                <div className="text-sm">
                  <span className={`px-2 py-1 rounded ${
                    task.difficulty === 'Ïâ¨Ïö¥' 
                      ? 'bg-green-900/30 text-green-300' 
                      : task.difficulty === 'Ï§ëÍ∞Ñ' 
                        ? 'bg-yellow-900/30 text-yellow-300'
                        : 'bg-red-900/30 text-red-300'
                  }`}>
                    {task.difficulty === 'Ïâ¨Ïö¥' && 'Ïâ¨Ïö¥'}
                    {task.difficulty === 'Ï§ëÍ∞Ñ' && 'Ï§ëÍ∞Ñ'}
                    {task.difficulty === 'Ïñ¥Î†§Ïö¥' && 'Ïñ¥Î†§Ïö¥'}
                  </span>
                </div>
                <div className="text-sm text-gray-400">
                  –ó–∞–¥–∞–Ω–∏–µ {task.id} –∏–∑ {practicalTasks.length}
                </div>
              </div>
            </div>
          </div>
        ))}

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è */}
        <div className="mt-8 pt-6 border-t border-gray-700">
          <div className="bg-gray-900/50 p-4 rounded-lg">
            <h3 className="font-bold text-white mb-3 flex items-center gap-2">
              <Award className="w-5 h-5 text-yellow-400" />
              –ü—Ä–æ–≥—Ä–µ—Å—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
            </h3>
            <div className="flex items-center justify-between">
              <div className="flex-1">
                <div className="w-full bg-gray-700 rounded-full h-2.5">
                  <div 
                    className="bg-green-600 h-2.5 rounded-full transition-all duration-500" 
                    style={{ width: `${(completedTasks.size / practicalTasks.length) * 100}%` }}
                  ></div>
                </div>
                <div className="flex justify-between text-sm text-gray-400 mt-2">
                  <span>–í—ã–ø–æ–ª–Ω–µ–Ω–æ: {completedTasks.size}</span>
                  <span>–í—Å–µ–≥–æ: {practicalTasks.length}</span>
                </div>
              </div>
              <div className={`ml-4 px-3 py-1 rounded-lg font-bold ${
                completedTasks.size === practicalTasks.length
                  ? 'bg-green-900/30 text-green-300'
                  : 'bg-gray-700 text-gray-300'
              }`}>
                {Math.round((completedTasks.size / practicalTasks.length) * 100)}%
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Part3;