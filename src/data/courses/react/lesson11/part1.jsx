// src/data/courses/react/lesson11/part1.jsx
import React from 'react';
import { Shuffle, Settings, Database, Code, ArrowRight, Play } from 'lucide-react';

const Part1 = () => {
  return (
    <div className="space-y-8 text-gray-200">
      {/* –í—Å—Ç—É–ø–ª–µ–Ω–∏–µ */}
      <div className="bg-gradient-to-r from-blue-900/30 to-purple-900/30 backdrop-blur-sm border border-blue-700/30 rounded-2xl p-6 shadow-lg">
        <div className="flex items-start gap-4">
          <div className="bg-blue-500/20 p-3 rounded-lg">
            <Shuffle className="w-6 h-6 text-blue-400" />
          </div>
          <div>
            <h1 className="text-2xl md:text-3xl font-bold text-white mb-2">üîÑ –£—Ä–æ–∫ 11: –•—É–∫ useReducer ‚Äî —Å–ª–æ–∂–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ</h1>
            <h2 className="text-xl font-semibold text-blue-300 mb-3">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ª–æ–∂–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —Å –ø–æ–º–æ—â—å—é —Ä–µ–¥—å—é—Å–µ—Ä–∞</h2>
            <p className="text-gray-300">
              <span className="font-medium text-yellow-400">üéØ –¶–µ–ª—å —É—Ä–æ–∫–∞:</span> –ü–æ–Ω—è—Ç—å, –∫–æ–≥–¥–∞ –∏ –ø–æ—á–µ–º—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å <code className="bg-gray-700 px-1.5 py-0.5 rounded text-green-300">useReducer</code> –≤–º–µ—Å—Ç–æ <code className="bg-gray-700 px-1 rounded">useState</code>, –æ—Å–≤–æ–∏—Ç—å –ø—Ä–∏–Ω—Ü–∏–ø —Ä–∞–±–æ—Ç—ã —Ä–µ–¥—å—é—Å–µ—Ä–∞ (action ‚Üí reducer ‚Üí –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ), –Ω–∞—É—á–∏—Ç—å—Å—è —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å —Å–ª–æ–∂–Ω—É—é –ª–æ–≥–∏–∫—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∏ –ø—Ä–∏–º–µ–Ω—è—Ç—å useReducer –¥–ª—è —Ñ–æ—Ä–º, –∫–æ—Ä–∑–∏–Ω, –º–Ω–æ–≥–æ—à–∞–≥–æ–≤—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤.
            </p>
          </div>
        </div>
      </div>

      {/* –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å useReducer –≤–º–µ—Å—Ç–æ useState? */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Settings className="w-5 h-5 text-green-400" />
          –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å useReducer –≤–º–µ—Å—Ç–æ useState?
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            <code className="bg-gray-700 px-1.5 py-0.5 rounded text-cyan-300">useReducer</code> ‚Äî —ç—Ç–æ <span className="font-medium">–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞</span> —Ö—É–∫—É <code className="bg-gray-700 px-1 rounded">useState</code> –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è <span className="font-medium">—Å–ª–æ–∂–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º</span> –∏–ª–∏ <span className="font-medium">—Å–ª–æ–∂–Ω–æ–π –ª–æ–≥–∏–∫–æ–π –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è</span> —Å–æ—Å—Ç–æ—è–Ω–∏—è.
          </p>
          <p>
            –•–æ—Ç—è <code className="bg-gray-700 px-1 rounded">useState</code> –æ—Ç–ª–∏—á–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è <span className="font-medium">–ø—Ä–æ—Å—Ç—ã—Ö</span> —Å–ª—É—á–∞–µ–≤, <code className="bg-gray-700 px-1 rounded">useReducer</code> —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è <span className="font-medium">–ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–º –≤—ã–±–æ—Ä–æ–º</span>, –∫–æ–≥–¥–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è <span className="font-medium">–±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–º</span> –∏–ª–∏ <span className="font-medium">–ª–æ–≥–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è</span> —Å–æ—Å—Ç–æ—è–Ω–∏—è <span className="font-medium">—Ä–∞–∑—Ä–∞—Å—Ç–∞–µ—Ç—Å—è</span>.
          </p>
        </div>
        
        <div className="mt-6 grid grid-cols-1 md:grid-cols-2 gap-6">
          <div className="bg-gray-900/50 p-4 rounded-xl border border-red-700/30">
            <p className="text-sm text-gray-400 mb-2">‚ùå –ö–æ–≥–¥–∞ useState —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –Ω–µ—É–¥–æ–±–Ω—ã–º:</p>
            <pre className="text-red-300 text-sm overflow-x-auto">
              <code>{"// –°–ª–æ–∂–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π\nconst [state, setState] = useState({\n  count: 0,\n  text: '',\n  items: [],\n  loading: false,\n  error: null\n});\n\n// –ú–Ω–æ–≥–æ —Ä–∞–∑–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è\nconst increment = () => setState(prev => ({...prev, count: prev.count + 1}));\nconst decrement = () => setState(prev => ({...prev, count: prev.count - 1}));\nconst setText = (text) => setState(prev => ({...prev, text}));\nconst addItem = (item) => setState(prev => ({...prev, items: [...prev.items, item]}));\nconst setLoading = (loading) => setState(prev => ({...prev, loading}));"}</code>
            </pre>
          </div>
          <div className="bg-gray-900/50 p-4 rounded-xl border border-green-700/30">
            <p className="text-sm text-gray-400 mb-2">‚úÖ –ö–æ–≥–¥–∞ useReducer –ø–æ–¥—Ö–æ–¥–∏—Ç –ª—É—á—à–µ:</p>
            <pre className="text-green-300 text-sm overflow-x-auto">
              <code>{"// –ï–¥–∏–Ω—ã–π —Ä–µ–¥—å—é—Å–µ—Ä –¥–ª—è –≤—Å–µ—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π\nconst [state, dispatch] = useReducer(reducer, initialState);\n\n// –û–¥–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è dispatch –¥–ª—è –≤—Å–µ—Ö –¥–µ–π—Å—Ç–≤–∏–π\nconst increment = () => dispatch({type: 'INCREMENT'});\nconst decrement = () => dispatch({type: 'DECREMENT'});\nconst setText = (text) => dispatch({type: 'SET_TEXT', payload: text});\nconst addItem = (item) => dispatch({type: 'ADD_ITEM', payload: item});\nconst setLoading = (loading) => dispatch({type: 'SET_LOADING', payload: loading});"}</code>
            </pre>
          </div>
        </div>
        
        <div className="mt-4 p-3 bg-blue-900/20 border border-blue-700/30 rounded-lg">
          <p className="text-blue-300 text-sm flex items-start gap-2">
            <span className="font-medium">üí° –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å useReducer:</span>
            <span>
              <ul className="list-disc pl-5 space-y-1">
                <li>–ö–æ–≥–¥–∞ <span className="font-medium">—Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–ª–æ–∂–Ω–æ–µ</span> (–æ–±—ä–µ–∫—Ç—ã, –º–∞—Å—Å–∏–≤—ã —Å –≤–ª–æ–∂–µ–Ω–Ω—ã–º–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞–º–∏)</li>
                <li>–ö–æ–≥–¥–∞ <span className="font-medium">–ª–æ–≥–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è</span> —Å–æ—Å—Ç–æ—è–Ω–∏—è <span className="font-medium">—Ä–∞–∑—Ä–∞—Å—Ç–∞–µ—Ç—Å—è</span></li>
                <li>–ö–æ–≥–¥–∞ <span className="font-medium">—Å–ª–µ–¥—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ</span> –∑–∞–≤–∏—Å–∏—Ç –æ—Ç <span className="font-medium">–ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ</span></li>
                <li>–ö–æ–≥–¥–∞ –Ω—É–∂–Ω–æ <span className="font-medium">—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞—Ç—å</span> –ª–æ–≥–∏–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è</li>
                <li>–ö–æ–≥–¥–∞ <span className="font-medium">–Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏–π</span> —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–æ–ª–∂–Ω—ã –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è <span className="font-medium">–≤–º–µ—Å—Ç–µ</span></li>
              </ul>
            </span>
          </p>
        </div>
      </div>

      {/* –ü—Ä–∏–Ω—Ü–∏–ø —Ä–∞–±–æ—Ç—ã useReducer */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Shuffle className="w-5 h-5 text-yellow-400" />
          –ü—Ä–∏–Ω—Ü–∏–ø —Ä–∞–±–æ—Ç—ã useReducer
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            <code className="bg-gray-700 px-1 rounded">useReducer</code> —Å–ª–µ–¥—É–µ—Ç <span className="font-medium">–ø–∞—Ç—Ç–µ—Ä–Ω—É –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è "–†–µ–¥—å—é—Å–µ—Ä"</span> (Reducer Pattern), –∫–æ—Ç–æ—Ä—ã–π —à–∏—Ä–æ–∫–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–æ –º–Ω–æ–≥–∏—Ö —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞—Ö –∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ö. –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–∏–Ω—Ü–∏–ø: <span className="font-medium">action ‚Üí reducer ‚Üí –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ</span>.
          </p>
        </div>
        
        <div className="mt-6 bg-gray-900/50 p-5 rounded-xl border border-purple-700/30">
          <div className="flex items-center gap-3 mb-3">
            <div className="bg-purple-500/20 p-2 rounded-lg">
              <ArrowRight className="w-5 h-5 text-purple-400" />
            </div>
            <h3 className="text-lg font-bold text-purple-300">–ü–æ—Ç–æ–∫ –¥–∞–Ω–Ω—ã—Ö –≤ useReducer</h3>
          </div>
          <div className="flex flex-col items-center space-y-4">
            <div className="flex items-center">
              <div className="bg-blue-500/20 p-3 rounded-lg">
                <Play className="w-6 h-6 text-blue-400" />
              </div>
              <div className="ml-4">
                <p className="font-medium text-blue-300">1. –î–µ–π—Å—Ç–≤–∏–µ (Action)</p>
                <p className="text-sm text-gray-400">–û–±—ä–µ–∫—Ç —Å —Ç–∏–ø–æ–º –∏ –¥–∞–Ω–Ω—ã–º–∏</p>
              </div>
            </div>
            
            <div className="h-8 w-0.5 bg-gray-600"></div>
            
            <div className="flex items-center">
              <div className="bg-green-500/20 p-3 rounded-lg">
                <Settings className="w-6 h-6 text-green-400" />
              </div>
              <div className="ml-4">
                <p className="font-medium text-green-300">2. –†–µ–¥—å—é—Å–µ—Ä (Reducer)</p>
                <p className="text-sm text-gray-400">–ß–∏—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∞—è –¥–µ–π—Å—Ç–≤–∏–µ</p>
              </div>
            </div>
            
            <div className="h-8 w-0.5 bg-gray-600"></div>
            
            <div className="flex items-center">
              <div className="bg-yellow-500/20 p-3 rounded-lg">
                <Database className="w-6 h-6 text-yellow-400" />
              </div>
              <div className="ml-4">
                <p className="font-medium text-yellow-300">3. –ù–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ</p>
                <p className="text-sm text-gray-400">–†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã —Ä–µ–¥—å—é—Å–µ—Ä–∞</p>
              </div>
            </div>
          </div>
        </div>
        
        <div className="mt-6 grid grid-cols-1 md:grid-cols-2 gap-6">
          <div className="bg-gray-900/50 p-4 rounded-xl border border-blue-700/30">
            <p className="text-sm text-gray-400 mb-2">–°–∏–Ω—Ç–∞–∫—Å–∏—Å useReducer:</p>
            <pre className="text-blue-300 text-sm overflow-x-auto">
              <code>{"const [state, dispatch] = useReducer(reducer, initialState);"}</code>
            </pre>
            <ul className="list-disc pl-5 space-y-1 text-gray-400 text-xs mt-2">
              <li><code className="bg-gray-700 px-1 rounded">state</code> ‚Äî —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ</li>
              <li><code className="bg-gray-700 px-1 rounded">dispatch</code> ‚Äî —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π</li>
              <li><code className="bg-gray-700 px-1 rounded">reducer</code> ‚Äî —Ñ—É–Ω–∫—Ü–∏—è-—Ä–µ–¥—å—é—Å–µ—Ä</li>
              <li><code className="bg-gray-700 px-1 rounded">initialState</code> ‚Äî –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ</li>
            </ul>
          </div>
          <div className="bg-gray-900/50 p-4 rounded-xl border border-cyan-700/30">
            <p className="text-sm text-gray-400 mb-2">–ü—Ä–∏–º–µ—Ä –¥–µ–π—Å—Ç–≤–∏—è (action):</p>
            <pre className="text-cyan-300 text-sm overflow-x-auto">
              <code>{"// –ü—Ä–æ—Å—Ç–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ\n{ type: 'INCREMENT' }\n\n// –î–µ–π—Å—Ç–≤–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏\n{ type: 'ADD_TODO', payload: '–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞' }\n\n// –î–µ–π—Å—Ç–≤–∏–µ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏\n{ \n  type: 'UPDATE_USER', \n  payload: { \n    id: 1, \n    name: '–ù–æ–≤–æ–µ –∏–º—è', \n    email: 'new@example.com' \n  } \n}"}</code>
            </pre>
          </div>
        </div>
      </div>

      {/* –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ä–µ–¥—å—é—Å–µ—Ä–∞ */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Code className="w-5 h-5 text-cyan-400" />
          –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ä–µ–¥—å—é—Å–µ—Ä–∞
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            <span className="font-medium text-cyan-300">–†–µ–¥—å—é—Å–µ—Ä (reducer)</span> ‚Äî —ç—Ç–æ <span className="font-medium">—á–∏—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è</span>, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç <span className="font-medium">—Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ</span> –∏ <span className="font-medium">–¥–µ–π—Å—Ç–≤–∏–µ</span>, –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç <span className="font-medium">–Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ</span>.
          </p>
        </div>
        
        <div className="mt-6 bg-gray-900/50 p-5 rounded-xl border border-orange-700/30">
          <div className="flex items-center gap-3 mb-3">
            <div className="bg-orange-500/20 p-2 rounded-lg">
              <Code className="w-5 h-5 text-orange-400" />
            </div>
            <h3 className="text-lg font-bold text-orange-300">–°–∏–≥–Ω–∞—Ç—É—Ä–∞ —Ä–µ–¥—å—é—Å–µ—Ä–∞</h3>
          </div>
          <div className="bg-gray-800 p-3 rounded-lg">
            <pre className="text-orange-300 text-sm"><code>{"(state, action) => newState"}</code></pre>
          </div>
          <ul className="list-disc pl-5 space-y-2 text-gray-300 text-sm mt-3">
            <li>
              <span className="font-medium">state</span> ‚Äî —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—ã–∑–æ–≤–µ ‚Äî initialState)
            </li>
            <li>
              <span className="font-medium">action</span> ‚Äî –æ–±—ä–µ–∫—Ç –¥–µ–π—Å—Ç–≤–∏—è —Å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º –ø–æ–ª–µ–º <code className="bg-gray-700 px-1 rounded">type</code>
            </li>
            <li>
              <span className="font-medium">newState</span> ‚Äî –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –≤—ã—á–∏—Å–ª–µ–Ω–Ω–æ–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –¥–µ–π—Å—Ç–≤–∏—è
            </li>
            <li>
              <span className="font-medium">–í–∞–∂–Ω–æ:</span> —Ä–µ–¥—å—é—Å–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π ‚Äî –Ω–µ –º—É—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –Ω–µ –≤—ã–∑—ã–≤–∞—Ç—å –ø–æ–±–æ—á–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã
            </li>
          </ul>
        </div>
        
        <div className="mt-6 grid grid-cols-1 md:grid-cols-2 gap-6">
          <div className="bg-gray-900/50 p-4 rounded-xl border border-green-700/30">
            <p className="text-sm text-gray-400 mb-2">–ü—Ä–æ—Å—Ç–æ–π —Ä–µ–¥—å—é—Å–µ—Ä —Å—á–µ—Ç—á–∏–∫–∞:</p>
            <pre className="text-green-300 text-sm overflow-x-auto">
              <code>{"const counterReducer = (state, action) => {\n  switch (action.type) {\n    case 'INCREMENT':\n      return { count: state.count + 1 };\n    case 'DECREMENT':\n      return { count: state.count - 1 };\n    case 'RESET':\n      return { count: 0 };\n    default:\n      return state; // –í–∞–∂–Ω–æ: –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é\n  }\n};"}</code>
            </pre>
          </div>
          <div className="bg-gray-900/50 p-4 rounded-xl border border-purple-700/30">
            <p className="text-sm text-gray-400 mb-2">–†–µ–¥—å—é—Å–µ—Ä —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –¥–∞–Ω–Ω—ã—Ö:</p>
            <pre className="text-purple-300 text-sm overflow-x-auto">
              <code>{"const todoReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return {\n        ...state,\n        todos: [...state.todos, {\n          id: Date.now(),\n          text: action.payload,\n          completed: false\n        }]\n      };\n    case 'TOGGLE_TODO':\n      return {\n        ...state,\n        todos: state.todos.map(todo =>\n          todo.id === action.payload\n            ? { ...todo, completed: !todo.completed }\n            : todo\n        )\n      };\n    default:\n      return state;\n  }\n};"}</code>
            </pre>
          </div>
        </div>
      </div>

      {/* –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–∏–º–µ—Ä: –°—á–µ—Ç—á–∏–∫ —Å useReducer */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Play className="w-5 h-5 text-blue-400" />
          –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–∏–º–µ—Ä: –°—á–µ—Ç—á–∏–∫ —Å useReducer
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            –î–∞–≤–∞–π—Ç–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –ø–æ–ª–Ω—ã–π –ø—Ä–∏–º–µ—Ä —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—á–µ—Ç—á–∏–∫–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º <code className="bg-gray-700 px-1 rounded">useReducer</code>, –∫–æ—Ç–æ—Ä—ã–π –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏.
          </p>
        </div>
        
        <div className="mt-6 bg-gray-900/50 p-5 rounded-xl border border-yellow-700/30">
          <div className="flex items-center gap-3 mb-3">
            <div className="bg-yellow-500/20 p-2 rounded-lg">
              <Play className="w-5 h-5 text-yellow-400" />
            </div>
            <h3 className="text-lg font-bold text-yellow-300">–ü–æ–ª–Ω—ã–π –ø—Ä–∏–º–µ—Ä —Å—á–µ—Ç—á–∏–∫–∞</h3>
          </div>
          <div className="bg-gray-800 p-3 rounded-lg">
            <pre className="text-yellow-300 text-sm"><code>{"import { useReducer } from 'react';\n\n// –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ\nconst initialState = {\n  count: 0,\n  step: 1\n};\n\n// –†–µ–¥—å—é—Å–µ—Ä\nconst counterReducer = (state, action) => {\n  switch (action.type) {\n    case 'INCREMENT':\n      return { ...state, count: state.count + state.step };\n    case 'DECREMENT':\n      return { ...state, count: state.count - state.step };\n    case 'RESET':\n      return { ...state, count: 0 };\n    case 'SET_STEP':\n      return { ...state, step: action.payload };\n    case 'SET_COUNT':\n      return { ...state, count: action.payload };\n    default:\n      throw new Error(`–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ: ${action.type}`);\n  }\n};\n\n// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç\nfunction Counter() {\n  const [state, dispatch] = useReducer(counterReducer, initialState);\n  \n  return (\n    <div>\n      <h2>–°—á–µ—Ç—á–∏–∫: {state.count}</h2>\n      <p>–®–∞–≥: {state.step}</p>\n      \n      <button onClick={() => dispatch({ type: 'INCREMENT' })}>\n        –£–≤–µ–ª–∏—á–∏—Ç—å\n      </button>\n      <button onClick={() => dispatch({ type: 'DECREMENT' })}>\n        –£–º–µ–Ω—å—à–∏—Ç—å\n      </button>\n      <button onClick={() => dispatch({ type: 'RESET' })}>\n        –°–±—Ä–æ—Å–∏—Ç—å\n      </button>\n      \n      <div>\n        <label>\n          –®–∞–≥:\n          <input\n            type=\"number\"\n            value={state.step}\n            onChange={(e) => dispatch({\n              type: 'SET_STEP',\n              payload: parseInt(e.target.value) || 1\n            })}\n          />\n        </label>\n      </div>\n      \n      <div>\n        <label>\n          –ó–Ω–∞—á–µ–Ω–∏–µ:\n          <input\n            type=\"number\"\n            value={state.count}\n            onChange={(e) => dispatch({\n              type: 'SET_COUNT',\n              payload: parseInt(e.target.value) || 0\n            })}\n          />\n        </label>\n      </div>\n    </div>\n  );\n}"}</code></pre>
          </div>
        </div>
      </div>

      {/* –°—Ä–∞–≤–Ω–µ–Ω–∏–µ useState –∏ useReducer */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Settings className="w-5 h-5 text-green-400" />
          –°—Ä–∞–≤–Ω–µ–Ω–∏–µ useState –∏ useReducer
        </h2>
        
        <div className="mt-6 grid grid-cols-1 md:grid-cols-2 gap-6">
          <div className="bg-gray-900/50 p-5 rounded-xl border border-blue-700/30">
            <div className="flex items-center gap-3 mb-3">
              <div className="bg-blue-500/20 p-2 rounded-lg">
                <Code className="w-5 h-5 text-blue-400" />
              </div>
              <h3 className="text-lg font-bold text-blue-300">useState</h3>
            </div>
            <ul className="list-disc pl-5 space-y-2 text-gray-300 text-sm">
              <li><span className="font-medium">–ü—Ä–æ—Å—Ç–æ—Ç–∞:</span> –ü—Ä–æ—â–µ –¥–ª—è –±–∞–∑–æ–≤—ã—Ö —Å–ª—É—á–∞–µ–≤</li>
              <li><span className="font-medium">–°–∏–Ω—Ç–∞–∫—Å–∏—Å:</span> <code className="bg-gray-700 px-1 rounded">const [state, setState] = useState(initialValue)</code></li>
              <li><span className="font-medium">–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ:</span> <code className="bg-gray-700 px-1 rounded">setState(newValue)</code> –∏–ª–∏ <code className="bg-gray-700 px-1 rounded">{`setState(prev => newValue)`}</code></li>
              <li><span className="font-medium">–ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è:</span> –ü—Ä–æ—Å—Ç—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π, –Ω–µ–±–æ–ª—å—à–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤</li>
              <li><span className="font-medium">–ü–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º–æ—Å—Ç—å:</span> –õ–æ–≥–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞–∑–±—Ä–æ—Å–∞–Ω–∞ –ø–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—É</li>
            </ul>
          </div>
          
          <div className="bg-gray-900/50 p-5 rounded-xl border border-orange-700/30">
            <div className="flex items-center gap-3 mb-3">
              <div className="bg-orange-500/20 p-2 rounded-lg">
                <Shuffle className="w-5 h-5 text-orange-400" />
              </div>
              <h3 className="text-lg font-bold text-orange-300">useReducer</h3>
            </div>
            <ul className="list-disc pl-5 space-y-2 text-gray-300 text-sm">
              <li><span className="font-medium">–°—Ç—Ä—É–∫—Ç—É—Ä–∞:</span> –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è</li>
              <li><span className="font-medium">–°–∏–Ω—Ç–∞–∫—Å–∏—Å:</span> <code className="bg-gray-700 px-1 rounded">const [state, dispatch] = useReducer(reducer, initialState)</code></li>
              <li><span className="font-medium">–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ:</span> <code className="bg-gray-700 px-1 rounded">{`dispatch({type: 'ACTION_TYPE', payload: data})`}</code></li>
              <li><span className="font-medium">–ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è:</span> –°–ª–æ–∂–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤, —Å–ª–æ–∂–Ω–æ–π –ª–æ–≥–∏–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è</li>
              <li><span className="font-medium">–ü–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º–æ—Å—Ç—å:</span> –†–µ–¥—å—é—Å–µ—Ä –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ —Ä–∞–∑–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö</li>
            </ul>
          </div>
        </div>
        
        <div className="mt-6 p-3 bg-blue-900/20 border border-blue-700/30 rounded-lg">
          <p className="text-blue-300 text-sm flex items-start gap-2">
            <span className="font-medium">üí° –ö–æ–≥–¥–∞ –≤—ã–±–∏—Ä–∞—Ç—å:</span>
            <span>
              –ù–∞—á–∏–Ω–∞–π—Ç–µ —Å <code className="bg-gray-700 px-1 rounded">useState</code>. –ï—Å–ª–∏ –ª–æ–≥–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Å–ª–æ–∂–Ω–æ–π –∏–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–∞—Å—Ç–µ—Ç, –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –Ω–∞ <code className="bg-gray-700 px-1 rounded">useReducer</code>. –≠—Ç–æ <span className="font-medium">–µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å</span> –≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º.
            </span>
          </p>
        </div>
      </div>

      {/* –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Database className="w-5 h-5 text-purple-400" />
          –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è useReducer
        </h2>
        
        <div className="mt-6 space-y-6">
          {/* –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º–æ–π */}
          <div className="bg-gray-900/50 p-5 rounded-xl border border-green-700/30">
            <div className="flex items-center gap-3 mb-3">
              <div className="bg-green-500/20 p-2 rounded-lg">
                <Settings className="w-5 h-5 text-green-400" />
              </div>
              <h3 className="text-lg font-bold text-green-300">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ª–æ–∂–Ω–æ–π —Ñ–æ—Ä–º–æ–π</h3>
            </div>
            <div className="bg-gray-800 p-3 rounded-lg">
              <pre className="text-green-300 text-sm"><code>{"const formReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_FIELD':\n      return {\n        ...state,\n        [action.field]: action.value\n      };\n    case 'SET_ERRORS':\n      return {\n        ...state,\n        errors: action.errors\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.loading\n      };\n    case 'RESET_FORM':\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nfunction UserForm() {\n  const [state, dispatch] = useReducer(formReducer, {\n    name: '',\n    email: '',\n    password: '',\n    errors: {},\n    loading: false\n  });\n  \n  const handleChange = (field, value) => {\n    dispatch({ type: 'SET_FIELD', field, value });\n  };\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    dispatch({ type: 'SET_LOADING', loading: true });\n    \n    try {\n      // –í–∞–ª–∏–¥–∞—Ü–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö\n      const errors = validateForm(state);\n      if (Object.keys(errors).length > 0) {\n        dispatch({ type: 'SET_ERRORS', errors });\n      } else {\n        await submitForm(state);\n        dispatch({ type: 'RESET_FORM' });\n      }\n    } catch (error) {\n      dispatch({ \n        type: 'SET_ERRORS', \n        errors: { submit: error.message } \n      });\n    } finally {\n      dispatch({ type: 'SET_LOADING', loading: false });\n    }\n  };\n  \n  return (\n    <form onSubmit={handleSubmit}>\n      {/* –ü–æ–ª—è —Ñ–æ—Ä–º—ã —Å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π */}\n      {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ */}\n      {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ */}\n    </form>\n  );\n}"}</code></pre>
            </div>
          </div>
          
          {/* –ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–∫—É–ø–æ–∫ */}
          <div className="bg-gray-900/50 p-5 rounded-xl border border-cyan-700/30">
            <div className="flex items-center gap-3 mb-3">
              <div className="bg-cyan-500/20 p-2 rounded-lg">
                <Database className="w-5 h-5 text-cyan-400" />
              </div>
              <h3 className="text-lg font-bold text-cyan-300">–ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–∫—É–ø–æ–∫</h3>
            </div>
            <div className="bg-gray-800 p-3 rounded-lg">
              <pre className="text-cyan-300 text-sm"><code>{"const cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_ITEM':\n      const existingItem = state.items.find(item => item.id === action.payload.id);\n      if (existingItem) {\n        return {\n          ...state,\n          items: state.items.map(item =>\n            item.id === action.payload.id\n              ? { ...item, quantity: item.quantity + 1 }\n              : item\n          )\n        };\n      } else {\n        return {\n          ...state,\n          items: [...state.items, { ...action.payload, quantity: 1 }]\n        };\n      }\n    case 'REMOVE_ITEM':\n      return {\n        ...state,\n        items: state.items.filter(item => item.id !== action.payload)\n      };\n    case 'UPDATE_QUANTITY':\n      return {\n        ...state,\n        items: state.items.map(item =>\n          item.id === action.payload.id\n            ? { ...item, quantity: action.payload.quantity }\n            : item\n        )\n      };\n    case 'CLEAR_CART':\n      return { ...state, items: [] };\n    default:\n      return state;\n  }\n};\n\nfunction ShoppingCart() {\n  const [state, dispatch] = useReducer(cartReducer, {\n    items: [],\n    total: 0\n  });\n  \n  // –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â—É—é —Å—É–º–º—É (–º–æ–∂–Ω–æ —Ç–∞–∫–∂–µ —Ö—Ä–∞–Ω–∏—Ç—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏)\n  const total = state.items.reduce(\n    (sum, item) => sum + item.price * item.quantity, \n    0\n  );\n  \n  return (\n    <div>\n      <h2>–ö–æ—Ä–∑–∏–Ω–∞ ({state.items.length} —Ç–æ–≤–∞—Ä–æ–≤)</h2>\n      {state.items.map(item => (\n        <CartItem\n          key={item.id}\n          item={item}\n          onUpdateQuantity={(quantity) => dispatch({\n            type: 'UPDATE_QUANTITY',\n            payload: { id: item.id, quantity }\n          })}\n          onRemove={() => dispatch({\n            type: 'REMOVE_ITEM',\n            payload: item.id\n          })}\n        />\n      ))}\n      <div>–ò—Ç–æ–≥–æ: {total.toFixed(2)} —Ä—É–±.</div>\n      <button onClick={() => dispatch({ type: 'CLEAR_CART' })}>\n        –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É\n      </button>\n    </div>\n  );\n}"}</code></pre>
            </div>
          </div>
        </div>
      </div>

      {/* –õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –∏ —Å–æ–≤–µ—Ç—ã */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Code className="w-5 h-5 text-orange-400" />
          –õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –∏ —Å–æ–≤–µ—Ç—ã
        </h2>
        
        <div className="mt-6 space-y-6">
          <div className="bg-gray-900/50 p-5 rounded-xl border border-yellow-700/30">
            <div className="flex items-center gap-3 mb-3">
              <div className="bg-yellow-500/20 p-2 rounded-lg">
                <Settings className="w-5 h-5 text-yellow-400" />
              </div>
              <h3 className="text-lg font-bold text-yellow-300">–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π</h3>
            </div>
            <ul className="list-disc pl-5 space-y-2 text-gray-300 text-sm">
              <li><span className="font-medium">–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã</span> –¥–ª—è —Ç–∏–ø–æ–≤ –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –æ–ø–µ—á–∞—Ç–æ–∫</li>
              <li><span className="font-medium">–°–ª–µ–¥—É–π—Ç–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è–º</span> –æ–± –∏–º–µ–Ω–æ–≤–∞–Ω–∏–∏ –¥–µ–π—Å—Ç–≤–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, <code className="bg-gray-700 px-1 rounded">ADD_ITEM</code>, <code className="bg-gray-700 px-1 rounded">REMOVE_ITEM</code>)</li>
              <li><span className="font-medium">–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ payload</span> –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –¥–µ–π—Å—Ç–≤–∏—è</li>
              <li><span className="font-medium">–î–µ–ª–∞–π—Ç–µ –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–º–∏</span> –∏ –∞—Ç–æ–º–∞—Ä–Ω—ã–º–∏</li>
            </ul>
            <div className="bg-gray-800 p-3 rounded-lg mt-3">
              <pre className="text-yellow-300 text-xs"><code>{"// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Ç–∏–ø–æ–≤ –¥–µ–π—Å—Ç–≤–∏–π\nconst actionTypes = {\n  ADD_TODO: 'ADD_TODO',\n  REMOVE_TODO: 'REMOVE_TODO',\n  TOGGLE_TODO: 'TOGGLE_TODO',\n  SET_FILTER: 'SET_FILTER'\n};\n\n// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ –¥–µ–π—Å—Ç–≤–∏—è—Ö\ndispatch({ type: actionTypes.ADD_TODO, payload: '–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞' });"}</code></pre>
            </div>
          </div>
          
          <div className="bg-gray-900/50 p-5 rounded-xl border border-blue-700/30">
            <div className="flex items-center gap-3 mb-3">
              <div className="bg-blue-500/20 p-2 rounded-lg">
                <Database className="w-5 h-5 text-blue-400" />
              </div>
              <h3 className="text-lg font-bold text-blue-300">–†–∞–±–æ—Ç–∞ —Å —Ä–µ–¥—å—é—Å–µ—Ä–∞–º–∏</h3>
            </div>
            <ul className="list-disc pl-5 space-y-2 text-gray-300 text-sm">
              <li><span className="font-medium">–†–µ–¥—å—é—Å–µ—Ä—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —á–∏—Å—Ç—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏</span> ‚Äî –±–µ–∑ –ø–æ–±–æ—á–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤</li>
              <li><span className="font-medium">–í—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ</span> ‚Äî –Ω–µ –º—É—Ç–∏—Ä—É–π—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ</li>
              <li><span className="font-medium">–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</span> ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ</li>
              <li><span className="font-medium">–†–∞–∑–¥–µ–ª—è–π—Ç–µ —Å–ª–æ–∂–Ω—ã–µ —Ä–µ–¥—å—é—Å–µ—Ä—ã</span> –Ω–∞ –±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç—ã–µ, –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ</li>
            </ul>
          </div>
          
          <div className="bg-gray-900/50 p-5 rounded-xl border border-green-700/30">
            <div className="flex items-center gap-3 mb-3">
              <div className="bg-green-500/20 p-2 rounded-lg">
                <Play className="w-5 h-5 text-green-400" />
              </div>
              <h3 className="text-lg font-bold text-green-300">–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</h3>
            </div>
            <ul className="list-disc pl-5 space-y-2 text-gray-300 text-sm">
              <li><span className="font-medium">useReducer</span> –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–º, —á–µ–º useState –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π</li>
              <li><span className="font-medium">dispatch</span> —Å—Ç–∞–±–∏–ª—å–Ω–∞ –º–µ–∂–¥—É —Ä–µ–Ω–¥–µ—Ä–∞–º–∏ ‚Äî –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö useEffect</li>
              <li><span className="font-medium">–ò–∑–±–µ–≥–∞–π—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤</span> –≤ —Ä–µ–¥—å—é—Å–µ—Ä–µ –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏</li>
            </ul>
          </div>
        </div>
      </div>

      {/* –ó–∞–∫–ª—é—á–µ–Ω–∏–µ */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <div className="flex items-start gap-3">
          <div className="bg-green-500/20 p-2 rounded-lg flex-shrink-0">
            <Shuffle className="w-5 h-5 text-green-400" />
          </div>
          <div>
            <h3 className="font-bold text-white mb-2">–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! üéâ</h3>
            <p className="text-gray-300">
              –¢–µ–ø–µ—Ä—å –≤—ã –ø–æ–Ω–∏–º–∞–µ—Ç–µ, —á—Ç–æ —Ç–∞–∫–æ–µ —Ö—É–∫ <code className="bg-gray-700 px-1 rounded">useReducer</code> –∏ –∫–æ–≥–¥–∞ –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–º–µ—Å—Ç–æ <code className="bg-gray-700 px-1 rounded">useState</code>. –í—ã –æ—Å–≤–æ–∏–ª–∏ –ø—Ä–∏–Ω—Ü–∏–ø —Ä–∞–±–æ—Ç—ã —Ä–µ–¥—å—é—Å–µ—Ä–∞ (action ‚Üí reducer ‚Üí –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ), –Ω–∞—É—á–∏–ª–∏—Å—å —Å–æ–∑–¥–∞–≤–∞—Ç—å —Ä–µ–¥—å—é—Å–µ—Ä—ã –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤, —Å—Ä–∞–≤–Ω–∏–ª–∏ useState –∏ useReducer, –∏ –∏–∑—É—á–∏–ª–∏ –ª—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–≥–æ –º–æ—â–Ω–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞. useReducer ‚Äî —ç—Ç–æ –æ—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ª–æ–∂–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º, —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–∞—Ü–∏–∏ –ª–æ–≥–∏–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ —Å–æ–∑–¥–∞–Ω–∏—è –±–æ–ª–µ–µ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ–≥–æ –∫–æ–¥–∞. –í —Å–ª–µ–¥—É—é—â–∏—Ö —É—Ä–æ–∫–∞—Ö –º—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∏ –∏–∑—É—á–∏–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π.
            </p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Part1;