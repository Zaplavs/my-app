// src/data/courses/react/lesson15/part1.jsx
import React from 'react';
import { Zap, Database, Code, Share2, RefreshCw, Cpu } from 'lucide-react';

const Part1 = () => {
  return (
    <div className="space-y-8 text-gray-200">
      {/* –í—Å—Ç—É–ø–ª–µ–Ω–∏–µ */}
      <div className="bg-gradient-to-r from-blue-900/30 to-purple-900/30 backdrop-blur-sm border border-blue-700/30 rounded-2xl p-6 shadow-lg">
        <div className="flex items-start gap-4">
          <div className="bg-blue-500/20 p-3 rounded-lg">
            <Zap className="w-6 h-6 text-blue-400" />
          </div>
          <div>
            <h1 className="text-2xl md:text-3xl font-bold text-white mb-2">‚ö° –£—Ä–æ–∫ 15: –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏</h1>
            <h2 className="text-xl font-semibold text-blue-300 mb-3">–ü–æ–≤—ã—à–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ React-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π</h2>
            <p className="text-gray-300">
              <span className="font-medium text-yellow-400">üéØ –¶–µ–ª—å —É—Ä–æ–∫–∞:</span> –ü–æ–Ω—è—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤ React, –æ—Å–≤–æ–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ (<code className="bg-gray-700 px-1.5 py-0.5 rounded text-green-300">React.memo</code>, <code className="bg-gray-700 px-1 rounded">useMemo</code>, <code className="bg-gray-700 px-1 rounded">useCallback</code>), –Ω–∞—É—á–∏—Ç—å—Å—è –ø—Ä–∏–º–µ–Ω—è—Ç—å –º–µ–º–æ–∏–∑–∞—Ü–∏—é –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ª–∏—à–Ω–∏—Ö –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–æ–≤ –∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è —Ç—è–∂–µ–ª—ã—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π.
            </p>
          </div>
        </div>
      </div>

      {/* –ü—Ä–æ–±–ª–µ–º—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤ React */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Cpu className="w-5 h-5 text-red-400" />
          –ü—Ä–æ–±–ª–µ–º—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤ React
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            <span className="font-medium text-red-300">–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</span> –≤ React-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö –º–æ–∂–µ—Ç —É—Ö—É–¥—à–∞—Ç—å—Å—è –ø–æ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º –ø—Ä–∏—á–∏–Ω–∞–º, —Å–≤—è–∑–∞–Ω–Ω—ã–º —Å <span className="font-medium">—á–∞—Å—Ç—ã–º–∏ –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∞–º–∏</span> –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∏ <span className="font-medium">—Ç—è–∂–µ–ª—ã–º–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è–º–∏</span>.
          </p>
          <p>
            React <span className="font-medium">–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç</span> –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∏—Ö <span className="font-medium">—Å–æ—Å—Ç–æ—è–Ω–∏—è</span> –∏–ª–∏ <span className="font-medium">–ø—Ä–æ–ø—Å–æ–≤</span>. –û–¥–Ω–∞–∫–æ, –µ—Å–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞—é—Ç—Å—è <span className="font-medium">—á–∞—â–µ</span>, —á–µ–º —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ, –∏–ª–∏ –≤—ã–ø–æ–ª–Ω—è—é—Ç <span className="font-medium">—Ä–µ—Å—É—Ä—Å–æ–µ–º–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏</span> –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ä–µ–Ω–¥–µ—Ä–µ, —ç—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ <span className="font-medium">–∑–∞–º–µ–¥–ª–µ–Ω–∏—é</span> —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
          </p>
        </div>
        
        <div className="mt-6 grid grid-cols-1 md:grid-cols-2 gap-6">
          <div className="bg-gray-900/50 p-4 rounded-xl border border-red-700/30">
            <p className="text-sm text-gray-400 mb-2">‚ùå –ü—Ä–æ–±–ª–µ–º–∞: –õ–∏—à–Ω–∏–µ –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä—ã</p>
            <pre className="text-red-300 text-sm overflow-x-auto">
              <code>{`// –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç\nfunction Parent() {\n  const [count, setCount] = useState(0);\n  const [user, setUser] = useState({ name: '–ò–≤–∞–Ω' });\n  \n  return (\n    <div>\n      <button onClick={() => setCount(c => c + 1)}>\n        –°—á–µ—Ç—á–∏–∫: {count}\n      </button>\n      {/* –≠—Ç–æ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –±—É–¥–µ—Ç –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–≤–∞—Ç—å—Å—è –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∫–ª–∏–∫–µ */}\n      <ExpensiveComponent user={user} />\n    </div>\n  );\n}\n\n// –î–æ—á–µ—Ä–Ω–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç\nfunction ExpensiveComponent({ user }) {\n  // –¢—è–∂–µ–ª—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ä–µ–Ω–¥–µ—Ä–µ\n  const expensiveValue = heavyCalculation(user);\n  \n  return <div>{expensiveValue}</div>;\n}`}</code>
            </pre>
          </div>
          <div className="bg-gray-900/50 p-4 rounded-xl border border-green-700/30">
            <p className="text-sm text-gray-400 mb-2">‚úÖ –†–µ—à–µ–Ω–∏–µ: –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è</p>
            <pre className="text-green-300 text-sm overflow-x-auto">
              <code>{`// –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–æ—á–µ—Ä–Ω–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç\nconst ExpensiveComponent = React.memo(({ user }) => {\n  const expensiveValue = useMemo(() => \n    heavyCalculation(user), \n    [user]\n  );\n  \n  return <div>{expensiveValue}</div>;\n});`}</code>
            </pre>
          </div>
        </div>
        
        <div className="mt-4 p-3 bg-blue-900/20 border border-blue-700/30 rounded-lg">
          <p className="text-blue-300 text-sm flex items-start gap-2">
            <span className="font-medium">üí° –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –ø—Ä–æ–±–ª–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:</span>
            <span>
              <ul className="list-disc pl-5 space-y-1">
                <li><span className="font-medium">–ß–∞—Å—Ç—ã–µ –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä—ã</span> –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∏–∑-–∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–æ–¥–∏—Ç–µ–ª—è</li>
                <li><span className="font-medium">–¢—è–∂–µ–ª—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è</span> –≤–Ω—É—Ç—Ä–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ä–µ–Ω–¥–µ—Ä–µ</li>
                <li><span className="font-medium">–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π</span> –∏ –æ–±—ä–µ–∫—Ç–æ–≤ –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ä–µ–Ω–¥–µ—Ä–µ</li>
                <li><span className="font-medium">–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –º–µ–º–æ–∏–∑–∞—Ü–∏–∏</span> –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π</li>
                <li><span className="font-medium">–ë–æ–ª—å—à–∏–µ —Å–ø–∏—Å–∫–∏</span> –±–µ–∑ –≤–∏—Ä—Ç—É–∞–ª–∏–∑–∞—Ü–∏–∏</li>
              </ul>
            </span>
          </p>
        </div>
      </div>

      {/* React.memo ‚Äî –º–µ–º–æ–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Database className="w-5 h-5 text-yellow-400" />
          React.memo ‚Äî –º–µ–º–æ–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            <code className="bg-gray-700 px-1.5 py-0.5 rounded text-yellow-300">React.memo</code> ‚Äî —ç—Ç–æ <span className="font-medium">HOC (Higher-Order Component)</span>, –∫–æ—Ç–æ—Ä—ã–π <span className="font-medium">–ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç</span> –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞, –µ—Å–ª–∏ –µ–≥–æ <span className="font-medium">–ø—Ä–æ–ø—Å—ã</span> <span className="font-medium">–Ω–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å</span>.
          </p>
          <p>
            –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é React <span className="font-medium">–ø–æ–≤—Ç–æ—Ä–Ω–æ —Ä–µ–Ω–¥–µ—Ä–∏—Ç</span> –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–∏ –∫–∞–∂–¥–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –µ–≥–æ —Ä–æ–¥–∏—Ç–µ–ª—è. <code className="bg-gray-700 px-1 rounded">React.memo</code> –ø–æ–∑–≤–æ–ª—è–µ—Ç <span className="font-medium">–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å</span> —Ä–µ–Ω–¥–µ—Ä, –µ—Å–ª–∏ –ø—Ä–æ–ø—Å—ã <span className="font-medium">–≥–ª—É–±–æ–∫–æ —Ä–∞–≤–Ω—ã</span> –ø—Ä–µ–¥—ã–¥—É—â–∏–º.
          </p>
        </div>
        
        <div className="mt-6 bg-gray-900/50 p-5 rounded-xl border border-cyan-700/30">
          <div className="flex items-center gap-3 mb-3">
            <div className="bg-cyan-500/20 p-2 rounded-lg">
              <Code className="w-5 h-5 text-cyan-400" />
            </div>
            <h3 className="text-lg font-bold text-cyan-300">–°–∏–Ω—Ç–∞–∫—Å–∏—Å React.memo</h3>
          </div>
          <div className="bg-gray-800 p-3 rounded-lg mb-3">
            <pre className="text-cyan-300 text-sm"><code>{`import React from 'react';\n\n// –û–±—ã—á–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç\nfunction MyComponent({ name, age }) {\n  return (\n    <div>\n      <h1>{name}</h1>\n      <p>–í–æ–∑—Ä–∞—Å—Ç: {age}</p>\n    </div>\n  );\n}\n\n// –ú–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç\nconst MemoizedComponent = React.memo(MyComponent);\n\n// –≠–∫—Å–ø–æ—Ä—Ç –º–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞\nexport default React.memo(MyComponent);`}</code></pre>
          </div>
          <p className="text-gray-400 text-xs">
            <code className="bg-gray-700 px-1 rounded">React.memo</code> —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –ø—Ä–æ–ø—Å—ã –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–Ω–æ (shallow comparison). –ï—Å–ª–∏ –ø—Ä–æ–ø—Å—ã ‚Äî –æ–±—ä–µ–∫—Ç—ã –∏–ª–∏ –º–∞—Å—Å–∏–≤—ã, –æ–Ω–∏ —Å—Ä–∞–≤–Ω–∏–≤–∞—é—Ç—Å—è –ø–æ —Å—Å—ã–ª–∫–µ, –∞ –Ω–µ –ø–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É.
          </p>
        </div>
        
        <div className="mt-6 grid grid-cols-1 md:grid-cols-2 gap-6">
          <div className="bg-gray-900/50 p-4 rounded-xl border border-green-700/30">
            <p className="text-sm text-gray-400 mb-2">–ü—Ä–∏–º–µ—Ä: –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</p>
            <pre className="text-green-300 text-sm overflow-x-auto">
              <code>{`import React, { memo } from 'react';\n\nconst UserProfile = memo(({ user, onEdit }) => {\n  console.log('UserProfile —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è:', user.name);\n  \n  return (\n    <div className="user-profile">\n      <h2>{user.name}</h2>\n      <p>Email: {user.email}</p>\n      <p>–í–æ–∑—Ä–∞—Å—Ç: {user.age}</p>\n      <button onClick={() => onEdit(user)}>\n        –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\n      </button>\n    </div>\n  );\n});\n\nexport default UserProfile;`}</code>
            </pre>
          </div>
          <div className="bg-gray-900/50 p-4 rounded-xl border border-blue-700/30">
            <p className="text-sm text-gray-400 mb-2">–ö–∞—Å—Ç–æ–º–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è</p>
            <pre className="text-blue-300 text-sm overflow-x-auto">
              <code>{`const UserProfile = memo(({ user, onEdit }) => {\n  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç...\n}, (prevProps, nextProps) => {\n  // –ö–∞—Å—Ç–æ–º–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ\n  return (\n    prevProps.user.id === nextProps.user.id &&\n    prevProps.user.name === nextProps.user.name &&\n    prevProps.user.email === nextProps.user.email\n    // onEdit –Ω–µ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è\n  );\n});`}</code>
            </pre>
          </div>
        </div>
        
        <div className="mt-4 p-3 bg-purple-900/20 border border-purple-700/30 rounded-lg">
          <p className="text-purple-300 text-sm flex items-start gap-2">
            <span className="font-medium">‚ö†Ô∏è –í–∞–∂–Ω–æ:</span>
            <span>
              –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code className="bg-gray-700 px-1 rounded">React.memo</code> –±–µ–∑–¥—É–º–Ω–æ. –ú–µ–º–æ–∏–∑–∞—Ü–∏—è –∏–º–µ–µ—Ç <span className="font-medium">—Å—Ç–æ–∏–º–æ—Å—Ç—å</span> ‚Äî —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä–æ–ø—Å–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ—ë —Ç–æ–ª—å–∫–æ –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ:
              <ul className="list-disc pl-5 space-y-1 mt-1">
                <li>–ß–∞—Å—Ç–æ —Ä–µ–Ω–¥–µ—Ä—è—Ç—Å—è —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ –ø—Ä–æ–ø—Å–∞–º–∏</li>
                <li>–°–æ–¥–µ—Ä–∂–∞—Ç —Ç—è–∂–µ–ª—ã–µ —Ä–µ–Ω–¥–µ—Ä—ã –∏–ª–∏ —Ç—è–∂–µ–ª—ã–µ –ø–æ–¥–¥–µ—Ä–µ–≤—å—è</li>
                <li>–Ø–≤–ª—è—é—Ç—Å—è —á–∏—Å—Ç—ã–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ (–æ–¥–∏–Ω–∞–∫–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –ø—Ä–æ–ø—Å–æ–≤)</li>
              </ul>
            </span>
          </p>
        </div>
      </div>

      {/* useMemo ‚Äî –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏–π */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Share2 className="w-5 h-5 text-cyan-400" />
          useMemo ‚Äî –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏–π
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            <code className="bg-gray-700 px-1.5 py-0.5 rounded text-cyan-300">useMemo</code> ‚Äî —ç—Ç–æ <span className="font-medium">—Ö—É–∫</span>, –∫–æ—Ç–æ—Ä—ã–π <span className="font-medium">–∫—ç—à–∏—Ä—É–µ—Ç</span> —Ä–µ–∑—É–ª—å—Ç–∞—Ç <span className="font-medium">–¥–æ—Ä–æ–≥–æ—Å—Ç–æ—è—â–∏—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π</span> –º–µ–∂–¥—É —Ä–µ–Ω–¥–µ—Ä–∞–º–∏.
          </p>
          <p>
            –û–Ω <span className="font-medium">–≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –≤—ã—á–∏—Å–ª–µ–Ω–∏—è</span> —Ç–æ–ª—å–∫–æ —Ç–æ–≥–¥–∞, –∫–æ–≥–¥–∞ <span className="font-medium">–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏</span> –∏–∑–º–µ–Ω–∏–ª–∏—Å—å. –í –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è <span className="font-medium">–∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ</span>.
          </p>
        </div>
        
        <div className="mt-6 bg-gray-900/50 p-5 rounded-xl border border-orange-700/30">
          <div className="flex items-center gap-3 mb-3">
            <div className="bg-orange-500/20 p-2 rounded-lg">
              <RefreshCw className="w-5 h-5 text-orange-400" />
            </div>
            <h3 className="text-lg font-bold text-orange-300">–°–∏–Ω—Ç–∞–∫—Å–∏—Å useMemo</h3>
          </div>
          <div className="bg-gray-800 p-3 rounded-lg mb-3">
            <pre className="text-orange-300 text-sm"><code>{`import { useMemo } from 'react';\n\nfunction MyComponent({ items, searchTerm }) {\n  // –¢—è–∂–µ–ª–æ–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏\n  const filteredItems = useMemo(() => {\n    console.log('–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è...');\n    return items.filter(item => \n      item.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n  }, [items, searchTerm]); // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏\n  \n  return (\n    <ul>\n      {filteredItems.map(item => (\n        <li key={item.id}>{item.name}</li>\n      ))}\n    </ul>\n  );\n}`}</code></pre>
          </div>
          <p className="text-gray-400 text-xs">
            –ë–µ–∑ <code className="bg-gray-700 px-1 rounded">useMemo</code> —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –ø—Ä–∏ <span className="font-medium">–∫–∞–∂–¥–æ–º</span> —Ä–µ–Ω–¥–µ—Ä–µ, –¥–∞–∂–µ –µ—Å–ª–∏ <code className="bg-gray-700 px-1 rounded">items</code> –∏ <code className="bg-gray-700 px-1 rounded">searchTerm</code> –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å.
          </p>
        </div>
        
        <div className="mt-6 grid grid-cols-1 md:grid-cols-2 gap-6">
          <div className="bg-gray-900/50 p-4 rounded-xl border border-green-700/30">
            <p className="text-sm text-gray-400 mb-2">–ü—Ä–∏–º–µ—Ä: –¢—è–∂–µ–ª—ã–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è</p>
            <pre className="text-green-300 text-sm overflow-x-auto">
              <code>{`function FibonacciCalculator({ number }) {\n  const fibonacci = useMemo(() => {\n    const fib = (n) => {\n      if (n <= 1) return n;\n      return fib(n - 1) + fib(n - 2);\n    };\n    return fib(number);\n  }, [number]);\n  \n  return (\n    <div>\n      <p>–ß–∏—Å–ª–æ –§–∏–±–æ–Ω–∞—á—á–∏ –¥–ª—è {number}: {fibonacci}</p>\n    </div>\n  );\n}`}</code>
            </pre>
          </div>
          <div className="bg-gray-900/50 p-4 rounded-xl border border-blue-700/30">
            <p className="text-sm text-gray-400 mb-2">–ü—Ä–∏–º–µ—Ä: –°–æ–∑–¥–∞–Ω–∏–µ —Å–ª–æ–∂–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤</p>
            <pre className="text-blue-300 text-sm overflow-x-auto">
              <code>{`function ChartData({ rawData, config }) {\n  const processedData = useMemo(() => {\n    // –°–ª–æ–∂–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö\n    return rawData.map(item => ({\n      ...item,\n      processedValue: processItem(item, config),\n      meta generateMetadata(item)\n    }));\n  }, [rawData, config]);\n  \n  return <Chart data={processedData} />;\n}`}</code>
            </pre>
          </div>
        </div>
        
        <div className="mt-4 p-3 bg-red-900/20 border border-red-700/30 rounded-lg">
          <p className="text-red-300 text-sm flex items-start gap-2">
            <span className="font-medium">‚ö†Ô∏è –†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏:</span>
            <span>
              <ul className="list-disc pl-5 space-y-1">
                <li><span className="font-medium">–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ useMemo –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π</span> ‚Äî –Ω–∞–∫–ª–∞–¥–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã –º–æ–≥—É—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ –ø–æ–ª—å–∑—ã</li>
                <li><span className="font-medium">–ó–∞–±—ã—Ç—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏</span> ‚Äî –≤ –º–∞—Å—Å–∏–≤–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –í–°–ï –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è</li>
                <li><span className="font-medium">–ú—É—Ç–∏—Ä—É—é—â–∏–µ –æ–±—ä–µ–∫—Ç—ã</span> ‚Äî –µ—Å–ª–∏ –æ–±—ä–µ–∫—Ç –º—É—Ç–∏—Ä—É–µ—Ç, useMemo –Ω–µ –∑–∞–º–µ—Ç–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π</li>
              </ul>
            </span>
          </p>
        </div>
      </div>

      {/* useCallback ‚Äî –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Code className="w-5 h-5 text-purple-400" />
          useCallback ‚Äî –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            <code className="bg-gray-700 px-1.5 py-0.5 rounded text-purple-300">useCallback</code> ‚Äî —ç—Ç–æ <span className="font-medium">—Ö—É–∫</span>, –∫–æ—Ç–æ—Ä—ã–π <span className="font-medium">–∫—ç—à–∏—Ä—É–µ—Ç</span> —Ñ—É–Ω–∫—Ü–∏–∏ –º–µ–∂–¥—É —Ä–µ–Ω–¥–µ—Ä–∞–º–∏, <span className="font-medium">–ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞—è</span> —Å–æ–∑–¥–∞–Ω–∏–µ <span className="font-medium">–Ω–æ–≤—ã—Ö</span> —Ñ—É–Ω–∫—Ü–∏–π –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ä–µ–Ω–¥–µ—Ä–µ.
          </p>
          <p>
            –≠—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–æ –¥–ª—è <span className="font-medium">–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏</span>, –∫–æ–≥–¥–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –∫–∞–∫ <span className="font-medium">–ø—Ä–æ–ø—Å—ã</span> –≤ <code className="bg-gray-700 px-1 rounded">React.memo</code> –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ <span className="font-medium">—Ö—É–∫–∞—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π</span> (<code className="bg-gray-700 px-1 rounded">useEffect</code>, <code className="bg-gray-700 px-1 rounded">useMemo</code>).
          </p>
        </div>
        
        <div className="mt-6 bg-gray-900/50 p-5 rounded-xl border border-yellow-700/30">
          <div className="flex items-center gap-3 mb-3">
            <div className="bg-yellow-500/20 p-2 rounded-lg">
              <Code className="w-5 h-5 text-yellow-400" />
            </div>
            <h3 className="text-lg font-bold text-yellow-300">–°–∏–Ω—Ç–∞–∫—Å–∏—Å useCallback</h3>
          </div>
          <div className="bg-gray-800 p-3 rounded-lg mb-3">
            <pre className="text-yellow-300 text-sm"><code>{`import { useCallback } from 'react';\n\nfunction ParentComponent() {\n  const [count, setCount] = useState(0);\n  \n  // –ë–µ–∑ useCallback - –Ω–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ä–µ–Ω–¥–µ—Ä–µ\n  const handleClick = () => {\n    setCount(c => c + 1);\n  };\n  \n  // –° useCallback - —Ñ—É–Ω–∫—Ü–∏—è –∫—ç—à–∏—Ä—É–µ—Ç—Å—è\n  const handleClick = useCallback(() => {\n    setCount(c => c + 1);\n  }, []); // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π\n  \n  return (\n    <div>\n      <p>–°—á–µ—Ç—á–∏–∫: {count}</p>\n      {/* ChildComponent - –º–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç */}\n      <ChildComponent onClick={handleClick} />\n    </div>\n  );\n}`}</code></pre>
          </div>
        </div>
        
        <div className="mt-6 grid grid-cols-1 md:grid-cols-2 gap-6">
          <div className="bg-gray-900/50 p-4 rounded-xl border border-green-700/30">
            <p className="text-sm text-gray-400 mb-2">–ü—Ä–∏–º–µ—Ä: –§—É–Ω–∫—Ü–∏—è —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏</p>
            <pre className="text-green-300 text-sm overflow-x-auto">
              <code>{`function TodoList({ todos, filter }) {\n  const [newTodo, setNewTodo] = useState('');\n  \n  // –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏\n  const addTodo = useCallback((text) => {\n    // –õ–æ–≥–∏–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏\n  }, []);\n  \n  // –§—É–Ω–∫—Ü–∏—è —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏\n  const deleteTodo = useCallback((id) => {\n    // –õ–æ–≥–∏–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏\n  }, [/* –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ */]);\n  \n  // –§—É–Ω–∫—Ü–∏—è, –∑–∞–≤–∏—Å—è—â–∞—è –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è\n  const updateTodo = useCallback((id, updates) => {\n    // –õ–æ–≥–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏\n  }, [newTodo]); // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è\n  \n  return (\n    <div>\n      {/* –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã, –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∫–∞–∫ –ø—Ä–æ–ø—Å—ã */}\n      <TodoInput onAdd={addTodo} />\n      <TodoItems \n        todos={todos} \n        onDelete={deleteTodo}\n        onUpdate={updateTodo}\n      />\n    </div>\n  );\n}`}</code>
            </pre>
          </div>
          <div className="bg-gray-900/50 p-4 rounded-xl border border-blue-700/30">
            <p className="text-sm text-gray-400 mb-2">–ü—Ä–∏–º–µ—Ä: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ useEffect</p>
            <pre className="text-blue-300 text-sm overflow-x-auto">
              <code>{`function DataFetcher({ userId }) {\n  const [data, setData] = useState(null);\n  \n  // –ë–µ–∑ useCallback —ç—Ç–æ—Ç —ç—Ñ—Ñ–µ–∫—Ç –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å\n  // –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ä–µ–Ω–¥–µ—Ä–µ, –¥–∞–∂–µ –µ—Å–ª–∏ userId –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è\n  const fetchData = useCallback(async () => {\n    const response = await api.getUserData(userId);\n    setData(response.data);\n  }, [userId]);\n  \n  useEffect(() => {\n    fetchData();\n  }, [fetchData]); // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏\n  \n  return <div>{/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö */}</div>;\n}`}</code>
            </pre>
          </div>
        </div>
        
        <div className="mt-4 p-3 bg-cyan-900/20 border border-cyan-700/30 rounded-lg">
          <p className="text-cyan-300 text-sm flex items-start gap-2">
            <span className="font-medium">üí° –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å useCallback:</span>
            <span>
              <ul className="list-disc pl-5 space-y-1">
                <li>–ö–æ–≥–¥–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤ <code className="bg-gray-700 px-1 rounded">React.memo</code> –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–∞–∫ –ø—Ä–æ–ø—Å</li>
                <li>–ö–æ–≥–¥–∞ —Ñ—É–Ω–∫—Ü–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö –¥—Ä—É–≥–∏—Ö —Ö—É–∫–æ–≤ (<code className="bg-gray-700 px-1 rounded">useEffect</code>, <code className="bg-gray-700 px-1 rounded">useMemo</code>)</li>
                <li>–ö–æ–≥–¥–∞ —Ñ—É–Ω–∫—Ü–∏—è —è–≤–ª—è–µ—Ç—Å—è —á–∞—Å—Ç—å—é –º–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è</li>
                <li>–ö–æ–≥–¥–∞ —Ñ—É–Ω–∫—Ü–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ (<code className="bg-gray-700 px-1 rounded">useContext</code>)</li>
              </ul>
            </span>
          </p>
        </div>
      </div>

      {/* –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã –∏ –ª—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Zap className="w-5 h-5 text-orange-400" />
          –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã –∏ –ª—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏
        </h2>
        
        <div className="mt-6 space-y-6">
          <div className="bg-gray-900/50 p-5 rounded-xl border border-green-700/30">
            <div className="flex items-center gap-3 mb-3">
              <div className="bg-green-500/20 p-2 rounded-lg">
                <Database className="w-5 h-5 text-green-400" />
              </div>
              <h3 className="text-lg font-bold text-green-300">–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –ø—Ä–∏–º–µ—Ä –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Å–ø–∏—Å–∫–∞</h3>
            </div>
            <div className="bg-gray-800 p-3 rounded-lg mb-3">
              <pre className="text-green-300 text-sm"><code>{`import React, { useState, useMemo, useCallback, memo } from 'react';\n\n// –ú–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞\nconst ListItem = memo(({ item, onToggle, onDelete }) => {\n  console.log('ListItem —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è:', item.id);\n  \n  return (\n    <div className="list-item">\n      <input\n        type="checkbox\"\n        checked={item.completed}\n        onChange={() => onToggle(item.id)}\n      />\n      <span className={item.completed ? 'completed' : ''}>\n        {item.text}\n      </span>\n      <button onClick={() => onDelete(item.id)}>\n        –£–¥–∞–ª–∏—Ç—å\n      </button>\n    </div>\n  );\n});\n\nfunction OptimizedTodoList() {\n  const [todos, setTodos] = useState([\n    { id: 1, text: '–ó–∞–¥–∞—á–∞ 1', completed: false },\n    { id: 2, text: '–ó–∞–¥–∞—á–∞ 2', completed: true }\n  ]);\n  const [filter, setFilter] = useState('all');\n  \n  // –ú–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è\n  const filteredTodos = useMemo(() => {\n    switch (filter) {\n      case 'active':\n        return todos.filter(todo => !todo.completed);\n      case 'completed':\n        return todos.filter(todo => todo.completed);\n      default:\n        return todos;\n    }\n  }, [todos, filter]);\n  \n  // –ú–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏\n  const addTodo = useCallback((text) => {\n    setTodos(prev => [...prev, {\n      id: Date.now(),\n      text,\n      completed: false\n    }]);\n  }, []);\n  \n  const toggleTodo = useCallback((id) => {\n    setTodos(prev => prev.map(todo =>\n      todo.id === id \n        ? { ...todo, completed: !todo.completed }\n        : todo\n    ));\n  }, []);\n  \n  const deleteTodo = useCallback((id) => {\n    setTodos(prev => prev.filter(todo => todo.id !== id));\n  }, []);\n  \n  return (\n    <div>\n      <div className="filters\">\n        <button \n          className={filter === 'all' ? 'active' : ''}\n          onClick={() => setFilter('all')}\n        >\n          –í—Å–µ\n        </button>\n        <button \n          className={filter === 'active' ? 'active' : ''}\n          onClick={() => setFilter('active')}\n        >\n          –ê–∫—Ç–∏–≤–Ω—ã–µ\n        </button>\n        <button \n          className={filter === 'completed' ? 'active' : ''}\n          onClick={() => setFilter('completed')}\n        >\n          –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ\n        </button>\n      </div>\n      \n      <ul>\n        {filteredTodos.map(todo => (\n          <ListItem\n            key={todo.id}\n            item={todo}\n            onToggle={toggleTodo}\n            onDelete={deleteTodo}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n}`}</code></pre>
            </div>
          </div>
          
          <div className="bg-gray-900/50 p-5 rounded-xl border border-blue-700/30">
            <div className="flex items-center gap-3 mb-3">
              <div className="bg-blue-500/20 p-2 rounded-lg">
                <Share2 className="w-5 h-5 text-blue-400" />
              </div>
              <h3 className="text-lg font-bold text-blue-300">–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ç—è–∂–µ–ª—ã—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π</h3>
            </div>
            <div className="bg-gray-800 p-3 rounded-lg mb-3">
              <pre className="text-blue-300 text-sm"><code>{`function ExpensiveCalculation({ numbers, multiplier }) {\n  // –¢—è–∂–µ–ª–æ–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –±–µ–∑ useMemo\n  // –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ä–µ–Ω–¥–µ—Ä–µ\n  const heavyResult = numbers.reduce((acc, num) => {\n    // –°–∏–º—É–ª—è—Ü–∏—è —Ç—è–∂–µ–ª—ã—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π\n    let result = num;\n    for (let i = 0; i < 1000000; i++) {\n      result = Math.sqrt(result * multiplier + i);\n    }\n    return acc + result;\n  }, 0);\n  \n  return (\n    <div>\n      <p>–†–µ–∑—É–ª—å—Ç–∞—Ç: {heavyResult}</p>\n    </div>\n  );\n}\n\n// –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è\nfunction OptimizedCalculation({ numbers, multiplier }) {\n  // –¢—è–∂–µ–ª–æ–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ —Å useMemo\n  const heavyResult = useMemo(() => {\n    console.log('–í—ã–ø–æ–ª–Ω—è—é—Ç—Å—è —Ç—è–∂–µ–ª—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è...');\n    return numbers.reduce((acc, num) => {\n      let result = num;\n      for (let i = 0; i < 1000000; i++) {\n        result = Math.sqrt(result * multiplier + i);\n      }\n      return acc + result;\n    }, 0);\n  }, [numbers, multiplier]); // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏\n  \n  return (\n    <div>\n      <p>–†–µ–∑—É–ª—å—Ç–∞—Ç: {heavyResult}</p>\n    </div>\n  );\n}`}</code></pre>
            </div>
          </div>
          
          <div className="bg-gray-900/50 p-5 rounded-xl border border-purple-700/30">
            <div className="flex items-center gap-3 mb-3">
              <div className="bg-purple-500/20 p-2 rounded-lg">
                <Code className="w-5 h-5 text-purple-400" />
              </div>
              <h3 className="text-lg font-bold text-purple-300">–õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –∏ —Å–æ–≤–µ—Ç—ã</h3>
            </div>
            <ul className="list-disc pl-5 space-y-2 text-gray-300 text-sm">
              <li>
                <span className="font-medium">–ò–∑–º–µ—Ä—è–π—Ç–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</span> –¥–æ –∏ –ø–æ—Å–ª–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Å –ø–æ–º–æ—â—å—é React DevTools Profiler
              </li>
              <li>
                <span className="font-medium">–ù–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –ø—Ä–µ–∂–¥–µ–≤—Ä–µ–º–µ–Ω–Ω–æ</span> ‚Äî —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏—Ç–µ —Ä–∞–±–æ—á–∏–π –∫–æ–¥, –ø–æ—Ç–æ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
              </li>
              <li>
                <span className="font-medium">–ü—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑—ã–≤–∞–π—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏</span> ‚Äî –≤ —Ö—É–∫–∞—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤—Å–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
              </li>
              <li>
                <span className="font-medium">–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ React.memo</span> –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —á–∞—Å—Ç–æ —Ä–µ–Ω–¥–µ—Ä—è—Ç—Å—è —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ –ø—Ä–æ–ø—Å–∞–º–∏
              </li>
              <li>
                <span className="font-medium">–ü—Ä–∏–º–µ–Ω—è–π—Ç–µ useMemo</span> –¥–ª—è —Ç—è–∂–µ–ª—ã—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π –∏ —Å–æ–∑–¥–∞–Ω–∏—è —Å–ª–æ–∂–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
              </li>
              <li>
                <span className="font-medium">–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ useCallback</span> –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–π, –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã—Ö –≤ –º–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
              </li>
              <li>
                <span className="font-medium">–†–∞–∑–¥–µ–ª—è–π—Ç–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã</span> –Ω–∞ –±–æ–ª–µ–µ –º–µ–ª–∫–∏–µ –¥–ª—è –ª—É—á—à–µ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
              </li>
              <li>
                <span className="font-medium">–ò–∑–±–µ–≥–∞–π—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤</span> –≤ —Ä–µ–Ω–¥–µ—Ä–µ –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
              </li>
            </ul>
            <div className="mt-3 grid grid-cols-1 md:grid-cols-2 gap-4">
              <div className="bg-gray-800 p-3 rounded-lg">
                <p className="text-xs text-gray-400 mb-1">‚ùå –ü–ª–æ—Ö–æ:</p>
                <pre className="text-red-300 text-xs"><code>{`// –ù–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ä–µ–Ω–¥–µ—Ä–µ\n<MyComponent style={{ color: 'red' }} />\n\n// –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ä–µ–Ω–¥–µ—Ä–µ\n<MyComponent onClick={() => console.log('click')} />`}</code></pre>
              </div>
              <div className="bg-gray-800 p-3 rounded-lg">
                <p className="text-xs text-gray-400 mb-1">‚úÖ –•–æ—Ä–æ—à–æ:</p>
                <pre className="text-green-300 text-xs"><code>{`// –°—Ç–∏–ª–∏ –≤–Ω–µ —Ä–µ–Ω–¥–µ—Ä–∞\nconst componentStyle = { color: 'red' };\n<MyComponent style={componentStyle} />\n\n// –ú–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è\nconst handleClick = useCallback(() => {\n  console.log('click');\n}, []);\n<MyComponent onClick={handleClick} />`}</code></pre>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* –ó–∞–∫–ª—é—á–µ–Ω–∏–µ */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <div className="flex items-start gap-3">
          <div className="bg-green-500/20 p-2 rounded-lg flex-shrink-0">
            <Zap className="w-5 h-5 text-green-400" />
          </div>
          <div>
            <h3 className="font-bold text-white mb-2">–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! üéâ</h3>
            <p className="text-gray-300">
              –¢–µ–ø–µ—Ä—å –≤—ã –ø–æ–Ω–∏–º–∞–µ—Ç–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤ React –∏ –∑–Ω–∞–µ—Ç–µ, –∫–∞–∫ –∏—Ö —Ä–µ—à–∞—Ç—å —Å –ø–æ–º–æ—â—å—é <code className="bg-gray-700 px-1 rounded">React.memo</code>, <code className="bg-gray-700 px-1 rounded">useMemo</code> –∏ <code className="bg-gray-700 px-1 rounded">useCallback</code>. –í—ã –Ω–∞—É—á–∏–ª–∏—Å—å –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞—Ç—å –ª–∏—à–Ω–∏–µ –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤, –∫—ç—à–∏—Ä–æ–≤–∞—Ç—å —Ç—è–∂–µ–ª—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ª—É—á—à–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è ‚Äî —ç—Ç–æ –±–∞–ª–∞–Ω—Å –º–µ–∂–¥—É –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –∏ —á–∏—Ç–∞–µ–º–æ—Å—Ç—å—é –∫–æ–¥–∞. –í—Å–µ–≥–¥–∞ –∏–∑–º–µ—Ä—è–π—Ç–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ –ø—Ä–∏–º–µ–Ω—è–π—Ç–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ç–æ–ª—å–∫–æ —Ç–æ–≥–¥–∞, –∫–æ–≥–¥–∞ –æ–Ω–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã. –í —Å–ª–µ–¥—É—é—â–∏—Ö —É—Ä–æ–∫–∞—Ö –º—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏, –≤–∏—Ä—Ç—É–∞–ª–∏–∑–∞—Ü–∏—é —Å–ø–∏—Å–∫–æ–≤ –∏ –¥—Ä—É–≥–∏–µ –º–µ—Ç–æ–¥—ã –ø–æ–≤—ã—à–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ React-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π.
            </p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Part1;