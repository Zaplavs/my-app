// src/data/courses/react/lesson8/part1.jsx
import React from 'react';
import { Download, Wifi, AlertTriangle, Database, RefreshCw, Server, Code } from 'lucide-react';

const Part1 = () => {
  return (
    <div className="space-y-8 text-gray-200">
      {/* –í—Å—Ç—É–ø–ª–µ–Ω–∏–µ */}
      <div className="bg-gradient-to-r from-blue-900/30 to-purple-900/30 backdrop-blur-sm border border-blue-700/30 rounded-2xl p-6 shadow-lg">
        <div className="flex items-start gap-4">
          <div className="bg-blue-500/20 p-3 rounded-lg">
            <Server className="w-6 h-6 text-blue-400" />
          </div>
          <div>
            <h1 className="text-2xl md:text-3xl font-bold text-white mb-2">üåê –£—Ä–æ–∫ 8: –†–∞–±–æ—Ç–∞ —Å API –∏ fetch</h1>
            <h2 className="text-xl font-semibold text-blue-300 mb-3">–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞ –≤ React</h2>
            <p className="text-gray-300">
              <span className="font-medium text-yellow-400">üéØ –¶–µ–ª—å —É—Ä–æ–∫–∞:</span> –ü–æ–Ω—è—Ç—å, —á—Ç–æ —Ç–∞–∫–æ–µ API –∏ –∫–∞–∫ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –Ω–∏–º–∏ –≤ React, –æ—Å–≤–æ–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ <code className="bg-gray-700 px-1.5 py-0.5 rounded text-green-300">fetch</code> –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö, –Ω–∞—É—á–∏—Ç—å—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏, –æ—à–∏–±–∫–∏ –∏ –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ, —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å –æ—á–∏—Å—Ç–∫—É –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.
            </p>
          </div>
        </div>
      </div>

      {/* –ß—Ç–æ —Ç–∞–∫–æ–µ API? */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Wifi className="w-5 h-5 text-green-400" />
          –ß—Ç–æ —Ç–∞–∫–æ–µ API?
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            <span className="font-medium text-green-300">API (Application Programming Interface)</span> ‚Äî —ç—Ç–æ <span className="font-medium">–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π</span>, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–º –ø—Ä–æ–≥—Ä–∞–º–º–∞–º <span className="font-medium">–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å</span> –¥—Ä—É–≥ —Å –¥—Ä—É–≥–æ–º.
          </p>
          <p>
            –í –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, <span className="font-medium">Web API</span> ‚Äî —ç—Ç–æ <span className="font-medium">—Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞</span> –Ω–∞ —Å–µ—Ä–≤–µ—Ä, —á–µ—Ä–µ–∑ –∫–æ—Ç–æ—Ä—É—é –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –±—Ä–∞—É–∑–µ—Ä) –º–æ–≥—É—Ç <span className="font-medium">–∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ</span> –∏–ª–∏ <span className="font-medium">–≤—ã–ø–æ–ª–Ω—è—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–∏</span>.
          </p>
        </div>
        
        <div className="mt-6 grid grid-cols-1 md:grid-cols-2 gap-6">
          <div className="bg-gray-900/50 p-4 rounded-xl border border-blue-700/30">
            <p className="text-sm text-gray-400 mb-2">–ü—Ä–∏–º–µ—Ä Web API:</p>
            <pre className="text-blue-300 text-sm overflow-x-auto">
              <code>{"// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\nGET https://jsonplaceholder.typicode.com/users\n\n// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\nGET https://jsonplaceholder.typicode.com/users/1\n\n// –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\nPOST https://jsonplaceholder.typicode.com/users"}</code>
            </pre>
          </div>
          <div className="bg-gray-900/50 p-4 rounded-xl border border-cyan-700/30">
            <p className="text-sm text-gray-400 mb-2">–ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞ API:</p>
            <pre className="text-cyan-300 text-sm overflow-x-auto">
              <code>{"{\n  \"id\": 1,\n  \"name\": \"Leanne Graham\",\n  \"email\": \"Sincere@april.biz\"\n}"}</code>
            </pre>
          </div>
        </div>
        
        <div className="mt-4 p-3 bg-blue-900/20 border border-blue-700/30 rounded-lg">
          <p className="text-blue-300 text-sm flex items-start gap-2">
            <span className="font-medium">üí° –¢–∏–ø—ã Web API:</span>
            <span>
              <ul className="list-disc pl-5 space-y-1">
                <li><span className="font-medium">REST API</span> ‚Äî –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ HTTP-–º–µ—Ç–æ–¥–∞—Ö (GET, POST, PUT, DELETE)</li>
                <li><span className="font-medium">GraphQL</span> ‚Äî –ø–æ–∑–≤–æ–ª—è–µ—Ç –∫–ª–∏–µ–Ω—Ç—É –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</li>
                <li><span className="font-medium">SOAP</span> ‚Äî –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª, –∏—Å–ø–æ–ª—å–∑—É—é—â–∏–π XML</li>
              </ul>
            </span>
          </p>
        </div>
      </div>

      {/* –ß—Ç–æ —Ç–∞–∫–æ–µ fetch? */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Download className="w-5 h-5 text-yellow-400" />
          –ß—Ç–æ —Ç–∞–∫–æ–µ fetch?
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            <code className="bg-gray-700 px-1.5 py-0.5 rounded text-yellow-300">fetch</code> ‚Äî —ç—Ç–æ <span className="font-medium">–≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥</span> –≤ –±—Ä–∞—É–∑–µ—Ä–∞—Ö, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç <span className="font-medium">–≤—ã–ø–æ–ª–Ω—è—Ç—å —Å–µ—Ç–µ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã</span> –∫ —Å–µ—Ä–≤–µ—Ä–∞–º. –û–Ω —è–≤–ª—è–µ—Ç—Å—è <span className="font-medium">—Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–æ–π</span> —Å—Ç–∞—Ä–æ–º—É <code className="bg-gray-700 px-1 rounded">XMLHttpRequest</code>.
          </p>
          <p>
            <code className="bg-gray-700 px-1 rounded">fetch</code> –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç <code className="bg-gray-700 px-1 rounded">Promise</code>, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –µ–≥–æ —É–¥–æ–±–Ω—ã–º –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º–∏ –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏.
          </p>
        </div>
        
        <div className="mt-6 bg-gray-900/50 p-5 rounded-xl border border-purple-700/30">
          <div className="flex items-center gap-3 mb-3">
            <div className="bg-purple-500/20 p-2 rounded-lg">
              <Code className="w-5 h-5 text-purple-400" />
            </div>
            <h3 className="text-lg font-bold text-purple-300">–°–∏–Ω—Ç–∞–∫—Å–∏—Å fetch</h3>
          </div>
          <div className="bg-gray-800 p-3 rounded-lg">
            <pre className="text-purple-300 text-sm"><code>{"fetch(url, options)\n  .then(response => response.json())\n  .then(data => console.log(data))\n  .catch(error => console.error('–û—à–∏–±–∫–∞:', error));"}</code></pre>
          </div>
          <ul className="list-disc pl-5 space-y-2 text-gray-300 text-sm mt-3">
            <li>
              <code className="bg-gray-700 px-1 rounded">url</code> ‚Äî –∞–¥—Ä–µ—Å API-—ç–Ω–¥–ø–æ–∏–Ω—Ç–∞
            </li>
            <li>
              <code className="bg-gray-700 px-1 rounded">options</code> ‚Äî –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∑–∞–ø—Ä–æ—Å–∞ (–º–µ—Ç–æ–¥, –∑–∞–≥–æ–ª–æ–≤–∫–∏, —Ç–µ–ª–æ –∏ —Ç.–¥.)
            </li>
            <li>
              <code className="bg-gray-700 px-1 rounded">response.json()</code> ‚Äî –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –æ—Ç–≤–µ—Ç –≤ JSON
            </li>
          </ul>
        </div>
        
        <div className="mt-6 grid grid-cols-1 md:grid-cols-2 gap-6">
          <div className="bg-gray-900/50 p-4 rounded-xl border border-green-700/30">
            <p className="text-sm text-gray-400 mb-2">–ü—Ä–æ—Å—Ç–æ–π GET-–∑–∞–ø—Ä–æ—Å:</p>
            <pre className="text-green-300 text-sm overflow-x-auto">
              <code>{"fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response => response.json())\n  .then(users => console.log(users));"}</code>
            </pre>
          </div>
          <div className="bg-gray-900/50 p-4 rounded-xl border border-orange-700/30">
            <p className="text-sm text-gray-400 mb-2">POST-–∑–∞–ø—Ä–æ—Å —Å –¥–∞–Ω–Ω—ã–º–∏:</p>
            <pre className="text-orange-300 text-sm overflow-x-auto">
              <code>{"fetch('https://jsonplaceholder.typicode.com/users', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    name: '–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',\n    email: 'user@example.com'\n  })\n})\n  .then(response => response.json())\n  .then(newUser => console.log(newUser));"}</code>
            </pre>
          </div>
        </div>
      </div>

      {/* –ë–∞–∑–æ–≤—ã–π –ø—Ä–∏–º–µ—Ä –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Database className="w-5 h-5 text-cyan-400" />
          –ë–∞–∑–æ–≤—ã–π –ø—Ä–∏–º–µ—Ä –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Å API
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            –î–∞–≤–∞–π—Ç–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –±–∞–∑–æ–≤—ã–π –ø—Ä–∏–º–µ—Ä –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Å API –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏—Ö –≤ React-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ.
          </p>
        </div>
        
        <div className="mt-6 bg-gray-900/50 p-5 rounded-xl border border-blue-700/30">
          <div className="flex items-center gap-3 mb-3">
            <div className="bg-blue-500/20 p-2 rounded-lg">
              <Code className="w-5 h-5 text-blue-400" />
            </div>
            <h3 className="text-lg font-bold text-blue-300">–ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</h3>
          </div>
          <div className="bg-gray-800 p-3 rounded-lg">
            <pre className="text-blue-300 text-sm"><code>{"import { useState, useEffect } from 'react';\n\nfunction UserList() {\n  const [users, setUsers] = useState([]);\n  \n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(data => setUsers(data));\n  }, []);\n  \n  return (\n    <ul>\n      {users.map(user => (\n        <li key={user.id}>\n          {user.name} ({user.email})\n        </li>\n      ))}\n    </ul>\n  );\n}"}</code></pre>
          </div>
          <p className="text-gray-400 text-xs mt-3">
            –≠—Ç–æ—Ç –ø—Ä–∏–º–µ—Ä –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –±–∞–∑–æ–≤—É—é —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é, –Ω–æ –≤ –Ω–µ–º <span className="font-medium">–Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç</span> –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ—à–∏–±–æ–∫.
          </p>
        </div>
      </div>

      {/* –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ—à–∏–±–æ–∫ */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <RefreshCw className="w-5 h-5 text-orange-400" />
          –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π: –∑–∞–≥—Ä—É–∑–∫–∞, –æ—à–∏–±–∫–∏, –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            –ü—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å API <span className="font-medium">–≤—Å–µ–≥–¥–∞</span> –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É—á–∏—Ç—ã–≤–∞—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –ø–æ–Ω–∏–º–∞—Ç—å, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ –∫–∞–∂–¥—ã–π –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏.
          </p>
        </div>
        
        <div className="mt-6 space-y-6">
          <div className="bg-gray-900/50 p-5 rounded-xl border border-green-700/30">
            <div className="flex items-center gap-3 mb-3">
              <div className="bg-green-500/20 p-2 rounded-lg">
                <RefreshCw className="w-5 h-5 text-green-400" />
              </div>
              <h3 className="text-lg font-bold text-green-300">–°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ (loading)</h3>
            </div>
            <p className="text-gray-300 text-sm mb-3">
              –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ <span className="font-medium">–∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è</span>.
            </p>
            <div className="bg-gray-800 p-3 rounded-lg">
              <pre className="text-green-300 text-sm"><code>{"const [loading, setLoading] = useState(true);\n\nuseEffect(() => {\n  setLoading(true);\n  fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(data => {\n      setUsers(data);\n      setLoading(false);\n    });\n}, []);\n\n{loading && <div>–ó–∞–≥—Ä—É–∑–∫–∞...</div>}"}</code></pre>
            </div>
          </div>
          
          <div className="bg-gray-900/50 p-5 rounded-xl border border-red-700/30">
            <div className="flex items-center gap-3 mb-3">
              <div className="bg-red-500/20 p-2 rounded-lg">
                <AlertTriangle className="w-5 h-5 text-red-400" />
              </div>
              <h3 className="text-lg font-bold text-red-300">–°–æ—Å—Ç–æ—è–Ω–∏–µ –æ—à–∏–±–∫–∏ (error)</h3>
            </div>
            <p className="text-gray-300 text-sm mb-3">
              –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é <span className="font-medium">–æ—à–∏–±–∫–∏</span> –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö.
            </p>
            <div className="bg-gray-800 p-3 rounded-lg">
              <pre className="text-red-300 text-sm"><code>{"const [error, setError] = useState(null);\n\nuseEffect(() => {\n  fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏');\n      }\n      return response.json();\n    })\n    .then(data => setUsers(data))\n    .catch(error => setError(error.message));\n}, []);\n\n{error && <div>–û—à–∏–±–∫–∞: {error}</div>}"}</code></pre>
            </div>
          </div>
          
          <div className="bg-gray-900/50 p-5 rounded-xl border border-purple-700/30">
            <div className="flex items-center gap-3 mb-3">
              <div className="bg-purple-500/20 p-2 rounded-lg">
                <Database className="w-5 h-5 text-purple-400" />
              </div>
              <h3 className="text-lg font-bold text-purple-300">–ü—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ</h3>
            </div>
            <p className="text-gray-300 text-sm mb-3">
              –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–ª—É—á–∞–π, –∫–æ–≥–¥–∞ <span className="font-medium">–¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã</span>, –Ω–æ <span className="font-medium">–æ–∫–∞–∑–∞–ª–∏—Å—å –ø—É—Å—Ç—ã–º–∏</span>.
            </p>
            <div className="bg-gray-800 p-3 rounded-lg">
              <pre className="text-purple-300 text-sm"><code>{"{!loading && !error && users.length === 0 && (\n  <div>–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è</div>\n)}\n\n{!loading && !error && users.length > 0 && (\n  <ul>\n    {users.map(user => (\n      <li key={user.id}>{user.name}</li>\n    ))}\n  </ul>\n)}"}</code></pre>
            </div>
          </div>
        </div>
      </div>

      {/* –ü–æ–ª–Ω—ã–π –ø—Ä–∏–º–µ—Ä —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –≤—Å–µ—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Code className="w-5 h-5 text-cyan-400" />
          –ü–æ–ª–Ω—ã–π –ø—Ä–∏–º–µ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –≤—Å–µ—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π
        </h2>
        
        <div className="mt-6 bg-gray-900/50 p-5 rounded-xl border border-yellow-700/30">
          <div className="flex items-center gap-3 mb-3">
            <div className="bg-yellow-500/20 p-2 rounded-lg">
              <Server className="w-5 h-5 text-yellow-400" />
            </div>
            <h3 className="text-lg font-bold text-yellow-300">–ö–æ–º–ø–æ–Ω–µ–Ω—Ç UserList —Å –ø–æ–ª–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π —Å–æ—Å—Ç–æ—è–Ω–∏–π</h3>
          </div>
          <div className="bg-gray-800 p-3 rounded-lg">
            <pre className="text-yellow-300 text-sm"><code>{"import { useState, useEffect } from 'react';\n\nfunction UserList() {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  useEffect(() => {\n    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö\n    const fetchUsers = () => {\n      setLoading(true);\n      setError(null);\n      \n      fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => {\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          return response.json();\n        })\n        .then(data => {\n          setUsers(data);\n          setLoading(false);\n        })\n        .catch(error => {\n          setError(error.message);\n          setLoading(false);\n        });\n    };\n    \n    fetchUsers();\n  }, []);\n  \n  // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏\n  if (loading) {\n    return <div className=\"loading\">–ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...</div>;\n  }\n  \n  // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–∫–∏\n  if (error) {\n    return (\n      <div className=\"error\">\n        <p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {error}</p>\n        <button onClick={() => window.location.reload()}>\n          –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É\n        </button>\n      </div>\n    );\n  }\n  \n  // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—É—Å—Ç—ã—Ö –¥–∞–Ω–Ω—ã—Ö\n  if (users.length === 0) {\n    return <div className=\"no-data\">–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è</div>;\n  }\n  \n  // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö\n  return (\n    <div>\n      <h2>–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</h2>\n      <ul>\n        {users.map(user => (\n          <li key={user.id}>\n            <strong>{user.name}</strong> - {user.email}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}"}</code></pre>
          </div>
        </div>
      </div>

      {/* –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <AlertTriangle className="w-5 h-5 text-red-400" />
          –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            –ü—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º–∏ –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏ (—Ç–∞–∫–∏–º–∏ –∫–∞–∫ <code className="bg-gray-700 px-1 rounded">fetch</code>) –≤–∞–∂–Ω–æ <span className="font-medium">–æ—á–∏—â–∞—Ç—å</span> –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–∏ <span className="font-medium">—Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏</span> –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å <span className="font-medium">—É—Ç–µ—á–µ–∫ –ø–∞–º—è—Ç–∏</span> –∏ <span className="font-medium">–æ—à–∏–±–æ–∫</span>.
          </p>
          <p>
            –ü—Ä–æ–±–ª–µ–º–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç, –∫–æ–≥–¥–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç <span className="font-medium">—Ä–∞–∑–º–æ–Ω—Ç–∏—Ä—É–µ—Ç—Å—è</span> –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞, –Ω–æ –∑–∞–ø—Ä–æ—Å <span className="font-medium">–≤—Å—ë —Ä–∞–≤–Ω–æ –ø—ã—Ç–∞–µ—Ç—Å—è –æ–±–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ</span> —É–∂–µ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.
          </p>
        </div>
        
        <div className="mt-6 grid grid-cols-1 md:grid-cols-2 gap-6">
          <div className="bg-gray-900/50 p-4 rounded-xl border border-red-700/30">
            <p className="text-sm text-gray-400 mb-2">‚ùå –ü—Ä–æ–±–ª–µ–º–∞ –±–µ–∑ –æ—á–∏—Å—Ç–∫–∏:</p>
            <pre className="text-red-300 text-sm overflow-x-auto">
              <code>{"// –≠—Ç–æ –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å –æ—à–∏–±–∫—É!\nuseEffect(() => {\n  fetch('https://api.example.com/data')\n    .then(response => response.json())\n    .then(data => setUsers(data)); // –ï—Å–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω, –±—É–¥–µ—Ç –æ—à–∏–±–∫–∞!\n}, []);"}</code>
            </pre>
          </div>
          <div className="bg-gray-900/50 p-4 rounded-xl border border-green-700/30">
            <p className="text-sm text-gray-400 mb-2">‚úÖ –†–µ—à–µ–Ω–∏–µ —Å –æ—á–∏—Å—Ç–∫–æ–π:</p>
            <pre className="text-green-300 text-sm overflow-x-auto">
              <code>{"useEffect(() => {\n  let isMounted = true;\n  \n  fetch('https://api.example.com/data')\n    .then(response => response.json())\n    .then(data => {\n      if (isMounted) {\n        setUsers(data);\n      }\n    });\n  \n  return () => {\n    isMounted = false;\n  };\n}, []);"}</code>
            </pre>
          </div>
        </div>
        
        <div className="mt-6 bg-gray-900/50 p-5 rounded-xl border border-purple-700/30">
          <div className="flex items-center gap-3 mb-3">
            <div className="bg-purple-500/20 p-2 rounded-lg">
              <AlertTriangle className="w-5 h-5 text-purple-400" />
            </div>
            <h3 className="text-lg font-bold text-purple-300">–ü–æ–ª–Ω—ã–π –ø—Ä–∏–º–µ—Ä —Å –æ—á–∏—Å—Ç–∫–æ–π</h3>
          </div>
          <div className="bg-gray-800 p-3 rounded-lg">
            <pre className="text-purple-300 text-sm"><code>{"import { useState, useEffect } from 'react';\n\nfunction SafeUserList() {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  useEffect(() => {\n    // –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n    let isMounted = true;\n    \n    const fetchUsers = async () => {\n      try {\n        const response = await fetch('https://jsonplaceholder.typicode.com/users');\n        \n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        \n        const data = await response.json();\n        \n        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –≤—Å—ë –µ—â—ë —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω\n        if (isMounted) {\n          setUsers(data);\n          setLoading(false);\n        }\n      } catch (error) {\n        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –≤—Å—ë –µ—â—ë —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω\n        if (isMounted) {\n          setError(error.message);\n          setLoading(false);\n        }\n      }\n    };\n    \n    fetchUsers();\n    \n    // –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  \n  // ... –æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞\n}"}</code></pre>
          </div>
        </div>
      </div>

      {/* –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ async/await */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Code className="w-5 h-5 text-blue-400" />
          –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ async/await
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            –í–º–µ—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è <code className="bg-gray-700 px-1 rounded">.then()</code> –∏ <code className="bg-gray-700 px-1 rounded">.catch()</code>, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å <span className="font-medium">async/await</span> –¥–ª—è –±–æ–ª–µ–µ <span className="font-medium">—á–∏—Ç–∞–µ–º–æ–≥–æ</span> –∏ <span className="font-medium">–ø–æ–Ω—è—Ç–Ω–æ–≥–æ</span> –∫–æ–¥–∞.
          </p>
        </div>
        
        <div className="mt-6 grid grid-cols-1 md:grid-cols-2 gap-6">
          <div className="bg-gray-900/50 p-4 rounded-xl border border-cyan-700/30">
            <p className="text-sm text-gray-400 mb-2">–° –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º .then()/.catch():</p>
            <pre className="text-cyan-300 text-sm overflow-x-auto">
              <code>{"useEffect(() => {\n  fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏');\n      }\n      return response.json();\n    })\n    .then(data => setUsers(data))\n    .catch(error => setError(error.message));\n}, []);"}</code>
            </pre>
          </div>
          <div className="bg-gray-900/50 p-4 rounded-xl border border-green-700/30">
            <p className="text-sm text-gray-400 mb-2">–° –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º async/await:</p>
            <pre className="text-green-300 text-sm overflow-x-auto">
              <code>{"useEffect(() => {\n  const fetchUsers = async () => {\n    try {\n      const response = await fetch('https://jsonplaceholder.typicode.com/users');\n      \n      if (!response.ok) {\n        throw new Error('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏');\n      }\n      \n      const data = await response.json();\n      setUsers(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  \n  fetchUsers();\n}, []);"}</code>
            </pre>
          </div>
        </div>
        
        <div className="mt-4 p-3 bg-blue-900/20 border border-blue-700/30 rounded-lg">
          <p className="text-blue-300 text-sm flex items-start gap-2">
            <span className="font-medium">üí° –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ async/await:</span>
            <span>
              <ul className="list-disc pl-5 space-y-1">
                <li>–ë–æ–ª–µ–µ <span className="font-medium">–ª–∏–Ω–µ–π–Ω—ã–π</span> –∏ —á–∏—Ç–∞–µ–º—ã–π –∫–æ–¥</li>
                <li>–ü—Ä–æ—â–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å <span className="font-medium">–æ—à–∏–±–∫–∏</span> —Å –ø–æ–º–æ—â—å—é try/catch</li>
                <li>–õ–µ–≥—á–µ <span className="font-medium">–æ—Ç–ª–∞–∂–∏–≤–∞—Ç—å</span> –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–æ–¥</li>
              </ul>
            </span>
          </p>
        </div>
      </div>

      {/* –ó–∞–∫–ª—é—á–µ–Ω–∏–µ */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <div className="flex items-start gap-3">
          <div className="bg-green-500/20 p-2 rounded-lg flex-shrink-0">
            <Server className="w-5 h-5 text-green-400" />
          </div>
          <div>
            <h3 className="font-bold text-white mb-2">–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! üéâ</h3>
            <p className="text-gray-300">
              –¢–µ–ø–µ—Ä—å –≤—ã –ø–æ–Ω–∏–º–∞–µ—Ç–µ, —á—Ç–æ —Ç–∞–∫–æ–µ API –∏ –∫–∞–∫ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –Ω–∏–º–∏ –≤ React —Å –ø–æ–º–æ—â—å—é <code className="bg-gray-700 px-1 rounded">fetch</code>. –í—ã –Ω–∞—É—á–∏–ª–∏—Å—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å API (–∑–∞–≥—Ä—É–∑–∫–∞, –æ—à–∏–±–∫–∏, –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ), –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å async/await –¥–ª—è –±–æ–ª–µ–µ —á–∏—Ç–∞–µ–º–æ–≥–æ –∫–æ–¥–∞ –∏ —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å –æ—á–∏—Å—Ç–∫—É –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —É—Ç–µ—á–µ–∫ –ø–∞–º—è—Ç–∏. –†–∞–±–æ—Ç–∞ —Å API ‚Äî —ç—Ç–æ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π –Ω–∞–≤—ã–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—É—á–∞—é—Ç –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞. –í —Å–ª–µ–¥—É—é—â–∏—Ö —É—Ä–æ–∫–∞—Ö –º—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –±–æ–ª–µ–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ–º—ã, —Ç–∞–∫–∏–µ –∫–∞–∫ POST-–∑–∞–ø—Ä–æ—Å—ã, –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º —Å –æ—Ç–ø—Ä–∞–≤–∫–æ–π –¥–∞–Ω–Ω—ã—Ö, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API (–Ω–∞–ø—Ä–∏–º–µ—Ä, axios) –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏.
            </p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Part1;