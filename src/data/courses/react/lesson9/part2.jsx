// src/data/courses/react/lesson9/part2.jsx
import React, { useState } from 'react';
import { CheckCircle, XCircle, RotateCcw, Award, Eye, ToggleLeft, Code, Database } from 'lucide-react';

const Part2 = () => {
  // –î–∞–Ω–Ω—ã–µ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã –ø–æ —Ç–µ–º–µ —É—Ä–æ–∫–∞
  const quizData = [
    {
      id: 1,
      question: "–ß—Ç–æ —Ç–∞–∫–æ–µ —É—Å–ª–æ–≤–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –≤ React?",
      options: [
        "–ü—Ä–æ—Ü–µ—Å—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞",
        "–¢–µ—Ö–Ω–∏–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞–∑–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
        "–ú–µ—Ç–æ–¥ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ React-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π",
        "–°–ø–æ—Å–æ–± —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å –ø–æ–º–æ—â—å—é CSS"
      ],
      correctAnswer: 1 // –¢–µ—Ö–Ω–∏–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞–∑–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    },
    {
      id: 2,
      question: "–ö–∞–∫–æ–π –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –ò (&&) –¥–ª—è —É—Å–ª–æ–≤–Ω–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞?",
      options: [
        "{isLoggedIn && <p>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</p>}",
        "{isLoggedIn ? <p>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</p> : <p>–í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É</p>}",
        "if (isLoggedIn) { <p>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</p> }",
        "{isLoggedIn || <p>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</p>}"
      ],
      correctAnswer: 0 // {isLoggedIn && <p>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</p>}
    },
    {
      id: 3,
      question: "–ö–∞–∫–æ–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ç–µ—Ä–Ω–∞—Ä–Ω–æ–≥–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –≤ JSX?",
      options: [
        "condition ? value1 : value2",
        "condition && value1 || value2",
        "if (condition) { value1 } else { value2 }",
        "condition : value1 ? value2"
      ],
      correctAnswer: 0 // condition ? value1 : value2
    },
    {
      id: 4,
      question: "–ß—Ç–æ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–æ, –µ—Å–ª–∏ –≤ –≤—ã—Ä–∞–∂–µ–Ω–∏–∏ {false && <div>–ü—Ä–∏–≤–µ—Ç</div>}?",
      options: [
        "<div>–ü—Ä–∏–≤–µ—Ç</div>",
        "false",
        "null (–Ω–∏—á–µ–≥–æ –Ω–µ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—Å—è)",
        "–û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Å–æ–ª–∏"
      ],
      correctAnswer: 2 // null (–Ω–∏—á–µ–≥–æ –Ω–µ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—Å—è)
    },
    {
      id: 5,
      question: "–î–ª—è —á–µ–≥–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π –≤ React-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö?",
      options: [
        "–î–ª—è —É–ª—É—á—à–µ–Ω–∏—è –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
        "–î–ª—è –∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ —Ç–µ–∫—É—â–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π",
        "–î–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
        "–î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"
      ],
      correctAnswer: 1 // –î–ª—è –∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ —Ç–µ–∫—É—â–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
    },
    {
      id: 6,
      question: "–ö–∞–∫–æ–π –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –ù–ï —è–≤–ª—è–µ—Ç—Å—è —Å–ø–æ—Å–æ–±–æ–º —É—Å–ª–æ–≤–Ω–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –≤ React?",
      options: [
        "–õ–æ–≥–∏—á–µ—Å–∫–æ–µ –ò (&&)",
        "–¢–µ—Ä–Ω–∞—Ä–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä (?:)",
        "–ú–µ—Ç–æ–¥ map() –¥–ª—è –º–∞—Å—Å–∏–≤–æ–≤",
        "if/else –≤–Ω–µ JSX"
      ],
      correctAnswer: 2 // –ú–µ—Ç–æ–¥ map() –¥–ª—è –º–∞—Å—Å–∏–≤–æ–≤
    },
    {
      id: 7,
      question: "–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç—Ä–µ–Ω–¥–µ—Ä–∏—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç ErrorComponent —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è error –Ω–µ —Ä–∞–≤–Ω–∞ null?",
      options: [
        "{error && <ErrorComponent message={error} />}",
        "{error ? <ErrorComponent message={error} /> : null}",
        "{if (error) <ErrorComponent message={error} />}",
        "–í—Å–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ"
      ],
      correctAnswer: 3 // –í—Å–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ
    },
    {
      id: 8,
      question: "–ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –∫–æ–¥–µ: {0 && <p>–¢–µ—Å—Ç</p>}?",
      options: [
        "–û—Ç–æ–±—Ä–∞–∑–∏—Ç—Å—è <p>–¢–µ—Å—Ç</p>",
        "–ù–∏—á–µ–≥–æ –Ω–µ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—Å—è",
        "–û—Ç–æ–±—Ä–∞–∑–∏—Ç—Å—è 0",
        "–ü—Ä–æ–∏–∑–æ–π–¥–µ—Ç –æ—à–∏–±–∫–∞"
      ],
      correctAnswer: 1 // –ù–∏—á–µ–≥–æ –Ω–µ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—Å—è
    },
    {
      id: 9,
      question: "–ö–∞–∫–æ–π –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –ø—Ä–∏–º–µ—Ä–æ–≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏?",
      options: [
        "if (loading) return <div>–ó–∞–≥—Ä—É–∑–∫–∞...</div>;",
        "{loading && <div>–ó–∞–≥—Ä—É–∑–∫–∞...</div>}",
        "{loading ? <div>–ó–∞–≥—Ä—É–∑–∫–∞...</div> : null}",
        "–í—Å–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ"
      ],
      correctAnswer: 3 // –í—Å–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ
    },
    {
      id: 10,
      question: "–ö–æ–≥–¥–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å if/else –≤–Ω–µ JSX –≤–º–µ—Å—Ç–æ —Ç–µ—Ä–Ω–∞—Ä–Ω–æ–≥–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞?",
      options: [
        "–ö–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –º–µ–∂–¥—É –¥–≤—É–º—è –ø—Ä–æ—Å—Ç—ã–º–∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏",
        "–ö–æ–≥–¥–∞ —É—Å–ª–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Å–ª–æ–∂–Ω–æ–π –∏ —Ç–µ—Ä–Ω–∞—Ä–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä —Ç—Ä—É–¥–Ω–æ —á–∏—Ç–∞–µ—Ç—Å—è",
        "–ö–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∏—Å—Ç–∏–Ω–Ω–æ–º —É—Å–ª–æ–≤–∏–∏",
        "–ö–æ–≥–¥–∞ —Ä–∞–±–æ—Ç–∞–µ–º —Å —á–∏—Å–ª–æ–≤—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏"
      ],
      correctAnswer: 1 // –ö–æ–≥–¥–∞ —É—Å–ª–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Å–ª–æ–∂–Ω–æ–π –∏ —Ç–µ—Ä–Ω–∞—Ä–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä —Ç—Ä—É–¥–Ω–æ —á–∏—Ç–∞–µ—Ç—Å—è
    }
  ];

  // –°–æ—Å—Ç–æ—è–Ω–∏—è –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
  const [userAnswers, setUserAnswers] = useState(Array(quizData.length).fill(null));
  const [submitted, setSubmitted] = useState(false);
  const [score, setScore] = useState(0);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –æ—Ç–≤–µ—Ç–∞
  const handleAnswerSelect = (questionIndex, optionIndex) => {
    if (submitted) return; // –ë–ª–æ–∫–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
    const newAnswers = [...userAnswers];
    newAnswers[questionIndex] = optionIndex;
    setUserAnswers(newAnswers);
  };

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤
  const handleSubmit = () => {
    let newScore = 0;
    userAnswers.forEach((answer, index) => {
      if (answer === quizData[index].correctAnswer) {
        newScore++;
      }
    });
    setScore(newScore);
    setSubmitted(true);
  };

  // –°–±—Ä–æ—Å –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
  const handleReset = () => {
    setUserAnswers(Array(quizData.length).fill(null));
    setSubmitted(false);
    setScore(0);
  };

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, –≤—Å–µ –ª–∏ –≤–æ–ø—Ä–æ—Å—ã –æ—Ç–≤–µ—á–µ–Ω—ã
  const allAnswered = userAnswers.every(answer => answer !== null);

  return (
    <div className="space-y-6">
      <div className="bg-gradient-to-r from-blue-900/30 to-purple-900/30 backdrop-blur-sm border border-blue-700/30 rounded-2xl p-6 shadow-lg">
        <div className="flex items-start gap-4">
          <div className="bg-blue-500/20 p-3 rounded-lg">
            <Eye className="w-6 h-6 text-blue-400" />
          </div>
          <div>
            <h1 className="text-2xl md:text-3xl font-bold text-white mb-2">üß† –í–∏–∫—Ç–æ—Ä–∏–Ω–∞: –£—Å–ª–æ–≤–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã</h1>
            <p className="text-gray-300">
              –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è –ø–æ —Ç–µ–º–µ <span className="font-medium text-yellow-400">—É—Å–ª–æ–≤–Ω–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞</span> –∏ <span className="font-medium text-yellow-400">–∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ —Å–æ—Å—Ç–æ—è–Ω–∏–π</span> –≤ React.
            </p>
            <p className="text-gray-400 text-sm mt-2">–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞.</p>
          </div>
        </div>
      </div>

      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        {quizData.map((q, questionIndex) => {
          const isSelected = userAnswers[questionIndex] !== null;
          const isCorrect = userAnswers[questionIndex] === q.correctAnswer;
          
          return (
            <div 
              key={q.id} 
              className={`mb-8 last:mb-0 p-4 rounded-lg ${
                submitted && isSelected && isCorrect 
                  ? 'bg-green-900/20 border border-green-700/30' 
                  : submitted && isSelected && !isCorrect 
                    ? 'bg-red-900/20 border border-red-700/30' 
                    : 'bg-gray-900/50'
              }`}
            >
              <h3 className="font-medium text-white mb-3 flex items-start gap-2">
                <span className="flex-shrink-0">{questionIndex + 1}.</span>
                <span>{q.question}</span>
              </h3>
              <div className="space-y-2">
                {q.options.map((option, optionIndex) => {
                  let optionStyle = "block w-full text-left p-3 rounded-lg transition-colors duration-200 ";
                  if (submitted) {
                    if (optionIndex === q.correctAnswer) {
                      optionStyle += "bg-green-700 text-white"; // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
                    } else if (optionIndex === userAnswers[questionIndex] && optionIndex !== q.correctAnswer) {
                      optionStyle += "bg-red-700 text-white"; // –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
                    } else {
                      optionStyle += "bg-gray-800 text-gray-400 cursor-not-allowed"; // –î—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
                    }
                  } else {
                    // –°—Ç–∏–ª–∏ –¥–æ –æ—Ç–ø—Ä–∞–≤–∫–∏
                    if (userAnswers[questionIndex] === optionIndex) {
                      optionStyle += "bg-blue-600 text-white"; // –í—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
                    } else {
                      optionStyle += "bg-gray-800 hover:bg-gray-700 text-gray-300"; // –ù–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–π
                    }
                  }

                  return (
                    <button
                      key={optionIndex}
                      onClick={() => handleAnswerSelect(questionIndex, optionIndex)}
                      className={optionStyle}
                      disabled={submitted} // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
                    >
                      <div className="flex items-center">
                        <span className="mr-2 font-mono flex-shrink-0">{String.fromCharCode(65 + optionIndex)}.</span>
                        <span>{option}</span>
                        {submitted && optionIndex === q.correctAnswer && (
                          <CheckCircle className="ml-auto w-5 h-5 text-green-400 flex-shrink-0" />
                        )}
                        {submitted && optionIndex === userAnswers[questionIndex] && optionIndex !== q.correctAnswer && (
                          <XCircle className="ml-auto w-5 h-5 text-red-400 flex-shrink-0" />
                        )}
                        {!submitted && userAnswers[questionIndex] === optionIndex && (
                          <span className="ml-auto w-5 h-5 rounded-full bg-blue-400 flex-shrink-0"></span>
                        )}
                      </div>
                    </button>
                  );
                })}
              </div>
              {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –æ—Ç–≤–µ—Ç–∞ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ */}
              {submitted && isSelected && (
                <div className={`mt-3 text-sm p-2 rounded flex items-start gap-2 ${isCorrect ? 'bg-green-900/30 text-green-300' : 'bg-red-900/30 text-red-300'}`}>
                  {isCorrect ? (
                    <>
                      <CheckCircle className="w-5 h-5 flex-shrink-0 mt-0.5" />
                      <span>–í–µ—Ä–Ω–æ!</span>
                    </>
                  ) : (
                    <>
                      <XCircle className="w-5 h-5 flex-shrink-0 mt-0.5" />
                      <span>–ù–µ–≤–µ—Ä–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {String.fromCharCode(65 + q.correctAnswer)}.</span>
                    </>
                  )}
                </div>
              )}
            </div>
          );
        })}

        {/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
        <div className="flex flex-wrap items-center justify-between gap-4 pt-4 mt-6 border-t border-gray-700">
          {!submitted ? (
            <button
              onClick={handleSubmit}
              disabled={!allAnswered}
              className={`px-6 py-3 rounded-lg font-medium flex items-center gap-2 transition-all duration-300 ${
                allAnswered
                  ? 'bg-gradient-to-r from-green-600 to-green-700 hover:from-green-700 hover:to-green-800 text-white shadow-lg hover:shadow-xl transform hover:scale-[1.02] cursor-pointer'
                  : 'bg-gray-700 text-gray-500 cursor-not-allowed'
              }`}
            >
              <CheckCircle className="w-5 h-5" />
              –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–≤–µ—Ç—ã
            </button>
          ) : (
            <div className="flex flex-wrap items-center gap-4">
              <div className="flex items-center gap-2 bg-gray-900 px-4 py-3 rounded-lg">
                <Award className="w-5 h-5 text-yellow-400 flex-shrink-0" />
                <span className="font-bold text-white">–†–µ–∑—É–ª—å—Ç–∞—Ç: </span>
                <span className="font-bold text-xl text-yellow-400">{score}</span>
                <span className="text-gray-400">/ {quizData.length}</span>
              </div>
              <button
                onClick={handleReset}
                className="px-6 py-3 bg-gray-700 hover:bg-gray-600 text-white rounded-lg font-medium flex items-center gap-2 transition-colors duration-200 whitespace-nowrap"
              >
                <RotateCcw className="w-5 h-5" />
                –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
              </button>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default Part2;