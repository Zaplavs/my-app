// src/data/courses/react/lesson4/part1.jsx
import React from 'react';
import { Database, RefreshCw, Edit3, ToggleLeft, Hash, FileText } from 'lucide-react';

const Part1 = () => {
  return (
    <div className="space-y-8 text-gray-200">
      {/* –í—Å—Ç—É–ø–ª–µ–Ω–∏–µ */}
      <div className="bg-gradient-to-r from-blue-900/30 to-purple-900/30 backdrop-blur-sm border border-blue-700/30 rounded-2xl p-6 shadow-lg">
        <div className="flex items-start gap-4">
          <div className="bg-blue-500/20 p-3 rounded-lg">
            <Database className="w-6 h-6 text-blue-400" />
          </div>
          <div>
            <h1 className="text-2xl md:text-3xl font-bold text-white mb-2">üìä –£—Ä–æ–∫ 4: –•—É–∫ useState ‚Äî —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º</h1>
            <h2 className="text-xl font-semibold text-blue-300 mb-3">–†–∞–±–æ—Ç–∞ —Å –∏–∑–º–µ–Ω—è–µ–º—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –≤ React</h2>
            <p className="text-gray-300">
              <span className="font-medium text-yellow-400">üéØ –¶–µ–ª—å —É—Ä–æ–∫–∞:</span> –ü–æ–Ω—è—Ç—å, —á—Ç–æ —Ç–∞–∫–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (state) –≤ React, –Ω–∞—É—á–∏—Ç—å—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ö—É–∫ <code className="bg-gray-700 px-1.5 py-0.5 rounded text-green-300">useState</code> –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–∑–º–µ–Ω—è–µ–º—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏, –æ—Å–≤–æ–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —á–µ—Ä–µ–∑ —Å–µ—Ç—Ç–µ—Ä-—Ñ—É–Ω–∫—Ü–∏—é –∏ –ø—Ä–∏–º–µ–Ω—è—Ç—å –µ–≥–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤.
            </p>
          </div>
        </div>
      </div>

      {/* –ß—Ç–æ —Ç–∞–∫–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ React? */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Database className="w-5 h-5 text-green-400" />
          –ß—Ç–æ —Ç–∞–∫–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (state) –≤ React?
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            <span className="font-medium text-green-300">–°–æ—Å—Ç–æ—è–Ω–∏–µ (state)</span> –≤ React ‚Äî —ç—Ç–æ <span className="font-medium">–¥–∞–Ω–Ω—ã–µ</span>, –∫–æ—Ç–æ—Ä—ã–µ <span className="font-medium">–∏–∑–º–µ–Ω—è—é—Ç—Å—è</span> —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º –∏ <span className="font-medium">–≤–ª–∏—è—é—Ç</span> –Ω–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞. –ö–æ–≥–¥–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è, React <span className="font-medium">–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç</span> (—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏—Ç) –∫–æ–º–ø–æ–Ω–µ–Ω—Ç, —á—Ç–æ–±—ã –æ—Ç—Ä–∞–∑–∏—Ç—å –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ.
          </p>
          <p>
            –ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–∞–∫ <span className="font-medium">–ø–∞–º—è—Ç—å</span> –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞. –í –æ—Ç–ª–∏—á–∏–µ –æ—Ç –æ–±—ã—á–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–µ –∏—Å—á–µ–∑–∞—é—Ç –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ä–µ—Ä–µ–Ω–¥–µ—Ä–µ, —Å–æ—Å—Ç–æ—è–Ω–∏–µ <span className="font-medium">—Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è</span> –º–µ–∂–¥—É —Ä–µ–Ω–¥–µ—Ä–∞–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.
          </p>
        </div>
        
        <div className="mt-6 grid grid-cols-1 md:grid-cols-2 gap-6">
          <div className="bg-gray-900/50 p-4 rounded-xl border border-red-700/30">
            <p className="text-sm text-gray-400 mb-2">–û–±—ã—á–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è (–Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è):</p>
            <pre className="text-red-300 text-sm overflow-x-auto">
              <code>{`function Counter() {\n  let count = 0; // –û–±—ã—á–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è\n  \n  const handleClick = () => {\n    count++; // –ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–µ –æ—Ç—Ä–∞–∑–∏—Ç—Å—è –≤ UI\n    console.log(count); // –í –∫–æ–Ω—Å–æ–ª–∏ –±—É–¥–µ—Ç –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ\n  };\n  \n  return (\n    <div>\n      <p>–°—á–µ—Ç—á–∏–∫: {count}</p> {/* –í—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç 0 */}\n      <button onClick={handleClick}>–£–≤–µ–ª–∏—á–∏—Ç—å</button>\n    </div>\n  );\n}`}</code>
            </pre>
          </div>
          <div className="bg-gray-900/50 p-4 rounded-xl border border-green-700/30">
            <p className="text-sm text-gray-400 mb-2">–°–æ—Å—Ç–æ—è–Ω–∏–µ (—Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç UI):</p>
            <pre className="text-green-300 text-sm overflow-x-auto">
              <code>{`function Counter() {\n  const [count, setCount] = useState(0); // –°–æ—Å—Ç–æ—è–Ω–∏–µ\n  \n  const handleClick = () => {\n    setCount(count + 1); // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è\n  };\n  \n  return (\n    <div>\n      <p>–°—á–µ—Ç—á–∏–∫: {count}</p> {/* –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è */}\n      <button onClick={handleClick}>–£–≤–µ–ª–∏—á–∏—Ç—å</button>\n    </div>\n  );\n}`}</code>
            </pre>
          </div>
        </div>
        
        <div className="mt-4 p-3 bg-blue-900/20 border border-blue-700/30 rounded-lg">
          <p className="text-blue-300 text-sm flex items-start gap-2">
            <span className="font-medium">üí° –ö–ª—é—á–µ–≤—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è:</span>
            <span>
              –°–æ—Å—Ç–æ—è–Ω–∏–µ <span className="font-medium">–∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–æ</span> –≤–Ω—É—Ç—Ä–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞, <span className="font-medium">—Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è</span> –º–µ–∂–¥—É —Ä–µ–Ω–¥–µ—Ä–∞–º–∏ –∏ <span className="font-medium">–≤—ã–∑—ã–≤–∞–µ—Ç —Ä–µ—Ä–µ–Ω–¥–µ—Ä</span> –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏. –≠—Ç–æ –¥–µ–ª–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å <span className="font-medium">–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º</span>.
            </span>
          </p>
        </div>
      </div>

      {/* –ß—Ç–æ —Ç–∞–∫–æ–µ —Ö—É–∫–∏? */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <RefreshCw className="w-5 h-5 text-yellow-400" />
          –ß—Ç–æ —Ç–∞–∫–æ–µ —Ö—É–∫–∏ (hooks)?
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            <span className="font-medium text-yellow-300">–•—É–∫–∏</span> ‚Äî —ç—Ç–æ <span className="font-medium">—Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏</span> –≤ React, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–∑–≤–æ–ª—è—é—Ç <span className="font-medium">"–ø–æ–¥—Ü–µ–ø–∏—Ç—å—Å—è"</span> –∫ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º React –∏–∑ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤. –î–æ –ø–æ—è–≤–ª–µ–Ω–∏—è —Ö—É–∫–æ–≤ —Ç–∞–∫–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±—ã–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –≤ –∫–ª–∞—Å—Å–æ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö.
          </p>
          <p>
            –•—É–∫–∏ –ø–æ–∑–≤–æ–ª—è—é—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —ç—Ñ—Ñ–µ–∫—Ç—ã –∏ –¥—Ä—É–≥–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ React –±–µ–∑ –Ω–∞–ø–∏—Å–∞–Ω–∏—è –∫–ª–∞—Å—Å–æ–≤. –û–Ω–∏ <span className="font-medium">–Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å "use"</span> (–Ω–∞–ø—Ä–∏–º–µ—Ä, <code className="bg-gray-700 px-1 rounded">useState</code>, <code className="bg-gray-700 px-1 rounded">useEffect</code>) –∏ <span className="font-medium">–¥–æ–ª–∂–Ω—ã –≤—ã–∑—ã–≤–∞—Ç—å—Å—è</span> –Ω–∞ <span className="font-medium">–≤–µ—Ä—Ö–Ω–µ–º —É—Ä–æ–≤–Ω–µ</span> –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∏–ª–∏ –¥—Ä—É–≥–∏—Ö —Ö—É–∫–æ–≤.
          </p>
        </div>
        
        <div className="mt-6 bg-gray-900/50 p-5 rounded-xl border border-purple-700/30">
          <div className="flex items-center gap-3 mb-3">
            <div className="bg-purple-500/20 p-2 rounded-lg">
              <Edit3 className="w-5 h-5 text-purple-400" />
            </div>
            <h3 className="text-lg font-bold text-purple-300">–ü—Ä–∞–≤–∏–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ö—É–∫–æ–≤</h3>
          </div>
          <ul className="list-disc pl-5 space-y-2 text-gray-300 text-sm">
            <li>
              <span className="font-medium">–í—ã–∑—ã–≤–∞–π—Ç–µ —Ö—É–∫–∏ —Ç–æ–ª—å–∫–æ –Ω–∞ –≤–µ—Ä—Ö–Ω–µ–º —É—Ä–æ–≤–Ω–µ</span> ‚Äî –Ω–µ –≤–Ω—É—Ç—Ä–∏ —Ü–∏–∫–ª–æ–≤, —É—Å–ª–æ–≤–∏–π –∏–ª–∏ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π.
            </li>
            <li>
              <span className="font-medium">–í—ã–∑—ã–≤–∞–π—Ç–µ —Ö—É–∫–∏ —Ç–æ–ª—å–∫–æ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤</span> –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Ö—É–∫–æ–≤.
            </li>
            <li>
              <span className="font-medium">–ù–∞–∑–≤–∞–Ω–∏—è —Ö—É–∫–æ–≤ –¥–æ–ª–∂–Ω—ã –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å "use"</span> ‚Äî —ç—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç React –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏—Ö –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å.
            </li>
          </ul>
          <div className="mt-3 grid grid-cols-1 md:grid-cols-2 gap-4">
            <div className="bg-gray-800 p-3 rounded-lg">
              <p className="text-xs text-gray-400 mb-1">‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ:</p>
              <pre className="text-green-300 text-xs"><code>{`function MyComponent() {\n  const [count, setCount] = useState(0);\n  \n  if (count > 10) {\n    // –£—Å–ª–æ–≤–∏–µ –≤–Ω—É—Ç—Ä–∏, –Ω–æ —Ö—É–∫ –Ω–∞ –≤–µ—Ä—Ö–Ω–µ–º —É—Ä–æ–≤–Ω–µ\n  }\n}`}</code></pre>
            </div>
            <div className="bg-gray-800 p-3 rounded-lg">
              <p className="text-xs text-gray-400 mb-1">‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ:</p>
              <pre className="text-red-300 text-xs"><code>{`function MyComponent() {\n  if (condition) {\n    const [count, setCount] = useState(0); // –û–®–ò–ë–ö–ê!\n  }\n}`}</code></pre>
            </div>
          </div>
        </div>
      </div>

      {/* –•—É–∫ useState –ø–æ–¥—Ä–æ–±–Ω–æ */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Hash className="w-5 h-5 text-cyan-400" />
          –•—É–∫ useState ‚Äî –ø–æ–¥—Ä–æ–±–Ω–æ–µ –∏–∑—É—á–µ–Ω–∏–µ
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            <code className="bg-gray-700 px-1.5 py-0.5 rounded text-cyan-300">useState</code> ‚Äî —ç—Ç–æ —Å–∞–º—ã–π –±–∞–∑–æ–≤—ã–π –∏ —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π —Ö—É–∫ –≤ React. –û–Ω –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å <span className="font-medium">—Å–æ—Å—Ç–æ—è–Ω–∏–µ</span> –≤ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç.
          </p>
        </div>
        
        <div className="mt-6 space-y-6">
          {/* –ò–º–ø–æ—Ä—Ç */}
          <div className="bg-gray-900/50 p-5 rounded-xl border border-blue-700/30">
            <div className="flex items-center gap-3 mb-3">
              <div className="bg-blue-500/20 p-2 rounded-lg">
                <FileText className="w-5 h-5 text-blue-400" />
              </div>
              <h3 className="text-lg font-bold text-blue-300">–ò–º–ø–æ—Ä—Ç useState</h3>
            </div>
            <div className="bg-gray-800 p-3 rounded-lg">
              <pre className="text-blue-300 text-sm"><code>{`import { useState } from 'react';`}</code></pre>
            </div>
            <p className="text-gray-400 text-xs mt-2">
              useState –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ react.
            </p>
          </div>
          
          {/* –°–∏–Ω—Ç–∞–∫—Å–∏—Å */}
          <div className="bg-gray-900/50 p-5 rounded-xl border border-green-700/30">
            <div className="flex items-center gap-3 mb-3">
              <div className="bg-green-500/20 p-2 rounded-lg">
                <Hash className="w-5 h-5 text-green-400" />
              </div>
              <h3 className="text-lg font-bold text-green-300">–°–∏–Ω—Ç–∞–∫—Å–∏—Å useState</h3>
            </div>
            <div className="bg-gray-800 p-3 rounded-lg">
              <pre className="text-green-300 text-sm"><code>{`const [state, setState] = useState(initialValue);`}</code></pre>
            </div>
            <ul className="list-disc pl-5 space-y-2 text-gray-300 text-xs mt-3">
              <li>
                <code className="bg-gray-700 px-1 rounded">state</code> ‚Äî <span className="font-medium">–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å–æ—Å—Ç–æ—è–Ω–∏—è</span>, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
              </li>
              <li>
                <code className="bg-gray-700 px-1 rounded">setState</code> ‚Äî <span className="font-medium">—Ñ—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è</span> (—Å–µ—Ç—Ç–µ—Ä).
              </li>
              <li>
                <code className="bg-gray-700 px-1 rounded">initialValue</code> ‚Äî <span className="font-medium">–Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ</span> —Å–æ—Å—Ç–æ—è–Ω–∏—è.
              </li>
              <li>
                –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è <span className="font-medium">–¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –º–∞—Å—Å–∏–≤–∞</span> –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–≤—É—Ö –∑–Ω–∞—á–µ–Ω–∏–π.
              </li>
            </ul>
          </div>
          
          {/* –ü—Ä–∏–º–µ—Ä—ã –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π */}
          <div className="bg-gray-900/50 p-5 rounded-xl border border-orange-700/30">
            <div className="flex items-center gap-3 mb-3">
              <div className="bg-orange-500/20 p-2 rounded-lg">
                <Edit3 className="w-5 h-5 text-orange-400" />
              </div>
              <h3 className="text-lg font-bold text-orange-300">–ü—Ä–∏–º–µ—Ä—ã –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π</h3>
            </div>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div className="bg-gray-800 p-3 rounded-lg">
                <p className="text-xs text-gray-400 mb-1">–ß–∏—Å–ª–æ:</p>
                <pre className="text-orange-300 text-xs"><code>{`const [count, setCount] = useState(0);`}</code></pre>
              </div>
              <div className="bg-gray-800 p-3 rounded-lg">
                <p className="text-xs text-gray-400 mb-1">–°—Ç—Ä–æ–∫–∞:</p>
                <pre className="text-orange-300 text-xs"><code>{`const [name, setName] = useState('');`}</code></pre>
              </div>
              <div className="bg-gray-800 p-3 rounded-lg">
                <p className="text-xs text-gray-400 mb-1">–ë—É–ª–µ–≤–æ –∑–Ω–∞—á–µ–Ω–∏–µ:</p>
                <pre className="text-orange-300 text-xs"><code>{`const [isVisible, setIsVisible] = useState(true);`}</code></pre>
              </div>
              <div className="bg-gray-800 p-3 rounded-lg">
                <p className="text-xs text-gray-400 mb-1">–û–±—ä–µ–∫—Ç:</p>
                <pre className="text-orange-300 text-xs"><code>{`const [user, setUser] = useState({ name: '', age: 0 });`}</code></pre>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <RefreshCw className="w-5 h-5 text-purple-400" />
          –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —á–µ—Ä–µ–∑ —Å–µ—Ç—Ç–µ—Ä-—Ñ—É–Ω–∫—Ü–∏—é
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            –î–ª—è <span className="font-medium">–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è</span> –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å <span className="font-medium">—Å–µ—Ç—Ç–µ—Ä-—Ñ—É–Ω–∫—Ü–∏—é</span> (<code className="bg-gray-700 px-1 rounded">setState</code>), –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—É—é <code className="bg-gray-700 px-1 rounded">useState</code>. <span className="font-medium">–ü—Ä—è–º–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ</span> –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å–æ—Å—Ç–æ—è–Ω–∏—è <span className="font-medium">–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç</span> –∏ –Ω–µ –≤—ã–∑—ã–≤–∞–µ—Ç —Ä–µ—Ä–µ–Ω–¥–µ—Ä.
          </p>
        </div>
        
        <div className="mt-6 grid grid-cols-1 md:grid-cols-2 gap-6">
          <div className="bg-gray-900/50 p-4 rounded-xl border border-red-700/30">
            <p className="text-sm text-gray-400 mb-2">‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ ‚Äî –ø—Ä—è–º–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ:</p>
            <pre className="text-red-300 text-sm overflow-x-auto">
              <code>{`const [count, setCount] = useState(0);\n\n// –¢–∞–∫ –¥–µ–ª–∞—Ç—å –Ω–µ–ª—å–∑—è!\ncount = count + 1; // –ù–ï –í–´–ó–û–í–ï–¢ –†–ï–†–ï–ù–î–ï–†!\ncount++; // –¢–û–ñ–ï –ù–ï –í–´–ó–û–í–ï–¢ –†–ï–†–ï–ù–î–ï–†!`}</code>
            </pre>
          </div>
          <div className="bg-gray-900/50 p-4 rounded-xl border border-green-700/30">
            <p className="text-sm text-gray-400 mb-2">‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ ‚Äî —á–µ—Ä–µ–∑ —Å–µ—Ç—Ç–µ—Ä:</p>
            <pre className="text-green-300 text-sm overflow-x-auto">
              <code>{`const [count, setCount] = useState(0);\n\n// –¢–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ:\nsetCount(count + 1); // –í–´–ó–û–í–ï–¢ –†–ï–†–ï–ù–î–ï–†!`}</code>
            </pre>
          </div>
        </div>
        
        <div className="mt-6 space-y-6">
          {/* –ü—Ä–æ—Å—Ç–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ */}
          <div className="bg-gray-900/50 p-5 rounded-xl border border-cyan-700/30">
            <div className="flex items-center gap-3 mb-3">
              <div className="bg-cyan-500/20 p-2 rounded-lg">
                <Edit3 className="w-5 h-5 text-cyan-400" />
              </div>
              <h3 className="text-lg font-bold text-cyan-300">–ü—Ä–æ—Å—Ç–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è</h3>
            </div>
            <div className="bg-gray-800 p-3 rounded-lg mb-3">
              <pre className="text-cyan-300 text-sm"><code>{`function Counter() {\n  const [count, setCount] = useState(0);\n  \n  const increment = () => setCount(count + 1);\n  const decrement = () => setCount(count - 1);\n  const reset = () => setCount(0);\n  \n  return (\n    <div>\n      <p>–°—á–µ—Ç—á–∏–∫: {count}</p>\n      <button onClick={increment}>+</button>\n      <button onClick={decrement}>-</button>\n      <button onClick={reset}>–°–±—Ä–æ—Å</button>\n    </div>\n  );\n}`}</code></pre>
            </div>
            <p className="text-gray-400 text-xs">
              –ü–µ—Ä–µ–¥–∞–µ–º –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞–ø—Ä—è–º—É—é –≤ —Å–µ—Ç—Ç–µ—Ä-—Ñ—É–Ω–∫—Ü–∏—é.
            </p>
          </div>
          
          {/* –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ */}
          <div className="bg-gray-900/50 p-5 rounded-xl border border-yellow-700/30">
            <div className="flex items-center gap-3 mb-3">
              <div className="bg-yellow-500/20 p-2 rounded-lg">
                <RefreshCw className="w-5 h-5 text-yellow-400" />
              </div>
              <h3 className="text-lg font-bold text-yellow-300">–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ</h3>
            </div>
            <div className="bg-gray-800 p-3 rounded-lg mb-3">
              <pre className="text-yellow-300 text-sm"><code>{`function Counter() {\n  const [count, setCount] = useState(0);\n  \n  const increment = () => setCount(prevCount => prevCount + 1);\n  const decrement = () => setCount(prevCount => prevCount - 1);\n  \n  return (\n    <div>\n      <p>–°—á–µ—Ç—á–∏–∫: {count}</p>\n      <button onClick={increment}>+</button>\n      <button onClick={decrement}>-</button>\n    </div>\n  );\n}`}</code></pre>
            </div>
            <p className="text-gray-400 text-xs">
              –ü–µ—Ä–µ–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≤ —Å–µ—Ç—Ç–µ—Ä, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤–æ–µ. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ.
            </p>
          </div>
        </div>
      </div>

      {/* –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <ToggleLeft className="w-5 h-5 text-orange-400" />
          –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è useState
        </h2>
        
        <div className="mt-6 space-y-6">
          {/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å */}
          <div className="bg-gray-900/50 p-5 rounded-xl border border-blue-700/30">
            <div className="flex items-center gap-3 mb-3">
              <div className="bg-blue-500/20 p-2 rounded-lg">
                <ToggleLeft className="w-5 h-5 text-blue-400" />
              </div>
              <h3 className="text-lg font-bold text-blue-300">–ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å (Toggle)</h3>
            </div>
            <div className="bg-gray-800 p-3 rounded-lg mb-3">
              <pre className="text-blue-300 text-sm"><code>{`function Toggle() {\n  const [isOn, setIsOn] = useState(false);\n  \n  const toggle = () => setIsOn(!isOn);\n  \n  return (\n    <div>\n      <p>–°–æ—Å—Ç–æ—è–Ω–∏–µ: {isOn ? '–í–ö–õ' : '–í–´–ö–õ'}</p>\n      <button onClick={toggle}>\n        {isOn ? '–í—ã–∫–ª—é—á–∏—Ç—å' : '–í–∫–ª—é—á–∏—Ç—å'}\n      </button>\n    </div>\n  );\n}`}</code></pre>
            </div>
            <p className="text-gray-400 text-xs">
              –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–µ–∂–¥—É –¥–≤—É–º—è —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏.
            </p>
          </div>
          
          {/* –§–æ—Ä–º–∞ –≤–≤–æ–¥–∞ */}
          <div className="bg-gray-900/50 p-5 rounded-xl border border-green-700/30">
            <div className="flex items-center gap-3 mb-3">
              <div className="bg-green-500/20 p-2 rounded-lg">
                <Edit3 className="w-5 h-5 text-green-400" />
              </div>
              <h3 className="text-lg font-bold text-green-300">–§–æ—Ä–º–∞ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞</h3>
            </div>
            <div className="bg-gray-800 p-3 rounded-lg mb-3">
              <pre className="text-green-300 text-sm"><code>{`function TextInput() {\n  const [text, setText] = useState('');\n  \n  const handleChange = (e) => setText(e.target.value);\n  \n  return (\n    <div>\n      <input \n        type="text" \n        value={text} \n        onChange={handleChange} \n        placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç"\n      />\n      <p>–í—ã –≤–≤–µ–ª–∏: {text}</p>\n    </div>\n  );\n}`}</code></pre>
            </div>
            <p className="text-gray-400 text-xs">
              –°–≤—è–∑—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å –ø–æ–ª–µ–º –≤–≤–æ–¥–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.
            </p>
          </div>
          
          {/* –°–ø–∏—Å–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ */}
          <div className="bg-gray-900/50 p-5 rounded-xl border border-purple-700/30">
            <div className="flex items-center gap-3 mb-3">
              <div className="bg-purple-500/20 p-2 rounded-lg">
                <Hash className="w-5 h-5 text-purple-400" />
              </div>
              <h3 className="text-lg font-bold text-purple-300">–°–ø–∏—Å–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤</h3>
            </div>
            <div className="bg-gray-800 p-3 rounded-lg mb-3">
              <pre className="text-purple-300 text-sm"><code>{`function TodoList() {\n  const [todos, setTodos] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  \n  const addTodo = () => {\n    if (inputValue.trim()) {\n      setTodos([...todos, inputValue]);\n      setInputValue('');\n    }\n  };\n  \n  const removeTodo = (index) => {\n    setTodos(todos.filter((_, i) => i !== index));\n  };\n  \n  return (\n    <div>\n      <input \n        type="text" \n        value={inputValue} \n        onChange={(e) => setInputValue(e.target.value)}\n      />\n      <button onClick={addTodo}>–î–æ–±–∞–≤–∏—Ç—å</button>\n      <ul>\n        {todos.map((todo, index) => (\n          <li key={index}>\n            {todo} \n            <button onClick={() => removeTodo(index)}>–£–¥–∞–ª–∏—Ç—å</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}`}</code></pre>
            </div>
            <p className="text-gray-400 text-xs">
              –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞–º–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö —Å–ø–∏—Å–∫–æ–≤.
            </p>
          </div>
        </div>
      </div>

      {/* –ó–∞–∫–ª—é—á–µ–Ω–∏–µ */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <div className="flex items-start gap-3">
          <div className="bg-green-500/20 p-2 rounded-lg flex-shrink-0">
            <Database className="w-5 h-5 text-green-400" />
          </div>
          <div>
            <h3 className="font-bold text-white mb-2">–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! üéâ</h3>
            <p className="text-gray-300">
              –¢–µ–ø–µ—Ä—å –≤—ã –ø–æ–Ω–∏–º–∞–µ—Ç–µ, —á—Ç–æ —Ç–∞–∫–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ React –∏ –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ö—É–∫ <code className="bg-gray-700 px-1 rounded">useState</code> –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–∑–º–µ–Ω—è–µ–º—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏. –í—ã —É–∑–Ω–∞–ª–∏, —á—Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –º–µ–∂–¥—É —Ä–µ–Ω–¥–µ—Ä–∞–º–∏ –∏ –≤—ã–∑—ã–≤–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ—Ä–µ–Ω–¥–µ—Ä –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏. –ù–∞—É—á–∏–ª–∏—Å—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —á–µ—Ä–µ–∑ —Å–µ—Ç—Ç–µ—Ä-—Ñ—É–Ω–∫—Ü–∏—é –∏ –∏–∑–±–µ–≥–∞—Ç—å –ø—Ä—è–º–æ–π –º—É—Ç–∞—Ü–∏–∏. –•—É–∫ <code className="bg-gray-700 px-1 rounded">useState</code> ‚Äî —ç—Ç–æ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö React-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –±—É–¥–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω–æ. –í —Å–ª–µ–¥—É—é—â–∏—Ö —É—Ä–æ–∫–∞—Ö –º—ã –∏–∑—É—á–∏–º –¥—Ä—É–≥–∏–µ —Ö—É–∫–∏ –∏ –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º.
            </p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Part1;