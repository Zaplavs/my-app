// src/data/courses/react/lesson17/part1.jsx
import React from 'react';
import { FileText, CheckCircle, AlertTriangle, Edit3, Database, Code, Shield } from 'lucide-react';

const Part1 = () => {
  return (
    <div className="space-y-8 text-gray-200">
      {/* –í—Å—Ç—É–ø–ª–µ–Ω–∏–µ */}
      <div className="bg-gradient-to-r from-blue-900/30 to-purple-900/30 backdrop-blur-sm border border-blue-700/30 rounded-2xl p-6 shadow-lg">
        <div className="flex items-start gap-4">
          <div className="bg-blue-500/20 p-3 rounded-lg">
            <FileText className="w-6 h-6 text-blue-400" />
          </div>
          <div>
            <h1 className="text-2xl md:text-3xl font-bold text-white mb-2">üìù –£—Ä–æ–∫ 17: –§–æ—Ä–º—ã: –≤–∞–ª–∏–¥–∞—Ü–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</h1>
            <h2 className="text-xl font-semibold text-blue-300 mb-3">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —Ñ–æ—Ä–º –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö</h2>
            <p className="text-gray-300">
              <span className="font-medium text-yellow-400">üéØ –¶–µ–ª—å —É—Ä–æ–∫–∞:</span> –ü–æ–Ω—è—Ç—å, –∫–∞–∫ —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —Ñ–æ—Ä–º –≤ React, –æ—Å–≤–æ–∏—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã –∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö (–ø—Ä–∏ –≤–≤–æ–¥–µ, –ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ —Ñ–æ–∫—É—Å–∞), –Ω–∞—É—á–∏—Ç—å—Å—è –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö, –∏–∑—É—á–∏—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ø–æ–ª—è–º–∏ –≤–≤–æ–¥–∞ —á–µ—Ä–µ–∑ –æ–±—ä–µ–∫—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è, –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–æ—Ä–º–∞–º–∏ (Formik, React Hook Form).
            </p>
          </div>
        </div>
      </div>

      {/* –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —Ñ–æ—Ä–º */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Edit3 className="w-5 h-5 text-green-400" />
          –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —Ñ–æ—Ä–º –≤ React
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            –í React <span className="font-medium text-green-300">—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞–º–∏</span> –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ <span className="font-medium">—Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞</span>. –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ <span className="font-medium">–∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—è –≤–≤–æ–¥–∞</span> —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ <code className="bg-gray-700 px-1 rounded">state</code>, –∏ <span className="font-medium">–æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è</span> –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
          </p>
          <p>
            –¢–∞–∫–æ–π –ø–æ–¥—Ö–æ–¥ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è <span className="font-medium">"–∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º—ã–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏"</span> ‚Äî React <span className="font-medium">–∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç</span> –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–ª—è –≤–≤–æ–¥–∞, –∞ –Ω–µ –±—Ä–∞—É–∑–µ—Ä.
          </p>
        </div>
        
        <div className="mt-6 grid grid-cols-1 md:grid-cols-2 gap-6">
          <div className="bg-gray-900/50 p-4 rounded-xl border border-red-700/30">
            <p className="text-sm text-gray-400 mb-2">‚ùå –ù–µ–∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º–∞—è —Ñ–æ—Ä–º–∞ (–±–µ–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è):</p>
            <pre className="text-red-300 text-sm overflow-x-auto">
              <code>{`// –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ–ª—è –≤–≤–æ–¥–∞ —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –±—Ä–∞—É–∑–µ—Ä–æ–º\nfunction UncontrolledForm() {\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ DOM\n    const name = e.target.name.value;\n    console.log(name);\n  };\n  \n  return (\n    <form onSubmit={handleSubmit}>\n      <input name="name" type="text" />\n      <button type="submit">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>\n    </form>\n  );\n}`}</code>
            </pre>
          </div>
          <div className="bg-gray-900/50 p-4 rounded-xl border border-green-700/30">
            <p className="text-sm text-gray-400 mb-2">‚úÖ –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º–∞—è —Ñ–æ—Ä–º–∞ (—Å–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º):</p>
            <pre className="text-green-300 text-sm overflow-x-auto">
              <code>{`import { useState } from 'react';\n\nfunction ControlledForm() {\n  const [name, setName] = useState('');\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(name);\n  };\n  \n  return (\n    <form onSubmit={handleSubmit}>\n      <input \n        type="text" \n        value={name} \n        onChange={(e) => setName(e.target.value)} \n      />\n      <button type="submit">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>\n    </form>\n  );\n}`}</code>
            </pre>
          </div>
        </div>
        
        <div className="mt-4 p-3 bg-blue-900/20 border border-blue-700/30 rounded-lg">
          <p className="text-blue-300 text-sm flex items-start gap-2">
            <span className="font-medium">üí° –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º—ã—Ö —Ñ–æ—Ä–º:</span>
            <span>
              <ul className="list-disc pl-5 space-y-1">
                <li><span className="font-medium">–ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è</span> –ø—Ä–∏ –≤–≤–æ–¥–µ –¥–∞–Ω–Ω—ã—Ö</li>
                <li><span className="font-medium">–õ–µ–≥–∫–∏–π –¥–æ—Å—Ç—É–ø</span> –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ–ª–µ–π</li>
                <li><span className="font-medium">–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É—Å–ª–æ–≤–Ω–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞</span> –Ω–∞ –æ—Å–Ω–æ–≤–µ –∑–Ω–∞—á–µ–Ω–∏–π —Ñ–æ—Ä–º—ã</li>
                <li><span className="font-medium">–ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ</span> –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ–ª–µ–π</li>
                <li><span className="font-medium">–ï–¥–∏–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ –∏—Å—Ç–∏–Ω—ã</span> –¥–ª—è –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã</li>
              </ul>
            </span>
          </p>
        </div>
      </div>

      {/* –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ø–æ–ª—è–º–∏ */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Database className="w-5 h-5 text-yellow-400" />
          –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ø–æ–ª—è–º–∏ —á–µ—Ä–µ–∑ –æ–±—ä–µ–∫—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            –ü—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å <span className="font-medium">—Ñ–æ—Ä–º–∞–º–∏, —Å–æ–¥–µ—Ä–∂–∞—â–∏–º–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø–æ–ª–µ–π</span>, —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ <code className="bg-gray-700 px-1 rounded">useState</code> –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—è —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è <span className="font-medium">–Ω–µ—É–¥–æ–±–Ω—ã–º</span>. –í —Ç–∞–∫–∏—Ö —Å–ª—É—á–∞—è—Ö –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å <span className="font-medium">–æ–¥–∏–Ω –æ–±—ä–µ–∫—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è</span>, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–µ–π.
          </p>
        </div>
        
        <div className="mt-6 bg-gray-900/50 p-5 rounded-xl border border-cyan-700/30">
          <div className="flex items-center gap-3 mb-3">
            <div className="bg-cyan-500/20 p-2 rounded-lg">
              <Database className="w-5 h-5 text-cyan-400" />
            </div>
            <h3 className="text-lg font-bold text-cyan-300">–§–æ—Ä–º–∞ —Å –æ–±—ä–µ–∫—Ç–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è</h3>
          </div>
          <div className="bg-gray-800 p-3 rounded-lg mb-3">
            <pre className="text-cyan-300 text-sm"><code>{`import { useState } from 'react';\n\nfunction RegistrationForm() {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    age: ''\n  });\n  \n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log('–î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã:', formData);\n  };\n  \n  return (\n    <form onSubmit={handleSubmit}>\n      <input \n        type="text" \n        name="name" \n        value={formData.name} \n        onChange={handleChange} \n        placeholder="–ò–º—è"\n      />\n      <input \n        type="email" \n        name="email" \n        value={formData.email} \n        onChange={handleChange} \n        placeholder="Email"\n      />\n      <input \n        type="password" \n        name="password" \n        value={formData.password} \n        onChange={handleChange} \n        placeholder="–ü–∞—Ä–æ–ª—å"\n      />\n      <input \n        type="password" \n        name="confirmPassword" \n        value={formData.confirmPassword} \n        onChange={handleChange} \n        placeholder="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"\n      />\n      <input \n        type="number" \n        name="age" \n        value={formData.age} \n        onChange={handleChange} \n        placeholder="–í–æ–∑—Ä–∞—Å—Ç"\n      />\n      <button type="submit">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</button>\n    </form>\n  );\n}`}</code></pre>
          </div>
          <p className="text-gray-400 text-xs">
            –ò—Å–ø–æ–ª—å–∑—É–µ–º <span className="font-medium">–≤—ã—á–∏—Å–ª—è–µ–º—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–∞</span> <code className="bg-gray-700 px-1 rounded">{'[name]: value'}</code> –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—è. –ê—Ç—Ä–∏–±—É—Ç <code className="bg-gray-700 px-1 rounded">name</code> –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—è –¥–æ–ª–∂–µ–Ω <span className="font-medium">—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å</span> –∫–ª—é—á—É –≤ –æ–±—ä–µ–∫—Ç–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è.
          </p>
        </div>
        
        <div className="mt-6 grid grid-cols-1 md:grid-cols-2 gap-6">
          <div className="bg-gray-900/50 p-4 rounded-xl border border-blue-700/30">
            <p className="text-sm text-gray-400 mb-2">–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –ø–æ–ª–µ–π:</p>
            <pre className="text-blue-300 text-sm overflow-x-auto">
              <code>{`const handleChange = (e) => {\n  const { name, value, type, checked } = e.target;\n  \n  setFormData(prev => ({\n    ...prev,\n    [name]: type === 'checkbox' ? checked : value\n  }));\n};\n\n// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ –ø–æ–ª—è—Ö\n<input \n  type="checkbox" \n  name="agreeToTerms" \n  checked={formData.agreeToTerms}\n  onChange={handleChange}\n/>`}</code>
            </pre>
          </div>
          <div className="bg-gray-900/50 p-4 rounded-xl border border-green-700/30">
            <p className="text-sm text-gray-400 mb-2">–°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã –∫ –Ω–∞—á–∞–ª—å–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é:</p>
            <pre className="text-green-300 text-sm overflow-x-auto">
              <code>{`const initialFormData = {\n  name: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n  age: ''\n};\n\nconst handleReset = () => {\n  setFormData(initialFormData);\n};\n\n// –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞\n<button type="button" onClick={handleReset}>\n  –°–±—Ä–æ—Å–∏—Ç—å —Ñ–æ—Ä–º—É\n</button>`}</code>
            </pre>
          </div>
        </div>
      </div>

      {/* –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Shield className="w-5 h-5 text-cyan-400" />
          –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º –≤ React
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            <span className="font-medium text-cyan-300">–í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º</span> ‚Äî —ç—Ç–æ <span className="font-medium">–ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–æ–≤–µ—Ä–∫–∏</span> –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –¥–∞–Ω–Ω—ã—Ö <span className="font-medium">–¥–æ –æ—Ç–ø—Ä–∞–≤–∫–∏</span> —Ñ–æ—Ä–º—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä. –í React —Å—É—â–µ—Å—Ç–≤—É–µ—Ç <span className="font-medium">–Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–¥—Ö–æ–¥–æ–≤</span> –∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ñ–æ—Ä–º.
          </p>
        </div>
        
        <div className="mt-6 space-y-6">
          <div className="bg-gray-900/50 p-5 rounded-xl border border-orange-700/30">
            <div className="flex items-center gap-3 mb-3">
              <div className="bg-orange-500/20 p-2 rounded-lg">
                <AlertTriangle className="w-5 h-5 text-orange-400" />
              </div>
              <h3 className="text-lg font-bold text-orange-300">–°–æ—Å—Ç–æ—è–Ω–∏–µ –æ—à–∏–±–æ–∫</h3>
            </div>
            <div className="bg-gray-800 p-3 rounded-lg mb-3">
              <pre className="text-orange-300 text-sm"><code>{`const [errors, setErrors] = useState({});\n\n// –§—É–Ω–∫—Ü–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏\nconst validate = (formData) => {\n  const newErrors = {};\n  \n  if (!formData.name.trim()) {\n    newErrors.name = '–ò–º—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è';\n  }\n  \n  if (!formData.email) {\n    newErrors.email = 'Email –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω';\n  } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n    newErrors.email = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email';\n  }\n  \n  if (formData.password.length < 6) {\n    newErrors.password = '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤';\n  }\n  \n  if (formData.password !== formData.confirmPassword) {\n    newErrors.confirmPassword = '–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç';\n  }\n  \n  return newErrors;\n};\n\n// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –æ—Ç–ø—Ä–∞–≤–∫–∏\nconst handleSubmit = (e) => {\n  e.preventDefault();\n  const formErrors = validate(formData);\n  \n  if (Object.keys(formErrors).length === 0) {\n    // –§–æ—Ä–º–∞ –≤–∞–ª–∏–¥–Ω–∞, –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å\n    console.log('–§–æ—Ä–º–∞ –≤–∞–ª–∏–¥–Ω–∞:', formData);\n  } else {\n    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ—à–∏–±–∫–∏\n    setErrors(formErrors);\n  }\n};`}</code></pre>
            </div>
          </div>
          
          <div className="bg-gray-900/50 p-5 rounded-xl border border-purple-700/30">
            <div className="flex items-center gap-3 mb-3">
              <div className="bg-purple-500/20 p-2 rounded-lg">
                <CheckCircle className="w-5 h-5 text-purple-400" />
              </div>
              <h3 className="text-lg font-bold text-purple-300">–í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ (onChange)</h3>
            </div>
            <div className="bg-gray-800 p-3 rounded-lg mb-3">
              <pre className="text-purple-300 text-sm"><code>{`const [formData, setFormData] = useState({ name: '', email: '' });\nconst [errors, setErrors] = useState({ name: '', email: '' });\n\nconst validateField = (name, value) => {\n  switch (name) {\n    case 'name':\n      return value.trim() ? '' : '–ò–º—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ';\n    case 'email':\n      return /\\S+@\\S+\\.\\S+/.test(value) ? '' : '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email';\n    default:\n      return '';\n  }\n};\n\nconst handleChange = (e) => {\n  const { name, value } = e.target;\n  \n  setFormData(prev => ({ ...prev, [name]: value }));\n  \n  // –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏\n  const error = validateField(name, value);\n  setErrors(prev => ({ ...prev, [name]: error }));\n};`}</code></pre>
            </div>
            <p className="text-gray-400 text-xs">
              –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–∏ <span className="font-medium">–æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –º–≥–Ω–æ–≤–µ–Ω–Ω—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å</span>, –Ω–æ –º–æ–∂–µ—Ç <span className="font-medium">–∑–∞–º–µ–¥–ª–∏—Ç—å</span> –≤–≤–æ–¥ –ø—Ä–∏ —Å–ª–æ–∂–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–∫–∞—Ö.
            </p>
          </div>
          
          <div className="bg-gray-900/50 p-5 rounded-xl border border-green-700/30">
            <div className="flex items-center gap-3 mb-3">
              <div className="bg-green-500/20 p-2 rounded-lg">
                <Edit3 className="w-5 h-5 text-green-400" />
              </div>
              <h3 className="text-lg font-bold text-green-300">–í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ —Ñ–æ–∫—É—Å–∞ (onBlur)</h3>
            </div>
            <div className="bg-gray-800 p-3 rounded-lg mb-3">
              <pre className="text-green-300 text-sm"><code>{`const handleBlur = (e) => {\n  const { name, value } = e.target;\n  const error = validateField(name, value);\n  setErrors(prev => ({ ...prev, [name]: error }));\n};\n\n// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞\n<input \n  type="text"\n  name="email"\n  value={formData.email}\n  onChange={handleChange}\n  onBlur={handleBlur}\n  className={errors.email ? 'error' : ''}\n/>\n{errors.email && <span className="error-message">{errors.email}</span>}`}</code></pre>
            </div>
            <p className="text-gray-400 text-xs">
              –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ —Ñ–æ–∫—É—Å–∞ <span className="font-medium">–º–µ–Ω–µ–µ –Ω–∞–≤—è–∑—á–∏–≤–∞</span>, —á–µ–º –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–∏, –∏ <span className="font-medium">–ø–æ–¥—Ö–æ–¥–∏—Ç</span> –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤.
            </p>
          </div>
        </div>
      </div>

      {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <AlertTriangle className="w-5 h-5 text-red-400" />
          –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            <span className="font-medium text-red-300">–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–æ–∫</span> ‚Äî –∫–ª—é—á–µ–≤–æ–π –∞—Å–ø–µ–∫—Ç <span className="font-medium">—É–¥–æ–±—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞</span>. –°–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å <span className="font-medium">–ø–æ–Ω—è—Ç–Ω—ã–º–∏</span>, <span className="font-medium">–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏</span> –∏ <span className="font-medium">–≤–∏–¥–∏–º—ã–º–∏</span> –≤ –Ω—É–∂–Ω—ã–π –º–æ–º–µ–Ω—Ç.
          </p>
        </div>
        
        <div className="mt-6 grid grid-cols-1 md:grid-cols-2 gap-6">
          <div className="bg-gray-900/50 p-4 rounded-xl border border-blue-700/30">
            <p className="text-sm text-gray-400 mb-2">–ë–∞–∑–æ–≤–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–æ–∫:</p>
            <pre className="text-blue-300 text-sm overflow-x-auto">
              <code>{`function FormField({ label, name, value, onChange, error, ...props }) {\n  return (\n    <div className="form-field\">\n      <label htmlFor={name}>{label}</label>\n      <input \n        id={name}\n        name={name}\n        value={value}\n        onChange={onChange}\n        className={error ? 'input-error' : ''}\n        {...props}\n      />\n      {error && <span className="error-message">{error}</span>}\n    </div>\n  );\n}\n\n// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ\n<FormField\n  label="Email"\n  name="email"\n  type="email"\n  value={formData.email}\n  onChange={handleChange}\n  error={errors.email}\n/>`}</code>
            </pre>
          </div>
          <div className="bg-gray-900/50 p-4 rounded-xl border border-cyan-700/30">
            <p className="text-sm text-gray-400 mb-2">–°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª–µ–π —Å –æ—à–∏–±–∫–∞–º–∏:</p>
            <pre className="text-cyan-300 text-sm overflow-x-auto">
              <code>{`/* CSS –¥–ª—è –ø–æ–ª–µ–π —Å –æ—à–∏–±–∫–∞–º–∏ */\n.input-error {\n  border-color: #e53e3e;\n  box-shadow: 0 0 0 1px #e53e3e;\n}\n\n.input-error:focus {\n  outline: none;\n  border-color: #e53e3e;\n  box-shadow: 0 0 0 3px rgba(229, 62, 62, 0.2);\n}\n\n.error-message {\n  color: #e53e3e;\n  font-size: 0.875rem;\n  margin-top: 0.25rem;\n  display: block;\n}`}</code>
            </pre>
          </div>
        </div>
        
        <div className="mt-6 bg-gray-900/50 p-5 rounded-xl border border-orange-700/30">
          <div className="flex items-center gap-3 mb-3">
            <div className="bg-orange-500/20 p-2 rounded-lg">
              <AlertTriangle className="w-5 h-5 text-orange-400" />
            </div>
            <h3 className="text-lg font-bold text-orange-300">–ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –æ—à–∏–±–æ–∫ –∏ –æ–±—â–∏–π —Å—Ç–∞—Ç—É—Å</h3>
          </div>
          <div className="bg-gray-800 p-3 rounded-lg mb-3">
            <pre className="text-orange-300 text-sm"><code>{`function FormWithValidation() {\n  const [formData, setFormData] = useState({ name: '', email: '' });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitError, setSubmitError] = useState('');\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ—à–∏–±–∫–∏\n    setErrors({});\n    setSubmitError('');\n    setIsSubmitting(true);\n    \n    try {\n      const validationErrors = validateForm(formData);\n      \n      if (Object.keys(validationErrors).length > 0) {\n        setErrors(validationErrors);\n        return;\n      }\n      \n      // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö\n      await submitFormData(formData);\n      \n      // –£—Å–ø–µ—Ö - —Å–±—Ä–æ—Å —Ñ–æ—Ä–º—ã\n      setFormData({ name: '', email: '' });\n      \n    } catch (error) {\n      setSubmitError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º—ã');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  \n  return (\n    <form onSubmit={handleSubmit}>\n      {/* –ü–æ–ª—è —Ñ–æ—Ä–º—ã */}\n      \n      {/* –û–±—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ */}\n      {submitError && (\n        <div className="alert alert-error\">\n          {submitError}\n        </div>\n      )}\n      \n      <button \n        type="submit\" \n        disabled={isSubmitting}\n        className="btn btn-primary\"\n      >\n        {isSubmitting ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å'}\n      </button>\n    </form>\n  );\n}`}</code></pre>
          </div>
        </div>
      </div>

      {/* –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–∏–º–µ—Ä –ø–æ–ª–Ω–æ–π —Ñ–æ—Ä–º—ã */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Code className="w-5 h-5 text-purple-400" />
          –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–∏–º–µ—Ä: –ü–æ–ª–Ω–∞—è —Ñ–æ—Ä–º–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        </h2>
        
        <div className="mt-6 bg-gray-900/50 p-5 rounded-xl border border-green-700/30">
          <div className="flex items-center gap-3 mb-3">
            <div className="bg-green-500/20 p-2 rounded-lg">
              <FileText className="w-5 h-5 text-green-400" />
            </div>
            <h3 className="text-lg font-bold text-green-300">–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è —Ñ–æ—Ä–º–∞ —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π</h3>
          </div>
          <div className="bg-gray-800 p-3 rounded-lg mb-3">
            <pre className="text-green-300 text-sm"><code>{`import { useState, useEffect } from 'react';\n\nfunction RegistrationForm() {\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    birthDate: '',\n    gender: '',\n    agreeToTerms: false\n  });\n  \n  const [errors, setErrors] = useState({});\n  const [touched, setTouched] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  \n  // –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–æ–ª—è\n  const validateField = (name, value) => {\n    switch (name) {\n      case 'firstName':\n        return value.trim() ? '' : '–ò–º—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ';\n      case 'lastName':\n        return value.trim() ? '' : '–§–∞–º–∏–ª–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞';\n      case 'email':\n        return /\\S+@\\S+\\.\\S+/.test(value) ? '' : '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email';\n      case 'password':\n        return value.length >= 6 ? '' : '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤';\n      case 'confirmPassword':\n        return value === formData.password ? '' : '–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç';\n      case 'birthDate':\n        return value ? '' : '–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞';\n      case 'gender':\n        return value ? '' : '–ü–æ–ª –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω';\n      case 'agreeToTerms':\n        return value ? '' : '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–≥–ª–∞—Å–∏–µ —Å —É—Å–ª–æ–≤–∏—è–º–∏';\n      default:\n        return '';\n    }\n  };\n  \n  // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Å–µ–π —Ñ–æ—Ä–º—ã\n  const validateForm = (data) => {\n    const newErrors = {};\n    Object.keys(data).forEach(key => {\n      const error = validateField(key, data[key]);\n      if (error) newErrors[key] = error;\n    });\n    return newErrors;\n  };\n  \n  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π\n  const handleChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    const newValue = type === 'checkbox' ? checked : value;\n    \n    setFormData(prev => ({\n      ...prev,\n      [name]: newValue\n    }));\n    \n    // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª—è\n    if (touched[name]) {\n      const error = validateField(name, newValue);\n      setErrors(prev => ({\n        ...prev,\n        [name]: error\n      }));\n    }\n  };\n  \n  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ—Ç–µ—Ä–∏ —Ñ–æ–∫—É—Å–∞\n  const handleBlur = (e) => {\n    const { name } = e.target;\n    \n    setTouched(prev => ({\n      ...prev,\n      [name]: true\n    }));\n    \n    const error = validateField(name, formData[name]);\n    setErrors(prev => ({\n      ...prev,\n      [name]: error\n    }));\n  };\n  \n  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // –ü–æ–º–µ—á–∞–µ–º –≤—Å–µ –ø–æ–ª—è –∫–∞–∫ –∑–∞—Ç—Ä–æ–Ω—É—Ç—ã–µ\n    const allTouched = {};\n    Object.keys(formData).forEach(key => {\n      allTouched[key] = true;\n    });\n    setTouched(allTouched);\n    \n    // –í–∞–ª–∏–¥–∞—Ü–∏—è\n    const formErrors = validateForm(formData);\n    setErrors(formErrors);\n    \n    if (Object.keys(formErrors).length === 0) {\n      setIsSubmitting(true);\n      try {\n        // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö\n        await new Promise(resolve => setTimeout(resolve, 1000)); // –ò–º–∏—Ç–∞—Ü–∏—è API\n        console.log('–§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞:', formData);\n        // –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã\n        setFormData({\n          firstName: '',\n          lastName: '',\n          email: '',\n          password: '',\n          confirmPassword: '',\n          birthDate: '',\n          gender: '',\n          agreeToTerms: false\n        });\n        setTouched({});\n        setErrors({});\n      } catch (error) {\n        console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', error);\n      } finally {\n        setIsSubmitting(false);\n      }\n    }\n  };\n  \n  return (\n    <form onSubmit={handleSubmit} className=\"registration-form\">\n      <div className=\"form-row\">\n        <FormField\n          label=\"–ò–º—è *\"\n          name=\"firstName\"\n          type=\"text\"\n          value={formData.firstName}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          error={touched.firstName ? errors.firstName : ''}\n        />\n        \n        <FormField\n          label=\"–§–∞–º–∏–ª–∏—è *\"\n          name=\"lastName\"\n          type=\"text\"\n          value={formData.lastName}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          error={touched.lastName ? errors.lastName : ''}\n        />\n      </div>\n      \n      <FormField\n        label=\"Email *\"\n        name=\"email\"\n        type=\"email\"\n        value={formData.email}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        error={touched.email ? errors.email : ''}\n      />\n      \n      <div className=\"form-row\">\n        <FormField\n          label=\"–ü–∞—Ä–æ–ª—å *\"\n          name=\"password\"\n          type=\"password\"\n          value={formData.password}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          error={touched.password ? errors.password : ''}\n        />\n        \n        <FormField\n          label=\"–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å *\"\n          name=\"confirmPassword\"\n          type=\"password\"\n          value={formData.confirmPassword}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          error={touched.confirmPassword ? errors.confirmPassword : ''}\n        />\n      </div>\n      \n      <FormField\n        label=\"–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è *\"\n        name=\"birthDate\"\n        type=\"date\"\n        value={formData.birthDate}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        error={touched.birthDate ? errors.birthDate : ''}\n      />\n      \n      <div className=\"form-group\">\n        <label>–ü–æ–ª *</label>\n        <div className=\"radio-group\">\n          <label>\n            <input\n              type=\"radio\"\n              name=\"gender\"\n              value=\"male\"\n              checked={formData.gender === 'male'}\n              onChange={handleChange}\n              onBlur={handleBlur}\n            />\n            –ú—É–∂—Å–∫–æ–π\n          </label>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"gender\"\n              value=\"female\"\n              checked={formData.gender === 'female'}\n              onChange={handleChange}\n              onBlur={handleBlur}\n            />\n            –ñ–µ–Ω—Å–∫–∏–π\n          </label>\n        </div>\n        {touched.gender && errors.gender && (\n          <span className=\"error-message\">{errors.gender}</span>\n        )}\n      </div>\n      \n      <div className=\"form-group checkbox-group\">\n        <label>\n          <input\n            type=\"checkbox\"\n            name=\"agreeToTerms\"\n            checked={formData.agreeToTerms}\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n          –Ø —Å–æ–≥–ª–∞—Å–µ–Ω —Å —É—Å–ª–æ–≤–∏—è–º–∏ *\n        </label>\n        {touched.agreeToTerms && errors.agreeToTerms && (\n          <span className=\"error-message\">{errors.agreeToTerms}</span>\n        )}\n      </div>\n      \n      <button \n        type=\"submit\" \n        disabled={isSubmitting}\n        className=\"submit-button\"\n      >\n        {isSubmitting ? '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è...' : '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è'}\n      </button>\n    </form>\n  );\n}\n\n// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–æ–ª—è —Ñ–æ—Ä–º—ã\nfunction FormField({ label, error, ...props }) {\n  return (\n    <div className=\"form-field\">\n      <label>{label}</label>\n      <input {...props} />\n      {error && <span className=\"error-message\">{error}</span>}\n    </div>\n  );\n}`}</code></pre>
          </div>
        </div>
      </div>

      {/* –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–æ—Ä–º–∞–º–∏ */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Database className="w-5 h-5 text-blue-400" />
          –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–æ—Ä–º–∞–º–∏
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            –î–ª—è <span className="font-medium">—Å–ª–æ–∂–Ω—ã—Ö —Ñ–æ—Ä–º</span> —Å –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –ø–æ–ª–µ–π, –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π –∏ –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–æ–π, —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è <span className="font-medium">—Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏</span>, –∫–æ—Ç–æ—Ä—ã–µ <span className="font-medium">—É–ø—Ä–æ—â–∞—é—Ç</span> –∏ <span className="font-medium">—Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä—É—é—Ç</span> —Ä–∞–±–æ—Ç—É —Å —Ñ–æ—Ä–º–∞–º–∏.
          </p>
        </div>
        
        <div className="mt-6 space-y-6">
          <div className="bg-gray-900/50 p-5 rounded-xl border border-green-700/30">
            <div className="flex items-center gap-3 mb-3">
              <div className="bg-green-500/20 p-2 rounded-lg">
                <Code className="w-5 h-5 text-green-400" />
              </div>
              <h3 className="text-lg font-bold text-green-300">Formik ‚Äî –ø–æ–ø—É–ª—è—Ä–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ñ–æ—Ä–º</h3>
            </div>
            <div className="bg-gray-800 p-3 rounded-lg mb-3">
              <pre className="text-green-300 text-sm"><code>{`import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\n// –°—Ö–µ–º–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏\nconst validationSchema = Yup.object({\n  firstName: Yup.string()\n    .max(15, '–î–æ–ª–∂–Ω–æ –±—ã—Ç—å 15 —Å–∏–º–≤–æ–ª–æ–≤ –∏–ª–∏ –º–µ–Ω—å—à–µ')\n    .required('–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ'),\n  lastName: Yup.string()\n    .max(20, '–î–æ–ª–∂–Ω–æ –±—ã—Ç—å 20 —Å–∏–º–≤–æ–ª–æ–≤ –∏–ª–∏ –º–µ–Ω—å—à–µ')\n    .required('–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ'),\n  email: Yup.string()\n    .email('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email')\n    .required('–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ'),\n});\n\nfunction FormikExample() {\n  return (\n    <Formik\n      initialValues={{ firstName: '', lastName: '', email: '' }}\n      validationSchema={validationSchema}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      }}\n    >\n      <Form>\n        <div>\n          <label htmlFor=\"firstName\">–ò–º—è</label>\n          <Field name=\"firstName\" type=\"text\" />\n          <ErrorMessage name=\"firstName\" component=\"div\" className=\"error\" />\n        </div>\n        \n        <div>\n          <label htmlFor=\"lastName\">–§–∞–º–∏–ª–∏—è</label>\n          <Field name=\"lastName\" type=\"text\" />\n          <ErrorMessage name=\"lastName\" component=\"div\" className=\"error\" />\n        </div>\n        \n        <div>\n          <label htmlFor=\"email\">Email</label>\n          <Field name=\"email\" type=\"email\" />\n          <ErrorMessage name=\"email\" component=\"div\" className=\"error\" />\n        </div>\n        \n        <button type=\"submit\">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>\n      </Form>\n    </Formik>\n  );\n}`}</code></pre>
            </div>
          </div>
          
          <div className="bg-gray-900/50 p-5 rounded-xl border border-cyan-700/30">
            <div className="flex items-center gap-3 mb-3">
              <div className="bg-cyan-500/20 p-2 rounded-lg">
                <Database className="w-5 h-5 text-cyan-400" />
              </div>
              <h3 className="text-lg font-bold text-cyan-300">React Hook Form ‚Äî —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥</h3>
            </div>
            <div className="bg-gray-800 p-3 rounded-lg mb-3">
              <pre className="text-cyan-300 text-sm"><code>{`import { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\n\n// –°—Ö–µ–º–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏\nconst schema = Yup.object({\n  firstName: Yup.string().required('–ò–º—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ'),\n  lastName: Yup.string().required('–§–∞–º–∏–ª–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞'),\n  email: Yup.string().email('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email').required('Email –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω'),\n});\n\nfunction ReactHookFormExample() {\n  const { register, handleSubmit, formState: { errors } } = useForm({\n    resolver: yupResolver(schema)\n  });\n  \n  const onSubmit = (data) => {\n    console.log(data);\n  };\n  \n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div>\n        <input \n          {...register('firstName')} \n          placeholder=\"–ò–º—è\" \n        />\n        {errors.firstName && <p>{errors.firstName.message}</p>}\n      </div>\n      \n      <div>\n        <input \n          {...register('lastName')} \n          placeholder=\"–§–∞–º–∏–ª–∏—è\" \n        />\n        {errors.lastName && <p>{errors.lastName.message}</p>}\n      </div>\n      \n      <div>\n        <input \n          {...register('email')} \n          placeholder=\"Email\" \n        />\n        {errors.email && <p>{errors.email.message}</p>}\n      </div>\n      \n      <input type=\"submit\" />\n    </form>\n  );\n}`}</code></pre>
            </div>
          </div>
        </div>
        
        <div className="mt-4 p-3 bg-blue-900/20 border border-blue-700/30 rounded-lg">
          <p className="text-blue-300 text-sm flex items-start gap-2">
            <span className="font-medium">üí° –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫–∏:</span>
            <span>
              <ul className="list-disc pl-5 space-y-1">
                <li><span className="font-medium">–°–ª–æ–∂–Ω—ã–µ —Ñ–æ—Ä–º—ã</span> —Å –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –ø–æ–ª–µ–π –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π</li>
                <li><span className="font-medium">–ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ</span> –ª–æ–≥–∏–∫–∏ —Ñ–æ—Ä–º –≤ —Ä–∞–∑–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö</li>
                <li><span className="font-medium">–°–ª–æ–∂–Ω–∞—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞</span> –≤–∞–ª–∏–¥–∞—Ü–∏–∏</li>
                <li><span className="font-medium">–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è</span> —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏</li>
                <li><span className="font-medium">–£–ª—É—á—à–µ–Ω–Ω—ã–π DX</span> (Developer Experience) –∏ –º–µ–Ω—å—à–µ boilerplate-–∫–æ–¥–∞</li>
              </ul>
            </span>
          </p>
        </div>
      </div>

      {/* –õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <CheckCircle className="w-5 h-5 text-orange-400" />
          –õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ —Ä–∞–±–æ—Ç—ã —Å —Ñ–æ—Ä–º–∞–º–∏
        </h2>
        
        <div className="mt-6 space-y-6">
          <div className="bg-gray-900/50 p-5 rounded-xl border border-blue-700/30">
            <div className="flex items-center gap-3 mb-3">
              <div className="bg-blue-500/20 p-2 rounded-lg">
                <Shield className="w-5 h-5 text-blue-400" />
              </div>
              <h3 className="text-lg font-bold text-blue-300">–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ñ–æ—Ä–º</h3>
            </div>
            <ul className="list-disc pl-5 space-y-2 text-gray-300 text-sm">
              <li>
                <span className="font-medium">–°–≤—è–∑—ã–≤–∞–π—Ç–µ –º–µ—Ç–∫–∏ —Å –ø–æ–ª—è–º–∏</span> —á–µ—Ä–µ–∑ <code className="bg-gray-700 px-1 rounded">htmlFor</code> –∏ <code className="bg-gray-700 px-1 rounded">id</code>
              </li>
              <li>
                <span className="font-medium">–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ ARIA-–∞—Ç—Ä–∏–±—É—Ç—ã</span> –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö
              </li>
              <li>
                <span className="font-medium">–û–±–µ—Å–ø–µ—á—å—Ç–µ –Ω–∞–≤–∏–≥–∞—Ü–∏—é —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã</span> –∏ —Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∫—É –Ω–∞ –æ—à–∏–±–∫–∞—Ö
              </li>
              <li>
                <span className="font-medium">–î–æ–±–∞–≤–ª—è–π—Ç–µ aria-invalid</span> –¥–ª—è –ø–æ–ª–µ–π —Å –æ—à–∏–±–∫–∞–º–∏
              </li>
            </ul>
            <div className="mt-3 bg-gray-800 p-3 rounded-lg">
              <pre className="text-blue-300 text-xs"><code>{`<div>\n  <label htmlFor="email-input">Email *</label>\n  <input \n    id="email-input\"\n    type="email\"\n    name="email\"\n    value={formData.email}\n    onChange={handleChange}\n    aria-describedby="email-error\"\n    aria-invalid={!!errors.email}\n  />\n  {errors.email && (\n    <span id="email-error\" role="alert\" className="error-message\">\n      {errors.email}\n    </span>\n  )}\n</div>`}</code></pre>
            </div>
          </div>
          
          <div className="bg-gray-900/50 p-5 rounded-xl border border-green-700/30">
            <div className="flex items-center gap-3 mb-3">
              <div className="bg-green-500/20 p-2 rounded-lg">
                <Edit3 className="w-5 h-5 text-green-400" />
              </div>
              <h3 className="text-lg font-bold text-green-300">–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ UX</h3>
            </div>
            <ul className="list-disc pl-5 space-y-2 text-gray-300 text-sm">
              <li>
                <span className="font-medium">–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ debounce</span> –¥–ª—è —Ç—è–∂–µ–ª—ã—Ö –≤–∞–ª–∏–¥–∞—Ü–∏–π –ø—Ä–∏ –≤–≤–æ–¥–µ
              </li>
              <li>
                <span className="font-medium">–û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–π—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫</span> (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ AJAX-–≤–∞–ª–∏–¥–∞—Ü–∏–∏)
              </li>
              <li>
                <span className="font-medium">–ü–æ–∫–∞–∑—ã–≤–∞–π—Ç–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –∑–∞–≥—Ä—É–∑–∫–∏</span> –ø—Ä–∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏—è—Ö
              </li>
              <li>
                <span className="font-medium">–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–∏–∑—É–∞–ª—å–Ω—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å</span> –¥–ª—è —É—Å–ø–µ—à–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
              </li>
              <li>
                <span className="font-medium">–†–µ–∞–ª–∏–∑—É–π—Ç–µ –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ</span> —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤ —Ñ–æ—Ä–º
              </li>
            </ul>
          </div>
          
          <div className="bg-gray-900/50 p-5 rounded-xl border border-purple-700/30">
            <div className="flex items-center gap-3 mb-3">
              <div className="bg-purple-500/20 p-2 rounded-lg">
                <Database className="w-5 h-5 text-purple-400" />
              </div>
              <h3 className="text-lg font-bold text-purple-300">–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —Ñ–æ—Ä–º</h3>
            </div>
            <ul className="list-disc pl-5 space-y-2 text-gray-300 text-sm">
              <li>
                <span className="font-medium">–í—Å–µ–≥–¥–∞ –≤–∞–ª–∏–¥–∏—Ä—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ</span> –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω–∏ –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
              </li>
              <li>
                <span className="font-medium">–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ CSRF-—Ç–æ–∫–µ–Ω—ã</span> –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç –º–µ–∂—Å–∞–π—Ç–æ–≤–æ–π –ø–æ–¥–¥–µ–ª–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
              </li>
              <li>
                <span className="font-medium">–≠–∫—Ä–∞–Ω–∏—Ä—É–π—Ç–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã</span> –≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–º –≤–≤–æ–¥–µ
              </li>
              <li>
                <span className="font-medium">–û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–π—Ç–µ —Ä–∞–∑–º–µ—Ä</span> –∑–∞–≥—Ä—É–∂–∞–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏ –≤–≤–æ–¥–∏–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö
              </li>
              <li>
                <span className="font-medium">–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ rate limiting</span> –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–π
              </li>
            </ul>
          </div>
        </div>
      </div>

      {/* –ó–∞–∫–ª—é—á–µ–Ω–∏–µ */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <div className="flex items-start gap-3">
          <div className="bg-green-500/20 p-2 rounded-lg flex-shrink-0">
            <FileText className="w-5 h-5 text-green-400" />
          </div>
          <div>
            <h3 className="font-bold text-white mb-2">–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! üéâ</h3>
            <p className="text-gray-300">
              –¢–µ–ø–µ—Ä—å –≤—ã –ø–æ–Ω–∏–º–∞–µ—Ç–µ, –∫–∞–∫ —É–ø—Ä–∞–≤–ª—è—Ç—å —Ñ–æ—Ä–º–∞–º–∏ –≤ React, –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ. –í—ã –Ω–∞—É—á–∏–ª–∏—Å—å —É–ø—Ä–∞–≤–ª—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ø–æ–ª—è–º–∏ —á–µ—Ä–µ–∑ –æ–±—ä–µ–∫—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è, —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∏ –ø–æ—Ç–µ—Ä–µ —Ñ–æ–∫—É—Å–∞, –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–æ—Ä–º—ã. –í—ã —Ç–∞–∫–∂–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å —Å –ø–æ–ø—É–ª—è—Ä–Ω—ã–º–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–æ—Ä–º–∞–º–∏, —Ç–∞–∫–∏–º–∏ –∫–∞–∫ Formik –∏ React Hook Form, –∫–æ—Ç–æ—Ä—ã–µ —É–ø—Ä–æ—â–∞—é—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É —Å–ª–æ–∂–Ω—ã—Ö —Ñ–æ—Ä–º. –ü–æ–Ω–∏–º–∞–Ω–∏–µ –∏ —É–º–µ–Ω–∏–µ –ø—Ä–∏–º–µ–Ω—è—Ç—å —ç—Ç–∏ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ —è–≤–ª—è–µ—Ç—Å—è –∫–ª—é—á–µ–≤—ã–º –Ω–∞–≤—ã–∫–æ–º –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ —Å —Ñ–æ—Ä–º–∞–º–∏. –í —Å–ª–µ–¥—É—é—â–∏—Ö —É—Ä–æ–∫–∞—Ö –º—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–æ—Ä–º–∞–º–∏, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å API –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω—ã—Ö —Ö—É–∫–æ–≤ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ª–æ–≥–∏–∫–∏ —Ñ–æ—Ä–º.
            </p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Part1;