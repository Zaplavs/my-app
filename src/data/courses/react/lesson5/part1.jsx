// src/data/courses/react/lesson5/part1.jsx
import React from 'react';
import { Edit3, ToggleLeft, Hash, FileText, CheckSquare, AlignLeft } from 'lucide-react';

const Part1 = () => {
  return (
    <div className="space-y-8 text-gray-200">
      {/* –í—Å—Ç—É–ø–ª–µ–Ω–∏–µ */}
      <div className="bg-gradient-to-r from-blue-900/30 to-purple-900/30 backdrop-blur-sm border border-blue-700/30 rounded-2xl p-6 shadow-lg">
        <div className="flex items-start gap-4">
          <div className="bg-blue-500/20 p-3 rounded-lg">
            <Edit3 className="w-6 h-6 text-blue-400" />
          </div>
          <div>
            <h1 className="text-2xl md:text-3xl font-bold text-white mb-2">üìã –£—Ä–æ–∫ 5: –£–ø—Ä–∞–≤–ª—è–µ–º—ã–µ —Ñ–æ—Ä–º—ã</h1>
            <h2 className="text-xl font-semibold text-blue-300 mb-3">–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ñ–æ—Ä–º—ã —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º React</h2>
            <p className="text-gray-300">
              <span className="font-medium text-yellow-400">üéØ –¶–µ–ª—å —É—Ä–æ–∫–∞:</span> –ü–æ–Ω—è—Ç—å –∫–æ–Ω—Ü–µ–ø—Ü–∏—é —É–ø—Ä–∞–≤–ª—è–µ–º—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –≤ React, –Ω–∞—É—á–∏—Ç—å—Å—è —Å–æ–∑–¥–∞–≤–∞—Ç—å —Ñ–æ—Ä–º—ã —Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ–ª–µ–π –≤–≤–æ–¥–∞ —Å–æ state, –æ—Å–≤–æ–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã (input, textarea, select, checkbox) –∏ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö.
            </p>
          </div>
        </div>
      </div>

      {/* –ß—Ç–æ —Ç–∞–∫–æ–µ —É–ø—Ä–∞–≤–ª—è–µ–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã? */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Edit3 className="w-5 h-5 text-green-400" />
          –ß—Ç–æ —Ç–∞–∫–æ–µ —É–ø—Ä–∞–≤–ª—è–µ–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã?
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            <span className="font-medium text-green-300">–£–ø—Ä–∞–≤–ª—è–µ–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã (Controlled Components)</span> ‚Äî —ç—Ç–æ –ø–æ–¥—Ö–æ–¥ –≤ React, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º <span className="font-medium">–∑–Ω–∞—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ —Ñ–æ—Ä–º—ã</span> (input, textarea, select –∏ —Ç.–¥.) <span className="font-medium">–∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç—Å—è</span> —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º React.
          </p>
          <p>
            –í –æ—Ç–ª–∏—á–∏–µ –æ—Ç <span className="font-medium">–Ω–µ—É–ø—Ä–∞–≤–ª—è–µ–º—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤</span> (–≥–¥–µ –±—Ä–∞—É–∑–µ—Ä —É–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —Ñ–æ—Ä–º—ã), –≤ —É–ø—Ä–∞–≤–ª—è–µ–º—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö <span className="font-medium">React —è–≤–ª—è–µ—Ç—Å—è "–µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–æ–º –∏—Å—Ç–∏–Ω—ã"</span> –¥–ª—è –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ–ª–µ–π –≤–≤–æ–¥–∞.
          </p>
        </div>
        
        <div className="mt-6 grid grid-cols-1 md:grid-cols-2 gap-6">
          <div className="bg-gray-900/50 p-4 rounded-xl border border-red-700/30">
            <p className="text-sm text-gray-400 mb-2">‚ùå –ù–µ—É–ø—Ä–∞–≤–ª—è–µ–º—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç:</p>
            <pre className="text-red-300 text-sm overflow-x-auto">
              <code>{`function UncontrolledForm() {\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ DOM\n    const name = e.target.name.value;\n    console.log(name);\n  };\n  \n  return (\n    <form onSubmit={handleSubmit}>\n      <input name="name" type="text" />\n      <button type="submit">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>\n    </form>\n  );\n}`}</code>
            </pre>
          </div>
          <div className="bg-gray-900/50 p-4 rounded-xl border border-green-700/30">
            <p className="text-sm text-gray-400 mb-2">‚úÖ –£–ø—Ä–∞–≤–ª—è–µ–º—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç:</p>
            <pre className="text-green-300 text-sm overflow-x-auto">
              <code>{`function ControlledForm() {\n  const [name, setName] = useState('');\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(name);\n  };\n  \n  return (\n    <form onSubmit={handleSubmit}>\n      <input \n        type="text" \n        value={name} \n        onChange={(e) => setName(e.target.value)} \n      />\n      <button type="submit">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>\n    </form>\n  );\n}`}</code>
            </pre>
          </div>
        </div>
        
        <div className="mt-4 p-3 bg-blue-900/20 border border-blue-700/30 rounded-lg">
          <p className="text-blue-300 text-sm flex items-start gap-2">
            <span className="font-medium">üí° –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —É–ø—Ä–∞–≤–ª—è–µ–º—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:</span>
            <span>
              <ul className="list-disc pl-5 space-y-1">
                <li>–ó–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–µ–π –≤—Å–µ–≥–¥–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º</li>
                <li>–õ–µ–≥–∫–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é –∏ –º–≥–Ω–æ–≤–µ–Ω–Ω—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å</li>
                <li>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É—Å–ª–æ–≤–Ω–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∑–Ω–∞—á–µ–Ω–∏–π —Ñ–æ—Ä–º—ã</li>
                <li>–ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ–ª–µ–π</li>
                <li>–ï–¥–∏–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ –∏—Å—Ç–∏–Ω—ã –¥–ª—è –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã</li>
              </ul>
            </span>
          </p>
        </div>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–∏–Ω—Ü–∏–ø —Ä–∞–±–æ—Ç—ã */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Hash className="w-5 h-5 text-yellow-400" />
          –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–∏–Ω—Ü–∏–ø —Ä–∞–±–æ—Ç—ã —É–ø—Ä–∞–≤–ª—è–µ–º—ã—Ö —Ñ–æ—Ä–º
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —É–ø—Ä–∞–≤–ª—è–µ–º–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å <span className="font-medium">–¥–≤–∞ –∫–ª—é—á–µ–≤—ã—Ö —à–∞–≥–∞</span>:
          </p>
        </div>
        
        <div className="mt-6 space-y-6">
          <div className="bg-gray-900/50 p-5 rounded-xl border border-blue-700/30">
            <div className="flex items-center gap-3 mb-3">
              <div className="bg-blue-500/20 p-2 rounded-lg">
                <Edit3 className="w-5 h-5 text-blue-400" />
              </div>
              <h3 className="text-lg font-bold text-blue-300">1. –°–≤—è–∑–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º</h3>
            </div>
            <p className="text-gray-300 text-sm mb-3">
              –ê—Ç—Ä–∏–±—É—Ç <code className="bg-gray-700 px-1 rounded">value</code> (–∏–ª–∏ <code className="bg-gray-700 px-1 rounded">checked</code> –¥–ª—è checkbox/radio) —ç–ª–µ–º–µ–Ω—Ç–∞ —Ñ–æ—Ä–º—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å–æ—Å—Ç–æ—è–Ω–∏—è.
            </p>
            <div className="bg-gray-800 p-3 rounded-lg">
              <pre className="text-blue-300 text-sm"><code>{`const [value, setValue] = useState('');\n\n<input value={value} />`}</code></pre>
            </div>
          </div>
          
          <div className="bg-gray-900/50 p-5 rounded-xl border border-green-700/30">
            <div className="flex items-center gap-3 mb-3">
              <div className="bg-green-500/20 p-2 rounded-lg">
                <Edit3 className="w-5 h-5 text-green-400" />
              </div>
              <h3 className="text-lg font-bold text-green-300">2. –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è</h3>
            </div>
            <p className="text-gray-300 text-sm mb-3">
              –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è <code className="bg-gray-700 px-1 rounded">onChange</code>, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∑–Ω–∞—á–µ–Ω–∏—è.
            </p>
            <div className="bg-gray-800 p-3 rounded-lg">
              <pre className="text-green-300 text-sm"><code>{`<input \n  value={value} \n  onChange={(e) => setValue(e.target.value)} \n/>`}</code></pre>
            </div>
          </div>
        </div>
        
        <div className="mt-6 bg-gray-900/50 p-5 rounded-xl border border-purple-700/30">
          <div className="flex items-center gap-3 mb-3">
            <div className="bg-purple-500/20 p-2 rounded-lg">
              <FileText className="w-5 h-5 text-purple-400" />
            </div>
            <h3 className="text-lg font-bold text-purple-300">–ü–æ–ª–Ω—ã–π –ø—Ä–∏–º–µ—Ä –ø—Ä–æ—Å—Ç–æ–π —É–ø—Ä–∞–≤–ª—è–µ–º–æ–π —Ñ–æ—Ä–º—ã</h3>
          </div>
          <div className="bg-gray-800 p-3 rounded-lg">
            <pre className="text-purple-300 text-sm"><code>{`import { useState } from 'react';\n\nfunction SimpleForm() {\n  const [name, setName] = useState('');\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log('–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:', name);\n    setName(''); // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏\n  };\n  \n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        –ò–º—è:\n        <input \n          type="text" \n          value={name} \n          onChange={(e) => setName(e.target.value)} \n        />\n      </label>\n      <button type="submit">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>\n      <p>–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {name}</p>\n    </form>\n  );\n}`}</code></pre>
          </div>
        </div>
      </div>

      {/* –†–∞–±–æ—Ç–∞ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –ø–æ–ª–µ–π */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <Edit3 className="w-5 h-5 text-cyan-400" />
          –†–∞–±–æ—Ç–∞ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            –†–∞–∑–Ω—ã–µ —Ç–∏–ø—ã –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã —Ç—Ä–µ–±—É—é—Ç –Ω–µ–º–Ω–æ–≥–æ —Ä–∞–∑–Ω–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —É–ø—Ä–∞–≤–ª—è–µ–º—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤. –î–∞–≤–∞–π—Ç–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–∏–ø—ã.
          </p>
        </div>
        
        <div className="mt-6 space-y-6">
          {/* Text Input */}
          <div className="bg-gray-900/50 p-5 rounded-xl border border-blue-700/30">
            <div className="flex items-center gap-3 mb-3">
              <div className="bg-blue-500/20 p-2 rounded-lg">
                <Edit3 className="w-5 h-5 text-blue-400" />
              </div>
              <h3 className="text-lg font-bold text-blue-300">–¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ (input type="text")</h3>
            </div>
            <div className="bg-gray-800 p-3 rounded-lg mb-3">
              <pre className="text-blue-300 text-sm"><code>{`const [text, setText] = useState('');\n\n<input \n  type="text" \n  value={text} \n  onChange={(e) => setText(e.target.value)} \n/>`}</code></pre>
            </div>
            <p className="text-gray-400 text-xs">
              –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–æ–¥—Ö–æ–¥: value - —Å—Ç—Ä–æ–∫–∞, onChange –ø–æ–ª—É—á–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ e.target.value
            </p>
          </div>
          
          {/* Textarea */}
          <div className="bg-gray-900/50 p-5 rounded-xl border border-green-700/30">
            <div className="flex items-center gap-3 mb-3">
              <div className="bg-green-500/20 p-2 rounded-lg">
                <AlignLeft className="w-5 h-5 text-green-400" />
              </div>
              <h3 className="text-lg font-bold text-green-300">–ú–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–æ–µ –ø–æ–ª–µ (textarea)</h3>
            </div>
            <div className="bg-gray-800 p-3 rounded-lg mb-3">
              <pre className="text-green-300 text-sm"><code>{`const [message, setMessage] = useState('');\n\n<textarea \n  value={message} \n  onChange={(e) => setMessage(e.target.value)} \n/>`}</code></pre>
            </div>
            <p className="text-gray-400 text-xs">
              –í –æ—Ç–ª–∏—á–∏–µ –æ—Ç HTML, –≤ React textarea –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∞—Ç—Ä–∏–±—É—Ç value, –∞ –Ω–µ children
            </p>
          </div>
          
          {/* Select */}
          <div className="bg-gray-900/50 p-5 rounded-xl border border-orange-700/30">
            <div className="flex items-center gap-3 mb-3">
              <div className="bg-orange-500/20 p-2 rounded-lg">
                <Hash className="w-5 h-5 text-orange-400" />
              </div>
              <h3 className="text-lg font-bold text-orange-300">–í—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ (select)</h3>
            </div>
            <div className="bg-gray-800 p-3 rounded-lg mb-3">
              <pre className="text-orange-300 text-sm"><code>{`const [selectedOption, setSelectedOption] = useState('');\n\n<select \n  value={selectedOption} \n  onChange={(e) => setSelectedOption(e.target.value)}\n>\n  <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é</option>\n  <option value="option1">–û–ø—Ü–∏—è 1</option>\n  <option value="option2">–û–ø—Ü–∏—è 2</option>\n</select>`}</code></pre>
            </div>
            <p className="text-gray-400 text-xs">
              value select —Ä–∞–≤–µ–Ω –∑–Ω–∞—á–µ–Ω–∏—é –≤—ã–±—Ä–∞–Ω–Ω–æ–π option. –î–ª—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–∞—Å—Å–∏–≤ –∑–Ω–∞—á–µ–Ω–∏–π
            </p>
          </div>
          
          {/* Checkbox */}
          <div className="bg-gray-900/50 p-5 rounded-xl border border-purple-700/30">
            <div className="flex items-center gap-3 mb-3">
              <div className="bg-purple-500/20 p-2 rounded-lg">
                <CheckSquare className="w-5 h-5 text-purple-400" />
              </div>
              <h3 className="text-lg font-bold text-purple-300">–ß–µ–∫–±–æ–∫—Å (input type="checkbox")</h3>
            </div>
            <div className="bg-gray-800 p-3 rounded-lg mb-3">
              <pre className="text-purple-300 text-sm"><code>{`const [isChecked, setIsChecked] = useState(false);\n\n<input \n  type="checkbox" \n  checked={isChecked} \n  onChange={(e) => setIsChecked(e.target.checked)} \n/>`}</code></pre>
            </div>
            <p className="text-gray-400 text-xs">
              –î–ª—è checkbox –∏—Å–ø–æ–ª—å–∑—É–µ–º –∞—Ç—Ä–∏–±—É—Ç checked –≤–º–µ—Å—Ç–æ value, –∏ –ø–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ e.target.checked
            </p>
          </div>
          
          {/* Radio */}
          <div className="bg-gray-900/50 p-5 rounded-xl border border-cyan-700/30">
            <div className="flex items-center gap-3 mb-3">
              <div className="bg-cyan-500/20 p-2 rounded-lg">
                <ToggleLeft className="w-5 h-5 text-cyan-400" />
              </div>
              <h3 className="text-lg font-bold text-cyan-300">–†–∞–¥–∏–æ-–∫–Ω–æ–ø–∫–∏ (input type="radio")</h3>
            </div>
            <div className="bg-gray-800 p-3 rounded-lg mb-3">
              <pre className="text-cyan-300 text-sm"><code>{`const [selectedValue, setSelectedValue] = useState('');\n\n<div>\n  <label>\n    <input \n      type="radio" \n      value="option1" \n      checked={selectedValue === 'option1'} \n      onChange={(e) => setSelectedValue(e.target.value)} \n    />\n    –û–ø—Ü–∏—è 1\n  </label>\n  <label>\n    <input \n      type="radio" \n      value="option2" \n      checked={selectedValue === 'option2'} \n      onChange={(e) => setSelectedValue(e.target.value)} \n    />\n    –û–ø—Ü–∏—è 2\n  </label>\n</div>`}</code></pre>
            </div>
            <p className="text-gray-400 text-xs">
              –ö–∞–∂–¥–∞—è —Ä–∞–¥–∏–æ-–∫–Ω–æ–ø–∫–∞ –∏–º–µ–µ—Ç value, –∞ checked –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ–º —Å –æ–±—â–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
            </p>
          </div>
        </div>
      </div>

      {/* –°–ª–æ–∂–Ω—ã–µ —Ñ–æ—Ä–º—ã –∏ –æ–±—ä–µ–∫—Ç—ã —Å–æ—Å—Ç–æ—è–Ω–∏—è */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <h2 className="flex items-center gap-2 text-xl font-bold text-white mb-4">
          <FileText className="w-5 h-5 text-orange-400" />
          –°–ª–æ–∂–Ω—ã–µ —Ñ–æ—Ä–º—ã –∏ –æ–±—ä–µ–∫—Ç—ã —Å–æ—Å—Ç–æ—è–Ω–∏—è
        </h2>
        <div className="prose prose-invert max-w-none text-gray-300 leading-relaxed">
          <p>
            –î–ª—è —Ñ–æ—Ä–º —Å –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –ø–æ–ª–µ–π —É–¥–æ–±–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å <span className="font-medium">–æ–¥–∏–Ω –æ–±—ä–µ–∫—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è</span>, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–µ–π. –≠—Ç–æ —É–ø—Ä–æ—â–∞–µ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º—ã.
          </p>
        </div>
        
        <div className="mt-6 bg-gray-900/50 p-5 rounded-xl border border-yellow-700/30">
          <div className="flex items-center gap-3 mb-3">
            <div className="bg-yellow-500/20 p-2 rounded-lg">
              <FileText className="w-5 h-5 text-yellow-400" />
            </div>
            <h3 className="text-lg font-bold text-yellow-300">–§–æ—Ä–º–∞ —Å –æ–±—ä–µ–∫—Ç–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è</h3>
          </div>
          <div className="bg-gray-800 p-3 rounded-lg mb-3">
            <pre className="text-yellow-300 text-sm"><code>{`import { useState } from 'react';\n\nfunction UserProfileForm() {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    age: '',\n    bio: ''\n  });\n  \n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log('–î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã:', formData);\n  };\n  \n  return (\n    <form onSubmit={handleSubmit}>\n      <input \n        type="text" \n        name="name" \n        value={formData.name} \n        onChange={handleChange} \n        placeholder="–ò–º—è"\n      />\n      <input \n        type="email" \n        name="email" \n        value={formData.email} \n        onChange={handleChange} \n        placeholder="Email"\n      />\n      <input \n        type="number" \n        name="age" \n        value={formData.age} \n        onChange={handleChange} \n        placeholder="–í–æ–∑—Ä–∞—Å—Ç"\n      />\n      <textarea \n        name="bio" \n        value={formData.bio} \n        onChange={handleChange} \n        placeholder="–ë–∏–æ–≥—Ä–∞—Ñ–∏—è"\n      />\n      <button type="submit">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>\n    </form>\n  );\n}`}</code></pre>
          </div>
          <p className="text-gray-400 text-xs">
            –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—ã—á–∏—Å–ª—è–µ–º—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–∞ <code className="bg-gray-700 px-1 rounded">{'[name]: value'}</code> –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—è
          </p>
        </div>
        
        <div className="mt-6 bg-gray-900/50 p-5 rounded-xl border border-green-700/30">
          <div className="flex items-center gap-3 mb-3">
            <div className="bg-green-500/20 p-2 rounded-lg">
                <Edit3 className="w-5 h-5 text-green-400" />
              </div>
              <h3 className="text-lg font-bold text-green-300">–§–æ—Ä–º–∞ —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π</h3>
            </div>
            <div className="bg-gray-800 p-3 rounded-lg mb-3">
              <pre className="text-green-300 text-sm"><code>{`import { useState } from 'react';\n\nfunction ValidatedForm() {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({});\n  \n  const validate = () => {\n    const newErrors = {};\n    if (!formData.email) {\n      newErrors.email = 'Email –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email';\n    }\n    if (!formData.password) {\n      newErrors.password = '–ü–∞—Ä–æ–ª—å –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω';\n    } else if (formData.password.length < 6) {\n      newErrors.password = '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 6 —Å–∏–º–≤–æ–ª–æ–≤';\n    }\n    return newErrors;\n  };\n  \n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª—è\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const formErrors = validate();\n    if (Object.keys(formErrors).length === 0) {\n      console.log('–§–æ—Ä–º–∞ –≤–∞–ª–∏–¥–Ω–∞:', formData);\n      // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö\n    } else {\n      setErrors(formErrors);\n    }\n  };\n  \n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <input \n          type="email" \n          name="email" \n          value={formData.email} \n          onChange={handleChange} \n          placeholder="Email"\n        />\n        {errors.email && <span className="error">{errors.email}</span>}\n      </div>\n      <div>\n        <input \n          type="password" \n          name="password" \n          value={formData.password} \n          onChange={handleChange} \n          placeholder="–ü–∞—Ä–æ–ª—å"\n        />\n        {errors.password && <span className="error">{errors.password}</span>}\n      </div>\n      <button type="submit">–í–æ–π—Ç–∏</button>\n    </form>\n  );\n}`}</code></pre>
            </div>
            <p className="text-gray-400 text-xs">
              –†–∞–∑–¥–µ–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–æ—Ä–º—ã –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—à–∏–±–æ–∫ –¥–ª—è –ª—É—á—à–µ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–¥–∞
            </p>
          </div>
        </div>

      {/* –ó–∞–∫–ª—é—á–µ–Ω–∏–µ */}
      <div className="bg-gray-800/40 backdrop-blur-sm border border-gray-700/50 rounded-2xl p-6 shadow-xl">
        <div className="flex items-start gap-3">
          <div className="bg-green-500/20 p-2 rounded-lg flex-shrink-0">
            <Edit3 className="w-5 h-5 text-green-400" />
          </div>
          <div>
            <h3 className="font-bold text-white mb-2">–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! üéâ</h3>
            <p className="text-gray-300">
              –¢–µ–ø–µ—Ä—å –≤—ã –ø–æ–Ω–∏–º–∞–µ—Ç–µ, —á—Ç–æ —Ç–∞–∫–æ–µ —É–ø—Ä–∞–≤–ª—è–µ–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≤ React –∏ –∫–∞–∫ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Ñ–æ—Ä–º—ã —Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ–ª–µ–π —Å–æ state. –í—ã –Ω–∞—É—á–∏–ª–∏—Å—å —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã (input, textarea, select, checkbox, radio) –∏ —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å —Å–ª–æ–∂–Ω—ã–µ —Ñ–æ—Ä–º—ã —Å –æ–±—ä–µ–∫—Ç–∞–º–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è. –£–ø—Ä–∞–≤–ª—è–µ–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ—Å—Ç—å –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –¥–∞–Ω–Ω—ã–º–∏ —Ñ–æ—Ä–º—ã, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–º –ø–æ–¥—Ö–æ–¥–æ–º –≤ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ —Å–ª—É—á–∞–µ–≤. –í —Å–ª–µ–¥—É—é—â–∏—Ö —É—Ä–æ–∫–∞—Ö –º—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –Ω–µ—É–ø—Ä–∞–≤–ª—è–µ–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã, –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—É—é –≤–∞–ª–∏–¥–∞—Ü–∏—é —Ñ–æ—Ä–º –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–æ—Ä–º–∞–º–∏.
            </p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Part1;