export default {
  id: 3,
  title: "Синтаксис и структура CSS",
  contentBlocks: [
    {
      type: 'text',
      text: `
        <p>
          <strong>CSS</strong> — это язык стилей, состоящий из правил, которые браузер использует для определения того, как выглядит и располагается HTML-контент.
          Чтобы эффективно работать с CSS, важно понимать его синтаксис и структуру.
        </p>
      `
    },
    {
      type: 'text',
      text: `
        <h3 class="font-bold mt-4 mb-2">Основное правило CSS</h3>
        <p>
          Любое CSS-правило состоит из двух основных частей:
        </p>
        <ul class="list-disc pl-5 space-y-1 mb-4">
          <li><strong>Селектор</strong> — указывает, к какому элементу (или группе элементов) будут применены стили;</li>
          <li><strong>Блок объявлений</strong> — содержит одно или несколько свойств и их значений, заключённых в фигурные скобки.</li>
        </ul>
      `
    },
    {
      type: 'code',
      code: `/* Пример простого CSS-правила */\np {\n  color: blue;\n  font-size: 16px;\n}`
    },
    {
      type: 'text',
      text: `
        <p>
          В этом примере:
        </p>
        <ul class="list-disc pl-5 space-y-1 mb-4">
          <li><code>p</code> — селектор;</li>
          <li><code>{...}</code> — блок объявлений;</li>
          <li><code>color</code>, <code>font-size</code> — свойства;</li>
          <li><code>blue</code>, <code>16px</code> — значения свойств.</li>
        </ul>
      `
    },
    {
      type: 'text',
      text: `
        <h3 class="font-bold mt-4 mb-2">Группировка селекторов</h3>
        <p>
          Если вы хотите применить одни и те же стили к разным элементам, можно использовать группировку через запятую:
        </p>
      `
    },
    {
      type: 'code',
      code: `h1, h2, h3 {\n  color: green;\n}`
    },
    {
      type: 'text',
      text: `
        <p>
          Это правило применяет зелёный цвет текста ко всем заголовкам от <code>h1</code> до <code>h3</code>.
        </p>
      `
    },
    {
      type: 'text',
      text: `
        <h3 class="font-bold mt-4 mb-2">Комментарии в CSS</h3>
        <p>
          Комментарии помогают описывать код, временно отключать стили или делиться информацией с другими разработчиками. 
          Они игнорируются браузером при обработке CSS.
        </p>
      `
    },
    {
      type: 'code',
      code: `/* Это комментарий в CSS */\nh1 {\n  color: red; /* Цвет заголовка */\n}`
    },
    {
      type: 'text',
      text: `
        <h3 class="font-bold mt-4 mb-2">Приоритет и каскадность стилей</h3>
        <p>
          Слово <strong>Cascading</strong> в названии CSS означает «каскад». Это важная особенность, которая влияет на то, какие стили будут применены, если они конфликтуют.
        </p>
        <p>
          Приоритет зависит от:
        </p>
        <ul class="list-disc pl-5 space-y-1 mb-4">
          <li><strong>Источника стиля</strong> (инлайновые &gt; внутренние &gt; внешние);</li>
          <li><strong>Специфичности селектора</strong> (чем точнее селектор, тем выше приоритет);</li>
          <li><strong>Порядка объявления</strong> (последнее правило обычно перезаписывает предыдущее).</li>
        </ul>
      `
    },
    {
      type: 'text',
      text: `
        <h4 class="font-semibold mt-3 mb-2">Пример:</h4>
      `
    },
    {
      type: 'code',
      code: `p {\n  color: red;\n}\np {\n  color: blue;\n}`
    },
    {
      type: 'text',
      text: `
        <p>
          Параграф будет окрашен в <strong>синий</strong> цвет, так как последнее правило имеет приоритет.
        </p>
      `
    },
    {
      type: 'text',
      text: `
        <h3 class="font-bold mt-4 mb-2">Специфичность селекторов</h3>
        <p>
          Некоторые селекторы имеют более высокий приоритет. Вот как они ранжируются (по возрастанию):
        </p>
        <ul class="list-disc pl-5 space-y-1 mb-4">
          <li><strong>Тип элемента</strong> (например, <code>div</code>) — самый низкий приоритет;</li>
          <li><strong>Класс, псевдоклассы</strong> (например, <code>.my-class</code>, <code>:hover</code>);</li>
          <li><strong>ID</strong> (например, <code>#my-id</code>) — очень высокий приоритет;</li>
          <li><strong>!important</strong> — принудительное применение стиля (лучше использовать редко).</li>
        </ul>
      `
    },
    {
      type: 'text',
      text: `
        <h4 class="font-semibold mt-3 mb-2">Пример специфичности:</h4>
      `
    },
    {
      type: 'code',
      code: `.text-blue {\n  color: blue;\n}\n#main-text {\n  color: red;\n}`
    },
    {
      type: 'text',
      text: `
        <p>
          Даже если класс <code>.text-blue</code> указан позже, ID <code>#main-text</code> имеет более высокую специфичность и перекроет его.
        </p>
      `
    },
    {
      type: 'text',
      text: `
        <h3 class="font-bold mt-4 mb-2">Наследование стилей</h3>
        <p>
          Некоторые стили передаются дочерним элементам от родителя. Например, если задать цвет текста для тега <code>&lt;body&gt;</code>, 
          он будет применён ко всем дочерним элементам, если не указано иное.
        </p>
      `
    },
    {
      type: 'text',
      text: `
        <h3 class="font-bold mt-4 mb-2">Организация кода</h3>
        <p>
          Чтобы сделать CSS читаемым и поддерживаемым, соблюдайте следующие рекомендации:
        </p>
        <ul class="list-disc pl-5 space-y-1 mb-4">
          <li>Разделяйте логически связанные стили на группы;</li>
          <li>Добавляйте комментарии для сложных участков;</li>
          <li>Используйте понятные имена классов;</li>
          <li>Следите за порядком объявлений (например: размеры → цвета → расположение).</li>
        </ul>
      `
    }
  ],
  task: "Создайте CSS-файл, где вы примените стили к нескольким элементам, используя группировку селекторов и комментарии.",
  exampleAnswer: "/* Общие стили для заголовков */\nh1, h2 {\n  color: #333;\n  font-family: sans-serif;\n}\n\n/* Стиль для обычного текста */\np {\n  font-size: 16px;\n  line-height: 1.5;\n}"
};